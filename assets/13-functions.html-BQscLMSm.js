import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as l,o as e}from"./app-DNjz51Az.js";const p="/assets/image-20250703160410295-_pq71A1H.png",o={};function t(c,s){return e(),a("div",null,s[0]||(s[0]=[l(`<h2 id="_1-函数的概念" tabindex="-1"><a class="header-anchor" href="#_1-函数的概念"><span>1. 函数的概念</span></a></h2><h3 id="_1-1-数学函数与计算机函数" tabindex="-1"><a class="header-anchor" href="#_1-1-数学函数与计算机函数"><span>1.1 数学函数与计算机函数</span></a></h3><p>数学函数：y = f(x)</p><p>计算机函数：代码片段</p><ul><li>一段具有特定功能的、可重复使用的代码。</li><li>用函数名表示并通过函数名完成调用。</li></ul><h3 id="_1-2-使用函数的意义" tabindex="-1"><a class="header-anchor" href="#_1-2-使用函数的意义"><span>1.2 使用函数的意义</span></a></h3><ul><li>代码的重复利用（实际上也会把代码导入进来，但是肉眼上看只需要函数名）；</li><li>减少程序中代码的重复量，使代码更加容易被理解；</li><li>让代码更易于维护与更新，只需修改封装的函数代码，其他调用的地方都会随之修改。</li></ul><h2 id="_2-函数的使用" tabindex="-1"><a class="header-anchor" href="#_2-函数的使用"><span>2. 函数的使用</span></a></h2><p>函数可分为内置函数和用户自定义函数：</p><p>内置函数：</p><ul><li>Python 编程语言中已经被定好功能的函数。</li><li>可以直接调用来执行特定的任务。</li></ul><p>用户自定义函数：</p><ul><li>函数的功能和使用方法都由用户决定。</li></ul><h3 id="_2-1-内置函数" tabindex="-1"><a class="header-anchor" href="#_2-1-内置函数"><span>2.1 内置函数</span></a></h3><p>输出函数：<code>print()</code></p><p>获取用户输入的函数：<code>input()</code></p><p>类型转换函数：<code>int()</code> , <code>float()</code> , <code>str()</code> 等。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">a </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> abs</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(a)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">b </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;12&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">c </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 13</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(b</span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;">c)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#AE81FF;">1</span></span>
<span class="line"><span style="color:#AE81FF;">25</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-内置标准函数库—-math-函数" tabindex="-1"><a class="header-anchor" href="#_2-2-内置标准函数库—-math-函数"><span>2.2 内置标准函数库— math 函数</span></a></h3><p>除了内置函数外，Python 还有内置的标准函数库。</p><p>当我们把这些额外的函数库导入到我们的程序里时，我们可以用这些函数库中提供的方法。</p><p>访问这些函数时需要以 <strong>库名.函数名</strong> 的方式来应用。</p><p><strong>常用 math 函数总结</strong></p><table><thead><tr><th>常用函数</th><th>作用</th><th>常见用途</th></tr></thead><tbody><tr><td><code>pi</code>, <code>e</code></td><td>常数</td><td>圆形、指数运算</td></tr><tr><td><code>sqrt</code></td><td>平方根</td><td>几何、方差</td></tr><tr><td><code>pow</code></td><td>幂运算</td><td>计算 x^y</td></tr><tr><td><code>exp</code></td><td>e 的幂</td><td>指数增长</td></tr><tr><td><code>log</code></td><td>对数</td><td>信息论、熵</td></tr><tr><td><code>factorial</code></td><td>阶乘</td><td>排列组合</td></tr><tr><td><code>gcd</code></td><td>最大公约数</td><td>分数约简</td></tr><tr><td><code>fabs</code></td><td>绝对值</td><td>距离</td></tr><tr><td><code>floor</code>, <code>ceil</code></td><td>向下/向上取整</td><td>分段</td></tr><tr><td><code>trunc</code></td><td>截断</td><td>舍去小数</td></tr><tr><td><code>sin</code>, <code>cos</code>, <code>tan</code></td><td>三角函数</td><td>角度、波形</td></tr><tr><td><code>asin</code>, <code>acos</code>, <code>atan</code></td><td>反三角</td><td>计算角度</td></tr><tr><td><code>radians</code>, <code>degrees</code></td><td>度 ↔ 弧度</td><td>单位转换</td></tr><tr><td><code>isclose</code></td><td>浮点数比较</td><td>相等判断</td></tr><tr><td><code>hypot</code></td><td>斜边</td><td>距离</td></tr></tbody></table><h4 id="_2-2-1-math-pi-和-math-e" tabindex="-1"><a class="header-anchor" href="#_2-2-1-math-pi-和-math-e"><span>2.2.1 <code>math.pi</code> 和 <code>math.e</code></span></a></h4><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> math</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;π = &#39;</span><span style="color:#F8F8F2;">, math.pi)     </span><span style="color:#88846F;"># π =  3.141592653589793</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;e = &#39;</span><span style="color:#F8F8F2;">, math.e)      </span><span style="color:#88846F;"># e =  2.718281828459045</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>math.pi</code> 在计算圆面积、圆周长时常用。</p><p><code>math.e</code> 在指数运算、自然对数等场景常用。</p><h4 id="_2-2-2-math-sqrt-x-开平方" tabindex="-1"><a class="header-anchor" href="#_2-2-2-math-sqrt-x-开平方"><span>2.2.2 <code>math.sqrt(x)</code> 开平方</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> math</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">x </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 16</span></span>
<span class="line"><span style="color:#F8F8F2;">result </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> math.sqrt(x)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">x</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> 的平方根是 </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">result</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">)    </span><span style="color:#88846F;"># 4.0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>等价于 <code>x ** 0.5</code> ，但是<code>math.sqrt(x)</code> 的可读性更好。</p><h4 id="_2-2-3-math-pow-x-y-幂" tabindex="-1"><a class="header-anchor" href="#_2-2-3-math-pow-x-y-幂"><span>2.2.3 <code>math.pow(x, y)</code> 幂</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> math</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">result </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> math.pow(</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;2 的 3 次幂 = &#39;</span><span style="color:#F8F8F2;">, result)      </span><span style="color:#88846F;"># 8.0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>与内置的 <code>**</code> 运算符类似，但 <code>math.pow()</code> 总是返回 **<code>float</code> ** 。</p><h4 id="_2-2-4-math-exp-x-e-的几次幂" tabindex="-1"><a class="header-anchor" href="#_2-2-4-math-exp-x-e-的几次幂"><span>2.2.4 <code>math.exp(x)</code> e 的几次幂</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> math</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">result </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> math.exp(</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;e 的 2 次幂 = &#39;</span><span style="color:#F8F8F2;">, result)      </span><span style="color:#88846F;"># 7.38905609893065</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>计算指数增长很常用，比如复利、连续增长。</p><h4 id="_2-2-5-math-log-x-base-源代码显示-实际-math-log-x-base" tabindex="-1"><a class="header-anchor" href="#_2-2-5-math-log-x-base-源代码显示-实际-math-log-x-base"><span>2.2.5 <code>math.log(x[ , base])</code> （源代码显示，实际 <code>math.log(x, base)</code> ）</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> math</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(math.log(</span><span style="color:#AE81FF;">8</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">))      </span><span style="color:#88846F;"># 3.0 以2为底， 2^3 = 8</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(math.log(</span><span style="color:#AE81FF;">10</span><span style="color:#F8F8F2;">))        </span><span style="color:#88846F;"># ln(10) 自然对数，不写以 e 为底</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>math.log(x)</code> → 自然对数（以 e 为底）</p><p><code>math.log10(x)</code> → 以 10 为底</p><p><code>math.log2(x)</code> → 以 2 为底 （Python 3.3+）</p><h4 id="_2-2-6-math-factorial-x-阶乘" tabindex="-1"><a class="header-anchor" href="#_2-2-6-math-factorial-x-阶乘"><span>2.2.6 <code>math.factorial(x)</code> 阶乘</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> math</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(math.factorial(</span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">))    </span><span style="color:#88846F;"># 120， 指的是 5！ = 5 * 4 * 3 * 2 * 1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>常用于组合、排列、概率</p><h4 id="_2-2-7-math-gcd-a-b-最大公约数" tabindex="-1"><a class="header-anchor" href="#_2-2-7-math-gcd-a-b-最大公约数"><span>2.2.7 <code>math.gcd(a, b)</code> 最大公约数</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> math</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(math.gcd(</span><span style="color:#AE81FF;">12</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">18</span><span style="color:#F8F8F2;">))    </span><span style="color:#88846F;"># 6</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>求最大公约数，常用于分数约简等。</p><h4 id="_2-2-8-math-fabs-x-绝对值-返回浮点数" tabindex="-1"><a class="header-anchor" href="#_2-2-8-math-fabs-x-绝对值-返回浮点数"><span>2.2.8 <code>math.fabs(x)</code> 绝对值，返回浮点数</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> math</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(math.fabs(</span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">7</span><span style="color:#F8F8F2;">))    </span><span style="color:#88846F;"># 7.0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>类似内置 <code>abs()</code> ，只是 <code>math.fabs</code> 返回浮点数。</p><h4 id="_2-2-9-math-floor-x-和-math-ceil-x" tabindex="-1"><a class="header-anchor" href="#_2-2-9-math-floor-x-和-math-ceil-x"><span>2.2.9 <code>math.floor(x)</code> 和 <code>math.ceil(x)</code></span></a></h4><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> math</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">x </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 3.7</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(math.floor(x))     </span><span style="color:#88846F;"># 3</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(math.ceil(x))      </span><span style="color:#88846F;"># 4</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>floor</code> 常用于取不超过给定值的最大整数。</p><p><code>ceil</code> 用于取不小于给定值的最小整数。</p><h4 id="_2-2-10-math-trunc-x-截断小数部分" tabindex="-1"><a class="header-anchor" href="#_2-2-10-math-trunc-x-截断小数部分"><span>2.2.10 <code>math.trunc(x)</code> 截断小数部分</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> math</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">x </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> -</span><span style="color:#AE81FF;">3.7</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(math.trunc(x))     </span><span style="color:#88846F;"># -3</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>类似 <code>int()</code> 转换，直接去掉小数部分，<strong>不四舍五入</strong>。</p><h4 id="_2-2-11-三角函数-sin-cos-tan" tabindex="-1"><a class="header-anchor" href="#_2-2-11-三角函数-sin-cos-tan"><span>2.2.11 三角函数 sin cos tan</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> math</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">angle </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> math.pi </span><span style="color:#F92672;">/</span><span style="color:#AE81FF;"> 2</span><span style="color:#88846F;">        # 90度</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(math.sin(angle))     </span><span style="color:#88846F;"># 1.0</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(math.cos(angle))     </span><span style="color:#88846F;"># 6.123233995736766e-17 ≈ 0</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(math.tan(angle))     </span><span style="color:#88846F;"># 非常大，趋于无穷</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意角度要先转换成弧度：<code>radians = degrees(角度) × π / 180</code> 。</p><p>遵循数学库的通用标准</p><p>π/2 弧度 = 90 度</p><p>π 弧度 = 180 度</p><p>因此利用公式， <code>line4</code> 也可以写为 <code>print(math.sin(90 * math.pi / 180)) # 1.0</code> 。</p><p>也可以利用函数 <code>angle = math.radians(degress)</code> ，将度数转化为弧度 <code>print(math.sin(math.radians(90))) </code>。</p><h4 id="_2-2-12-反三角函数-asin-acos-atan" tabindex="-1"><a class="header-anchor" href="#_2-2-12-反三角函数-asin-acos-atan"><span>2.2.12 反三角函数 asin acos atan</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> math</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">x </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0.5</span></span>
<span class="line"><span style="color:#F8F8F2;">angle </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> math.asin(x)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;asin(0.5) = &#39;</span><span style="color:#F8F8F2;">, angle, </span><span style="color:#E6DB74;">&#39;弧度&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;≈&#39;</span><span style="color:#F8F8F2;">, math.degrees(angle), </span><span style="color:#E6DB74;">&#39;度&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">asin(</span><span style="color:#AE81FF;">0.5</span><span style="color:#F8F8F2;">) </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">  0.5235987755982989</span><span style="color:#F8F8F2;"> 弧度</span></span>
<span class="line"><span style="color:#F8F8F2;">≈ </span><span style="color:#AE81FF;">30.000000000000004</span><span style="color:#F8F8F2;"> 度</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-2-13-math-hypot-x-y" tabindex="-1"><a class="header-anchor" href="#_2-2-13-math-hypot-x-y"><span>2.2.13 <code>math.hypot(x, y)</code></span></a></h4><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> math</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(math.hypot(</span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">))    </span><span style="color:#88846F;"># 5.0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>常用于2D平面距离计算。</p><h3 id="_2-3-内置标准函数库—-random-函数" tabindex="-1"><a class="header-anchor" href="#_2-3-内置标准函数库—-random-函数"><span>2.3 内置标准函数库— random 函数</span></a></h3><h4 id="_2-3-1-1️⃣-基础随机数生成" tabindex="-1"><a class="header-anchor" href="#_2-3-1-1️⃣-基础随机数生成"><span>2.3.1 1️⃣ 基础随机数生成</span></a></h4><table><thead><tr><th>函数</th><th>用途</th><th>解释</th></tr></thead><tbody><tr><td><code>random()</code></td><td>生成 0.0 ~ 1.0 之间的随机小数</td><td>左闭右开 [0.0, 1.0)</td></tr><tr><td><code>uniform(a, b)</code></td><td>生成 a ~ b 之间的随机小数</td><td>左闭右闭 [a, b]</td></tr><tr><td><code>randint(a, b)</code></td><td>生成 a ~ b 之间的随机整数</td><td>左闭右闭 [a, b]</td></tr><tr><td><code>randrange(start, stop[, step])</code></td><td>从 range(start, stop, step) 中随机选一个整数</td><td>类似 <code>range()</code></td></tr></tbody></table><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> random</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(random.random())</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(random.uniform(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">10</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(random.randint(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">10</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(random.randrange(</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">100</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#AE81FF;">0.7533060472818913</span></span>
<span class="line"><span style="color:#AE81FF;">4.265715521633123</span></span>
<span class="line"><span style="color:#AE81FF;">8</span></span>
<span class="line"><span style="color:#AE81FF;">5</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>保留小数时，可以用前面学到的格式化方法，也可以用<code>round</code> 。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">round</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">10.111</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">)) </span><span style="color:#88846F;"># 四舍五入，保留两位小数</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#AE81FF;">10.11</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-3-2-2️⃣-随机选择与打乱" tabindex="-1"><a class="header-anchor" href="#_2-3-2-2️⃣-随机选择与打乱"><span>2.3.2 2️⃣ 随机选择与打乱</span></a></h4><table><thead><tr><th>函数</th><th>用途</th><th>解释</th></tr></thead><tbody><tr><td><code>choice(seq)</code></td><td>从序列中随机选 1 个元素</td><td>列表、元组、字符串都行</td></tr><tr><td><code>choices(seq, k=N)</code></td><td>从序列中随机选 N 个（可重复）</td><td>有放回抽样</td></tr><tr><td><code>sample(seq, k=N)</code></td><td>从序列中随机选 N 个（不重复）</td><td>无放回抽样</td></tr><tr><td><code>shuffle(seq)</code></td><td>将序列原地打乱</td><td>修改原列表</td></tr></tbody></table><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> random</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">items </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#E6DB74;">&#39;apple&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;banana&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;orange&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;pear&#39;</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(random.choice(items))     </span><span style="color:#88846F;"># 随机选一个</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(random.choices(items, </span><span style="color:#FD971F;font-style:italic;">k</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">))    </span><span style="color:#88846F;"># 随机选 3 个，可重复</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(random.sample(items, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">))     </span><span style="color:#88846F;"># 随机选 3 个，不重复</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">orange</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#E6DB74;">&#39;orange&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;pear&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;orange&#39;</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#E6DB74;">&#39;orange&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;apple&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;pear&#39;</span><span style="color:#F8F8F2;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> random</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">numbers </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">random.shuffle(numbers)     </span><span style="color:#88846F;"># 原地打乱</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(numbers)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-3-3-3️⃣-随机分布函数-稍进阶" tabindex="-1"><a class="header-anchor" href="#_2-3-3-3️⃣-随机分布函数-稍进阶"><span>2.3.3 3️⃣ 随机分布函数（稍进阶）</span></a></h4><table><thead><tr><th>函数</th><th>用途</th><th>解释</th></tr></thead><tbody><tr><td><code>betavariate(alpha, beta)</code></td><td>Beta 分布</td><td></td></tr><tr><td><code>expovariate(lambd)</code></td><td>指数分布</td><td></td></tr><tr><td><code>gauss(mu, sigma)</code></td><td>高斯正态分布</td><td></td></tr><tr><td><code>normalvariate(mu, sigma)</code></td><td>正态分布</td><td></td></tr><tr><td><code>lognormvariate(mu, sigma)</code></td><td>对数正态分布</td><td></td></tr><tr><td><code>vonmisesvariate(mu, kappa)</code></td><td>von Mises 分布</td><td></td></tr><tr><td><code>gammavariate(alpha, beta)</code></td><td>Gamma 分布</td><td></td></tr></tbody></table><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> random</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(random.gauss(</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">))            </span><span style="color:#88846F;"># 均值0，标准差1的正态分布</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(random.normalvariate(</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">))    </span><span style="color:#88846F;"># 同样生成正态分布，与上一个生成的正态分布的方法不一样</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(random.expovariate(</span><span style="color:#AE81FF;">1.5</span><span style="color:#F8F8F2;">))       </span><span style="color:#88846F;"># 指数分布</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#AE81FF;">0.28990359456330556</span></span>
<span class="line"><span style="color:#AE81FF;">0.18178579651038132</span></span>
<span class="line"><span style="color:#AE81FF;">0.27150452972659767</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出的结果是一组数据中随机选了一个输出，如果需要输出多个数据，可以借助 for 循环：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> random</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">lst </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> []</span></span>
<span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> _ </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;"> range</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">):      </span><span style="color:#88846F;"># 生成 5 个数据，因为 i 后续用不到，可以用下划线代替</span></span>
<span class="line"><span style="color:#F8F8F2;">    lst.append(random.gauss(</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(lst)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">1.7322778531816645</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">1.5177947097095652</span><span style="color:#F8F8F2;">, </span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">1.4917899545932514</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0.7663045647487722</span><span style="color:#F8F8F2;">, </span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">0.0974832602527749</span><span style="color:#F8F8F2;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>场景使用：</strong></p><p>需要安装 <code>matplotlib</code> 包，安装失败的话需要关闭代理后再尝试。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> random</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> matplotlib.pyplot </span><span style="color:#F92672;">as</span><span style="color:#F8F8F2;"> plt</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 生成 1000 个指数分布随机数</span></span>
<span class="line"><span style="color:#F8F8F2;">expo_nums </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [random.expovariate(</span><span style="color:#AE81FF;">1.5</span><span style="color:#F8F8F2;">) </span><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> _ </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;"> range</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">1000</span><span style="color:#F8F8F2;">)]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 画直方图</span></span>
<span class="line"><span style="color:#F8F8F2;">plt.hist(expo_nums, </span><span style="color:#FD971F;font-style:italic;">bins</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">30</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">density</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">True</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">edgecolor</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;">&#39;black&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">plt.title(</span><span style="color:#E6DB74;">&#39;Exponential Distribution (lambda=1.5)&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">plt.xlabel(</span><span style="color:#E6DB74;">&#39;Value&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">plt.ylabel(</span><span style="color:#E6DB74;">&#39;Density&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">plt.show()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果如下：</p><figure><img src="`+p+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="_3-函数的定义" tabindex="-1"><a class="header-anchor" href="#_3-函数的定义"><span>3. 函数的定义</span></a></h2><h3 id="_3-1-定义一个函数" tabindex="-1"><a class="header-anchor" href="#_3-1-定义一个函数"><span>3.1 定义一个函数</span></a></h3><p><code>def</code> 是 <code>define</code> 的缩写，表示定义一个函数。</p><p>格式如下：</p><p><code>def 函数名称():</code></p><p>​ <code>函数内的语句</code></p><p>当我们需要这个函数的时候，直接写 <code>函数名称+()</code> 即可。</p><p><strong>注意函数名称中间不要有空格，可以用下划线代替。</strong></p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> HelloUser</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Hello&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">HelloUser()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">Hello</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-利用参数向函数传递信息" tabindex="-1"><a class="header-anchor" href="#_3-2-利用参数向函数传递信息"><span>3.2 利用参数向函数传递信息</span></a></h3><h4 id="_3-2-1-传递一个参数" tabindex="-1"><a class="header-anchor" href="#_3-2-1-传递一个参数"><span>3.2.1 传递一个参数</span></a></h4><p>函数名称后的括号内可以输入参数，定义函数时可以对参数进行命名，调用函数时在括号内输入该参数的内容即可。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> HelloUser</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">username</span><span style="color:#F8F8F2;">):             </span><span style="color:#88846F;">#括号内为参数</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Hello! &quot;</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> username)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">HelloUser(</span><span style="color:#E6DB74;">&quot;lilei&quot;</span><span style="color:#F8F8F2;">)                   </span><span style="color:#88846F;">#调用函数</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">Hello! lilei</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-2-2-传递多个参数" tabindex="-1"><a class="header-anchor" href="#_3-2-2-传递多个参数"><span>3.2.2 传递多个参数</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> TestGrade</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">name</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">grade</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(name </span><span style="color:#F92672;">+</span><span style="color:#E6DB74;"> &#39;的成绩是&#39;</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> grade </span><span style="color:#F92672;">+</span><span style="color:#E6DB74;"> &#39;。&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">TestGrade(</span><span style="color:#E6DB74;">&#39;李雷&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;99&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">李雷的成绩是99。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>解决参数可能传反的问题：</p><p>若调用参数时，输入的是 <code>TestGrade(99, &#39;李雷&#39;)</code> ，那么在执行 <code>print(name + &#39;的成绩是&#39; + str(grade) + &#39;。&#39;)</code> 的时候就会报错，因为 <code>name</code> 中传入的是整型而非字符串，没有进行强制转换就无法拼接，那么为了防止传错参数，我们在调用的时候可以在参数前加上变量名。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> TestGrade</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">name</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">grade</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(name </span><span style="color:#F92672;">+</span><span style="color:#E6DB74;"> &#39;的成绩是&#39;</span><span style="color:#F92672;"> +</span><span style="color:#66D9EF;font-style:italic;"> str</span><span style="color:#F8F8F2;">(grade) </span><span style="color:#F92672;">+</span><span style="color:#E6DB74;"> &#39;。&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">TestGrade(</span><span style="color:#FD971F;font-style:italic;">grade</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">99</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">name</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &#39;李雷&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">李雷的成绩是99。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>类似的将变量名引入进行指定，参见 <code>format</code> 部分。</p><p>注意：开始指定参数变量后，后面的参数都需要指定，但前面的参数可以不指定。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> TestGrade</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">age</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">name</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">grade</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">age</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">岁的</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">的成绩是</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">grade</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> 。&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">TestGrade(</span><span style="color:#AE81FF;">18</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">name</span><span style="color:#F92672;"> =</span><span style="color:#E6DB74;"> &#39;李雷&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">grade</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 99</span><span style="color:#F8F8F2;">)     </span><span style="color:#88846F;"># 从第2个位置开始指定变量名了，之后的参数都需指定，但是可以看到第1个位置的无需指定。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F44747;">18岁的李雷的成绩是99</span><span style="color:#F8F8F2;">。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-quiz" tabindex="-1"><a class="header-anchor" href="#_3-3-quiz"><span>3.3 Quiz</span></a></h3><p>定义一个函数，含有三个参数，前两个是数字，第三个是运算符，需要得到前两个数字通过输入的运算符得到的结果。</p><p>方法一：</p><p><code>if … elif</code></p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> calculate</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">num1</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">num2</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">operator</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> operator </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;+&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">num1</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">加</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">num2</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">是</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">num1 </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> num2</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">    elif</span><span style="color:#F8F8F2;"> operator </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;-&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">num1</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">减</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">num2</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">是</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">num1 </span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;"> num2</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">    elif</span><span style="color:#F8F8F2;"> operator </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;*&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">num1</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">乘</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">num2</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">是</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">num1 </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> num2</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">    elif</span><span style="color:#F8F8F2;"> operator </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;/&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">num1</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">除</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">num2</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">是</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">num1 </span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;"> num2</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">    else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;输入错误，请重新输入！&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">calculate(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">,</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;+&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F44747;">1加2是3</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>方法二：</p><p><code>eval()</code></p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> calculate</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">num1</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">num2</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">operator</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(num1, operator, num2, </span><span style="color:#E6DB74;">&#39;=&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;">eval</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">str</span><span style="color:#F8F8F2;">(num1) </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> operator </span><span style="color:#F92672;">+</span><span style="color:#66D9EF;font-style:italic;"> str</span><span style="color:#F8F8F2;">(num2)))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">calculate(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;/&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#AE81FF;">1</span><span style="color:#F92672;"> /</span><span style="color:#AE81FF;"> 2</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 0.5</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如何优化？</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> calculate</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">num1</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">num2</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">operator</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F8F8F2;">    result </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> f</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">num1</span><span style="color:#AE81FF;">}</span><span style="color:#AE81FF;"> {</span><span style="color:#F8F8F2;">operator</span><span style="color:#AE81FF;">}</span><span style="color:#AE81FF;"> {</span><span style="color:#F8F8F2;">num2</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&#39;</span><span style="color:#88846F;">        # 利用 f 将其拼接</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">result</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> = </span><span style="color:#AE81FF;">{</span><span style="color:#66D9EF;">eval</span><span style="color:#F8F8F2;">(result)</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">)         </span><span style="color:#88846F;"># 将拼接好的直接用 eval 计算</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">calculate(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;/&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#AE81FF;">1</span><span style="color:#F92672;"> /</span><span style="color:#AE81FF;"> 2</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 0.5</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用 <code>eval</code> 的问题：只能进行简单的加减乘除运算。</p><h3 id="_3-4-函数设置默认值" tabindex="-1"><a class="header-anchor" href="#_3-4-函数设置默认值"><span>3.4 函数设置默认值</span></a></h3><p>一般我们在写函数时，可以设置默认值，便于用户在不提供具体参数值时正常使用函数，避免发生因为没有传入参数而产生的报错。另一种情况就是：函数的参数可选，此时也需要设置默认参数。</p><p>主要用途：</p><ul><li>为函数提供一个逻辑兜底：如果调用者不传递参数或者不满足某些条件，我们也希望函数能有一个合理的“默认行为”。</li><li>使参数具有可选性：有些参数并不是每次都需要提供，这时给它们设置默认值能简化函数的调用。</li></ul><p>示例如下：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> greet</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">name</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;">&#39;小明&#39;</span><span style="color:#F8F8F2;">):    </span><span style="color:#88846F;"># 简单的问候函数，如果不传入 name 参数，则使用默认值“小明”。</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;你好，</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">!&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 调用示例</span></span>
<span class="line"><span style="color:#F8F8F2;">greet()</span></span>
<span class="line"><span style="color:#F8F8F2;">greet(</span><span style="color:#E6DB74;">&#39;张三&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">你好，小明!</span></span>
<span class="line"><span style="color:#F8F8F2;">你好，张三!</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意：若只需要设置部分参数的默认值，则和前面调用函数时，引入变量的逻辑相同，未设置默认值的放前，设置默认值的放后，否则会报错。</p><p>错误示例：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> greet</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">name</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;">&#39;小明&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">age</span><span style="color:#F8F8F2;">):   </span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;你好，</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">age</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">岁的</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">!&#39;</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>正确用法：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> greet</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">age</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">name</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;">&#39;小明&#39;</span><span style="color:#F8F8F2;">,):</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;你好，</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">age</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">岁的</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">!&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 调用示例</span></span>
<span class="line"><span style="color:#F8F8F2;">greet(</span><span style="color:#AE81FF;">18</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">greet(</span><span style="color:#AE81FF;">20</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;张三&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">你好，</span><span style="color:#F44747;">18岁的小明</span><span style="color:#F8F8F2;">!</span></span>
<span class="line"><span style="color:#F8F8F2;">你好，</span><span style="color:#F44747;">20岁的张三</span><span style="color:#F8F8F2;">!</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用 <code>None</code> 作为默认值：</p><ul><li>有时我们想要将某个参数设置为可选，但不清除具体应该给它设置哪个默认值。</li><li>希望在函数内部通过判断是否真的传递这个参数。</li></ul><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> process_data</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">data</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">None</span><span style="color:#F8F8F2;">):                          </span><span style="color:#88846F;"># 若没有传入数据，使用默认文件的数据，否则处理传入的数据</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> data </span><span style="color:#F92672;">is</span><span style="color:#AE81FF;"> None</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;未提供 data 参数，使用默认数据！&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#88846F;">        # 这里就可以读取默认文件或默认数据</span></span>
<span class="line"><span style="color:#F8F8F2;">        data </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;正在处理：</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">data</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 调用示例</span></span>
<span class="line"><span style="color:#F8F8F2;">process_data()                       </span><span style="color:#88846F;"># 未提供 data 参数，使用默认数据</span></span>
<span class="line"><span style="color:#F8F8F2;">process_data([</span><span style="color:#E6DB74;">&#39;a&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;b&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;c&#39;</span><span style="color:#F8F8F2;">])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">未提供 data 参数，使用默认数据！</span></span>
<span class="line"><span style="color:#F8F8F2;">正在处理：[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">正在处理：[</span><span style="color:#E6DB74;">&#39;a&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;b&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;c&#39;</span><span style="color:#F8F8F2;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>问题：参数是可变的数据类型，若用户没有传入参数，使用默认值，那么多次调用时会互相影响。</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> append_item</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">item</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">my_list</span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;">[]):</span></span>
<span class="line"><span style="color:#F8F8F2;">    my_list.append(item)</span></span>
<span class="line"><span style="color:#F92672;">    return</span><span style="color:#F8F8F2;"> my_list</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 调用函数</span></span>
<span class="line"><span style="color:#F8F8F2;">result1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> append_item(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">)   </span><span style="color:#88846F;"># 第一次调用，my_list=[1]</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(result1)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">result2 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> append_item(</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">)    </span><span style="color:#88846F;"># 第二次调用，列表里已经有 [1] 了</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(result2)              </span><span style="color:#88846F;"># 输出为 [1, 2]，意外的把第一次调用追加进来了</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">result3 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> append_item(</span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">)    </span><span style="color:#88846F;"># 第三次调用，继续累加</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(result3)              </span><span style="color:#88846F;"># 输出 [1, 2, 3]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p><strong>如何解决这个问题？</strong></p><p>尝试一：错误</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> append_item</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">item</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">my_list</span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;">[]):</span></span>
<span class="line"><span style="color:#F8F8F2;">    my_list </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> []                </span><span style="color:#88846F;"># 增加这一步</span></span>
<span class="line"><span style="color:#F8F8F2;">    my_list.append(item)</span></span>
<span class="line"><span style="color:#F92672;">    return</span><span style="color:#F8F8F2;"> my_list</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果在函数内更改，那么不管是使用默认值和自定义值都会被这句命令覆盖掉。</p><p><strong>解决方法：</strong></p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> append_item</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">item</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">my_list</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">None</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> my_list </span><span style="color:#F92672;">is</span><span style="color:#AE81FF;"> None</span><span style="color:#F8F8F2;">:                 </span><span style="color:#88846F;"># 先判断用户有没有传入参数，若没有传入参数，再设置默认值</span></span>
<span class="line"><span style="color:#F8F8F2;">        my_list </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> []</span></span>
<span class="line"><span style="color:#F8F8F2;">    my_list.append(item)</span></span>
<span class="line"><span style="color:#F92672;">    return</span><span style="color:#F8F8F2;"> my_list</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 调用函数</span></span>
<span class="line"><span style="color:#F8F8F2;">result1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> append_item(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">)  </span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(result1)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">result2 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> append_item(</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">)   </span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(result2)              </span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">result3 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> append_item(</span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">)    </span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(result3)             </span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>其他正确情况举例：</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> append_item</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">item</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">my_list</span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;">[]):</span></span>
<span class="line"><span style="color:#F8F8F2;">    my_list.append(item)</span></span>
<span class="line"><span style="color:#F92672;">    return</span><span style="color:#F8F8F2;"> my_list</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 情况1:重新自定义传入的列表，不使用默认值，多次调用不会影响</span></span>
<span class="line"><span style="color:#F8F8F2;">result1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> append_item(</span><span style="color:#AE81FF;">10</span><span style="color:#F8F8F2;">, [</span><span style="color:#E6DB74;">&#39;a&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;b&#39;</span><span style="color:#F8F8F2;">])</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(result1)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">result2 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> append_item(</span><span style="color:#AE81FF;">20</span><span style="color:#F8F8F2;">, [</span><span style="color:#E6DB74;">&#39;c&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;d&#39;</span><span style="color:#F8F8F2;">])</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(result2)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 情况2：单独传入自定义列表，多次调用的目的就是为了逐步增加</span></span>
<span class="line"><span style="color:#F8F8F2;">lst </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#E6DB74;">&#39;a&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;b&#39;</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">result3 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> append_item(</span><span style="color:#AE81FF;">100</span><span style="color:#F8F8F2;">, lst)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(result3)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">result4 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> append_item(</span><span style="color:#AE81FF;">200</span><span style="color:#F8F8F2;">, lst)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(result4)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#E6DB74;">&#39;a&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;b&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">10</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#E6DB74;">&#39;c&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;d&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">20</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#E6DB74;">&#39;a&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;b&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">100</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#E6DB74;">&#39;a&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;b&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">100</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">200</span><span style="color:#F8F8F2;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div>`,147)]))}const F=n(o,[["render",t]]),d=JSON.parse('{"path":"/programming/python/13-functions.html","title":"13. 函数","lang":"zh-CN","frontmatter":{"title":"13. 函数","icon":"boke","date":"2025-07-03T14:01:00.000Z","author":"Ran","isOriginal":true,"sticky":false,"star":false,"article":true,"timeline":true,"image":false,"navbar":true,"sidebarIcon":true,"comment":true,"lastUpdated":true,"editLink":true,"backToTop":true,"toc":true,"description":"1. 函数的概念 1.1 数学函数与计算机函数 数学函数：y = f(x) 计算机函数：代码片段 一段具有特定功能的、可重复使用的代码。 用函数名表示并通过函数名完成调用。 1.2 使用函数的意义 代码的重复利用（实际上也会把代码导入进来，但是肉眼上看只需要函数名）； 减少程序中代码的重复量，使代码更加容易被理解； 让代码更易于维护与更新，只需修改封装...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"13. 函数\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-07-03T14:01:00.000Z\\",\\"dateModified\\":\\"2025-07-10T08:09:22.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Ran\\"}]}"],["meta",{"property":"og:url","content":"https://pythiaroot.com/programming/python/13-functions.html"}],["meta",{"property":"og:site_name","content":"Pythia’s Root"}],["meta",{"property":"og:title","content":"13. 函数"}],["meta",{"property":"og:description","content":"1. 函数的概念 1.1 数学函数与计算机函数 数学函数：y = f(x) 计算机函数：代码片段 一段具有特定功能的、可重复使用的代码。 用函数名表示并通过函数名完成调用。 1.2 使用函数的意义 代码的重复利用（实际上也会把代码导入进来，但是肉眼上看只需要函数名）； 减少程序中代码的重复量，使代码更加容易被理解； 让代码更易于维护与更新，只需修改封装..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-10T08:09:22.000Z"}],["meta",{"property":"article:author","content":"Ran"}],["meta",{"property":"article:published_time","content":"2025-07-03T14:01:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-10T08:09:22.000Z"}]]},"git":{"createdTime":1751529889000,"updatedTime":1752134962000,"contributors":[{"name":"AmaraMeng","username":"AmaraMeng","email":"ranmeng9558@gmail.com","commits":2,"url":"https://github.com/AmaraMeng"}],"changelog":[{"hash":"e97f19cf09823bd4071bbedb846d67b16b3cbcf4","time":1752134962000,"email":"ranmeng9558@gmail.com","author":"AmaraMeng","message":"Refactor function documentation: Update section titles and enhance math function summaries"},{"hash":"9f35bf99ecfac75d5b633ab63342cc8d1075ff7a","time":1751529889000,"email":"ranmeng9558@gmail.com","author":"AmaraMeng","message":"Add comprehensive documentation for Python functions, including built-in and user-defined functions, along with examples and usage of the math and random libraries."}]},"readingTime":{"minutes":11.15,"words":3344},"filePathRelative":"programming/python/13-functions.md","excerpt":"<h2>1. 函数的概念</h2>\\n<h3>1.1 数学函数与计算机函数</h3>\\n<p>数学函数：y = f(x)</p>\\n<p>计算机函数：代码片段</p>\\n<ul>\\n<li>一段具有特定功能的、可重复使用的代码。</li>\\n<li>用函数名表示并通过函数名完成调用。</li>\\n</ul>\\n<h3>1.2 使用函数的意义</h3>\\n<ul>\\n<li>代码的重复利用（实际上也会把代码导入进来，但是肉眼上看只需要函数名）；</li>\\n<li>减少程序中代码的重复量，使代码更加容易被理解；</li>\\n<li>让代码更易于维护与更新，只需修改封装的函数代码，其他调用的地方都会随之修改。</li>\\n</ul>","autoDesc":true}');export{F as comp,d as data};
