import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c,d as p,a as s,e as r,b as l,w as e,r as F,o as d}from"./app-D1uUjWt_.js";const y="/assets/string-start-end-step-C2egMxsF.svg",u={};function v(m,n){const i=F("CodeTabs");return d(),c("div",null,[n[121]||(n[121]=p(`<h2 id="_1-字符串的创建" tabindex="-1"><a class="header-anchor" href="#_1-字符串的创建"><span>1. 字符串的创建</span></a></h2><p>三种方法：</p><ol><li>单引号</li><li>双引号</li><li>三个单引号（三个双引号）</li></ol><ul><li>单引号、双引号</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &#39;I am born for this.&#39;</span><span style="color:#88846F;">    #英文表达</span></span>
<span class="line"><span style="color:#88846F;">#string = &#39;I&#39;m born for this.&#39;     # I am 缩写成 I‘m，与表示字符串的引号冲突，错误。</span></span>
<span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;I&#39;m born for this.&quot;</span><span style="color:#88846F;">     # 正确表达</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(string)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">I</span><span style="color:#E6DB74;">&#39;m born for this.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>问题：无法直接输出段落。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;我们有时候不仅仅要看选择项以内的答案，也要去思考选择项以外的答案。——AI悦创</span><span style="color:#AE81FF;">\\</span></span>
<span class="line"><span style="color:#AE81FF;">\\</span></span>
<span class="line"><span style="color:#E6DB74;">浅者见浅，深者见深——黄家宝</span><span style="color:#AE81FF;">\\</span></span>
<span class="line"><span style="color:#AE81FF;">\\</span></span>
<span class="line"><span style="color:#E6DB74;">起的最早的是理想主义者，跑的最快的是骗子，而胆子最大的是那些冒险家，害怕错过一切，疯狂往里冲的是韭菜，而真正的成功者，可能还没有入场。</span><span style="color:#AE81FF;">\\</span></span>
<span class="line"><span style="color:#AE81FF;">\\</span></span>
<span class="line"><span style="color:#E6DB74;">先实现功能，再去优化，否则一切会很乱。——AI悦创</span><span style="color:#AE81FF;">\\</span></span>
<span class="line"><span style="color:#AE81FF;">\\</span></span>
<span class="line"><span style="color:#E6DB74;">凡是你不能清晰写下来的东西，都是你还没有真正理解的东西&quot;</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(string)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------    在每行末尾增加反斜杠，虽然能解决单/双引号无法输出段落的问题，但输出的内容没有格式。</span></span>
<span class="line"><span style="color:#F8F8F2;">我们有时候不仅仅要看选择项以内的答案，也要去思考选择项以外的答案。——AI悦创浅者见浅，深者见深——黄家宝起的最早的是理想主义者，跑的最快的是骗子，而胆子最大的是那些冒险家，害怕错过一切，疯狂往里冲的是韭菜，而真正的成功者，可能还没有入场。先实现功能，再去优化，否则一切会很乱。——AI悦创凡是你不能清晰写下来的东西，都是你还没有真正理解的东西</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>三个单引号（三个双引号）</p><p>特点：段落<strong>原样输出</strong>。</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;&quot;&quot;我们有时候不仅仅要看选择项以内的答案，也要去思考选择项以外的答案。——AI悦创</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E6DB74;">浅者见浅，深者见深——黄家宝</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E6DB74;">起的最早的是理想主义者，跑的最快的是骗子，而胆子最大的是那些冒险家，害怕错过一切，疯狂往里冲的是韭菜，而真正的成功者，可能还没有入场。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E6DB74;">先实现功能，再去优化，否则一切会很乱。——AI悦创</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E6DB74;">凡是你不能清晰写下来的东西，都是你还没有真正理解的东西&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(string)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">我们有时候不仅仅要看选择项以内的答案，也要去思考选择项以外的答案。——AI悦创</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">浅者见浅，深者见深——黄家宝</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">起的最早的是理想主义者，跑的最快的是骗子，而胆子最大的是那些冒险家，害怕错过一切，疯狂往里冲的是韭菜，而真正的成功者，可能还没有入场。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">先实现功能，再去优化，否则一切会很乱。——AI悦创</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">凡是你不能清晰写下来的东西，都是你还没有真正理解的东西</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div></li></ul><h2 id="_2-字符串的长度" tabindex="-1"><a class="header-anchor" href="#_2-字符串的长度"><span>2. 字符串的长度</span></a></h2><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">paragraph </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;Hello, Ran!&quot;</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">len</span><span style="color:#F8F8F2;">(paragraph))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#AE81FF;">11</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>字符串是从1开始数，下标从左到右是从0开始，<mark>注意区分</mark>。因此，字符串长度 - 1 = 下标最大值。</p><h2 id="_3-字符串的获取" tabindex="-1"><a class="header-anchor" href="#_3-字符串的获取"><span>3. 字符串的获取</span></a></h2>`,12)),s("ol",null,[n[7]||(n[7]=p(`<li><p>获取单个字符</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;bornforthis&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">select </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string[</span><span style="color:#AE81FF;">10</span><span style="color:#F8F8F2;">]                 </span><span style="color:#88846F;"># 方法一： 1. 注意是方括号；2. 方括号内为字符串下标；3. 从左向右的下标</span></span>
<span class="line"><span style="color:#F8F8F2;">select </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string[</span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">]                 </span><span style="color:#88846F;"># 方法二： 从右向左的下标</span></span>
<span class="line"><span style="color:#F8F8F2;">select </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string[</span><span style="color:#66D9EF;">len</span><span style="color:#F8F8F2;">(string)</span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">]      </span><span style="color:#88846F;"># 方法三： 取最后一位，可以参考长度和下标的转换</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(select)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">s</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>`,1)),s("li",null,[n[6]||(n[6]=s("p",null,"获取一串连续字符",-1)),s("ul",null,[n[5]||(n[5]=p(`<li><p>方法一：从左向右取下标</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;bornforthis&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">select </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">]      </span><span style="color:#88846F;">#中括号内第一位数字表示字符串开始位置的下标，第二位数字表示结束位置的下标+1，用数学解释即 [0, 4)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(select)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">born</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>`,1)),s("li",null,[n[4]||(n[4]=s("p",null,[l("方法二：从右向左取下标（右数第一位下标是 ``-1"),s("code",null,"如何实现"),l("end + 1`？）")],-1)),r(i,{id:"78",data:[{id:"错误取负数下标"},{id:"正确取负数下标"}]},{title0:e(({value:a,isActive:o})=>n[0]||(n[0]=[l("错误取负数下标")])),title1:e(({value:a,isActive:o})=>n[1]||(n[1]=[l("正确取负数下标")])),tab0:e(({value:a,isActive:o})=>n[2]||(n[2]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string2 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "bornforthis"')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"select2 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string2["),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#AE81FF"}},"4"),s("span",{style:{color:"#F8F8F2"}},":"),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},"]")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(select2)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"thi")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:e(({value:a,isActive:o})=>n[3]||(n[3]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string2 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "bornforthis"')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"select2 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string2["),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#AE81FF"}},"4"),s("span",{style:{color:"#F8F8F2"}},":]      "),s("span",{style:{color:"#88846F"}},"#-4 是负数下标，end 处空白默认从左向右取到字符串的最后，就不需要考虑 end + 1 没有对应下标的问题，end 部分未指定，则默认从左向右取")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(select2)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"this")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1})])])]),n[8]||(n[8]=p(`<li><p>获取等间隔的字符</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;0123456789&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">select </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;">len</span><span style="color:#F8F8F2;">(string): </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">]      </span><span style="color:#88846F;">#语法：select = string[start: end: step] step指步长，即走几步 or 两相邻字符下标相减</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(select)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">string2 </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;bornforthis&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">select2 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string2[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;">len</span><span style="color:#F8F8F2;">(string2): </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(select2)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">select3 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string2[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;">len</span><span style="color:#F8F8F2;">(string2): </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(select3)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#AE81FF;">13579</span></span>
<span class="line"><span style="color:#F8F8F2;">bnri</span></span>
<span class="line"><span style="color:#F8F8F2;">ofts</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>若要取的字符串开头/结尾是整段的字符串的开头/结尾，则可以省略 start 和 end，不是整段字符串开头/结尾则不能省略下标。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;0123456789&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">select </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">:: </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(select)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">string2 </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;bornforthis&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">select2 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string2[:: </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(select2)</span></span>
<span class="line"><span style="color:#F8F8F2;">select3 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string2[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">:: </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(select3)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#AE81FF;">13579</span></span>
<span class="line"><span style="color:#F8F8F2;">bnri</span></span>
<span class="line"><span style="color:#F8F8F2;">ofts</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>负数下标的提取（下标从右向左）</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;0123456789&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">select </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string[</span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">: </span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">11</span><span style="color:#F8F8F2;">: </span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">]    </span><span style="color:#88846F;">#可简写成 select = string[:: -1] 步长 -1 表示从右向左取（-），每次走1步，只有步长方向和start-end方向一致时才能输出结果</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(select)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#AE81FF;">9876543210</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>思考流程：</p><figure><img src="`+y+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></li>',1))]),n[122]||(n[122]=p(`<h2 id="_4-字符串的内置方法" tabindex="-1"><a class="header-anchor" href="#_4-字符串的内置方法"><span>4. 字符串的内置方法</span></a></h2><h3 id="_4-1-upper" tabindex="-1"><a class="header-anchor" href="#_4-1-upper"><span>4.1 upper()</span></a></h3><p>将字符串内容全部变为大写。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;bornforthis&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">upper_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.upper()</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(upper_string)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#AE81FF;">BORNFORTHIS</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2-lower" tabindex="-1"><a class="header-anchor" href="#_4-2-lower"><span>4.2 lower()</span></a></h3><p>将字符串内容全部变为小写。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;BORNFORTHIS&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">lower_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.lower()</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(lower_string)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">bornforthis</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-3-capitalize" tabindex="-1"><a class="header-anchor" href="#_4-3-capitalize"><span>4.3 capitalize()</span></a></h3><p>将字符串首字母大写。（只对第一个字母大写，其他后面的字母变为小写）</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;bornForthis to Aivc&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">capitalize_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.capitalize()</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(capitalize_string)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">Bornforthis to aivc</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-4-title" tabindex="-1"><a class="header-anchor" href="#_4-4-title"><span>4.4 title()</span></a></h3><p>将字符串中每个单词的首字母大写，其余字符都转换成小写。</p>`,12)),r(i,{id:"140",data:[{id:"1. 每个单词首字母大写"},{id:"2. 各种分隔符依旧首字母大写"},{id:"3. 大小写字母混合，除首字母外其余均小写"}]},{title0:e(({value:a,isActive:o})=>n[9]||(n[9]=[l("1. 每个单词首字母大写")])),title1:e(({value:a,isActive:o})=>n[10]||(n[10]=[l("2. 各种分隔符依旧首字母大写")])),title2:e(({value:a,isActive:o})=>n[11]||(n[11]=[l("3. 大小写字母混合，除首字母外其余均小写")])),tab0:e(({value:a,isActive:o})=>n[12]||(n[12]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "bornforthis to aivc"')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"title_string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.title()")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(title_string)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"Bornforthis To Aivc")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:e(({value:a,isActive:o})=>n[13]||(n[13]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "bornforthis-to-aivc"')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"title_string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.title()")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(title_string)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"Bornforthis"),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}},"To"),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}},"Aivc")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab2:e(({value:a,isActive:o})=>n[14]||(n[14]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "boRnforThis to aIvc"')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"title_string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.title()")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(title_string)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"Bornforthis To Aivc")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1}),n[123]||(n[123]=s("h3",{id:"_4-5-startswith",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_4-5-startswith"},[s("span",null,"4.5 startswith()")])],-1)),n[124]||(n[124]=s("p",null,"检测字符串是否以特定字符或单词开头，返回布尔值。",-1)),r(i,{id:"160",data:[{id:"1. 是否 b 开头"},{id:"2. 是否 bo 开头"},{id:"3. 是否 p 开头"},{id:"4. 是否 b1 开头"}]},{title0:e(({value:a,isActive:o})=>n[15]||(n[15]=[l("1. 是否 b 开头")])),title1:e(({value:a,isActive:o})=>n[16]||(n[16]=[l("2. 是否 bo 开头")])),title2:e(({value:a,isActive:o})=>n[17]||(n[17]=[l("3. 是否 p 开头")])),title3:e(({value:a,isActive:o})=>n[18]||(n[18]=[l("4. 是否 b1 开头")])),tab0:e(({value:a,isActive:o})=>n[19]||(n[19]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "bornforthis"')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"startswith_string"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.startswith("),s("span",{style:{color:"#E6DB74"}},'"b"'),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(startswith_string)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"True")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:e(({value:a,isActive:o})=>n[20]||(n[20]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "bornforthis"')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"startswith_string"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.startswith("),s("span",{style:{color:"#E6DB74"}},'"bo"'),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(startswith_string)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"True")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab2:e(({value:a,isActive:o})=>n[21]||(n[21]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "bornforthis"')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"startswith_string"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.startswith("),s("span",{style:{color:"#E6DB74"}},'"p"'),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(startswith_string)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"False")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab3:e(({value:a,isActive:o})=>n[22]||(n[22]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "bornforthis"')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"startswith_string"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.startswith("),s("span",{style:{color:"#E6DB74"}},'"b1"'),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(startswith_string)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"False")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1}),n[125]||(n[125]=s("h3",{id:"_4-6-endswith",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_4-6-endswith"},[s("span",null,"4.6 endswith()")])],-1)),n[126]||(n[126]=s("p",null,"检测字符串是否以特定的字符或单词结尾，返回布尔值。",-1)),r(i,{id:"183",data:[{id:"1. 是否 s 结尾"},{id:"2. 是否 is 结尾"},{id:"3. 是否 i 结尾"},{id:"4. 是否 s6 结尾"}]},{title0:e(({value:a,isActive:o})=>n[23]||(n[23]=[l("1. 是否 s 结尾")])),title1:e(({value:a,isActive:o})=>n[24]||(n[24]=[l("2. 是否 is 结尾")])),title2:e(({value:a,isActive:o})=>n[25]||(n[25]=[l("3. 是否 i 结尾")])),title3:e(({value:a,isActive:o})=>n[26]||(n[26]=[l("4. 是否 s6 结尾")])),tab0:e(({value:a,isActive:o})=>n[27]||(n[27]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "bornforthis"')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"endswith_string"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.endswith("),s("span",{style:{color:"#E6DB74"}},'"s"'),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(endswith_string)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"Ture")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:e(({value:a,isActive:o})=>n[28]||(n[28]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "bornforthis"')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"endswith_string"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.endswith("),s("span",{style:{color:"#E6DB74"}},'"is"'),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(endswith_string)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"Ture")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab2:e(({value:a,isActive:o})=>n[29]||(n[29]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "bornforthis"')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"endswith_string"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.endswith("),s("span",{style:{color:"#E6DB74"}},'"i"'),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(endswith_string)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"False")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab3:e(({value:a,isActive:o})=>n[30]||(n[30]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "bornforthis"')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"endswith_string"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.endswith("),s("span",{style:{color:"#E6DB74"}},'"s6"'),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(endswith_string)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"False")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1}),n[127]||(n[127]=s("h3",{id:"_4-7-count",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_4-7-count"},[s("span",null,"4.7 count()")])],-1)),n[128]||(n[128]=s("p",null,"统计特定字符或单词在目标字符串中存在的次数。",-1)),r(i,{id:"206",data:[{id:"1. 字母 r 出现的次数"},{id:"2. 字母 or 出现的次数"},{id:"3. 字母 a 出现的次数（字符串中无）"},{id:"4. 字符串 ap 出现的次数"}]},{title0:e(({value:a,isActive:o})=>n[31]||(n[31]=[l("1. 字母 r 出现的次数")])),title1:e(({value:a,isActive:o})=>n[32]||(n[32]=[l("2. 字母 or 出现的次数")])),title2:e(({value:a,isActive:o})=>n[33]||(n[33]=[l("3. 字母 a 出现的次数（字符串中无）")])),title3:e(({value:a,isActive:o})=>n[34]||(n[34]=[l("4. 字符串 ap 出现的次数")])),tab0:e(({value:a,isActive:o})=>n[35]||(n[35]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "bornforthis"')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"count_string"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.count("),s("span",{style:{color:"#E6DB74"}},'"r"'),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(count_string)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"2")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:e(({value:a,isActive:o})=>n[36]||(n[36]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "bornforthis"')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"count_string"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.count("),s("span",{style:{color:"#E6DB74"}},'"or"'),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(count_string)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"2")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab2:e(({value:a,isActive:o})=>n[37]||(n[37]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "bornforthis"')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"count_string"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.count("),s("span",{style:{color:"#E6DB74"}},'"a"'),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(count_string)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"0")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab3:e(({value:a,isActive:o})=>n[38]||(n[38]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "bornforthis"')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"count_string"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.count("),s("span",{style:{color:"#E6DB74"}},'"ap"'),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(count_string)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"0")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1}),n[129]||(n[129]=s("h3",{id:"_4-8-find",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_4-8-find"},[s("span",null,"4.8 find()")])],-1)),n[130]||(n[130]=s("p",null,"寻找目标字符或单词在特定字符串中，第一次出现的下标。也就是说，有重复，也之返回第一次出现的下标；",-1)),n[131]||(n[131]=s("p",null,"若查找单词，则返回目标单词第一个字符的下标；",-1)),n[132]||(n[132]=s("p",null,[l("若查询的内容不存在，则返回 "),s("code",null,"-1"),l("。")],-1)),r(i,{id:"235",data:[{id:"1. 字符 o 第一次出现的位置"},{id:"2. 字符 a 第一次出现的位置"},{id:"3. 子字符串 for 第一次出现的位置"},{id:"4. 子字符串 aivc 第一次出现的位置"}]},{title0:e(({value:a,isActive:o})=>n[39]||(n[39]=[l("1. 字符 o 第一次出现的位置")])),title1:e(({value:a,isActive:o})=>n[40]||(n[40]=[l("2. 字符 a 第一次出现的位置")])),title2:e(({value:a,isActive:o})=>n[41]||(n[41]=[l("3. 子字符串 for 第一次出现的位置")])),title3:e(({value:a,isActive:o})=>n[42]||(n[42]=[l("4. 子字符串 aivc 第一次出现的位置")])),tab0:e(({value:a,isActive:o})=>n[43]||(n[43]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "bornforthis"')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"find_string"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.find("),s("span",{style:{color:"#E6DB74"}},'"o"'),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(find_string)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"1")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:e(({value:a,isActive:o})=>n[44]||(n[44]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "bornforthis"')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"find_string"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.find("),s("span",{style:{color:"#E6DB74"}},'"a"'),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(find_string)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#AE81FF"}},"1")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab2:e(({value:a,isActive:o})=>n[45]||(n[45]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "bornforthis"')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"find_string"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.find("),s("span",{style:{color:"#E6DB74"}},'"for"'),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(find_string)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"4")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab3:e(({value:a,isActive:o})=>n[46]||(n[46]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "bornforthis"')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"find_string"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.find("),s("span",{style:{color:"#E6DB74"}},'"aivc"'),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(find_string)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#AE81FF"}},"1")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1}),n[133]||(n[133]=p('<h3 id="_4-9-index" tabindex="-1"><a class="header-anchor" href="#_4-9-index"><span>4.9 index()</span></a></h3><p>寻找目标字符或单词在特定字符串中，第一次出现的下标。如果是查找单词，那么 <code>index()</code> 返回目标单词的第一个字符下标。</p><p>如果查询的字符或单词不存在，则报错。</p><div class="hint-container info"><p class="hint-container-title">index() vs. find()</p><p><code>index()</code> 在找不到指定字符/字符串时会报错，提供文件信息和位置，便于定位被搜索的字符串的位置，那么在文件或代码较多的情况下，使用 <code>index()</code> 可以帮助精准定位。但报错会引发程序运行停止，若不希望程序中止，则需要确保检索的字符/字符串一定存在于被检索的字符串中。</p><p><code>find()</code> 的可控性更强，搜索不到时，会返回值 <code>-1</code> ，但是程序不会停止，在发布或面向用户场景下更为合适。</p></div>',4)),r(i,{id:"269",data:[{id:"1. 查找字符 o 第一次出现的位置"},{id:"2. 查找字符 a 第一次出现的位置"},{id:"3. 子字符串 for 第一次出现的位置"},{id:"4. 子字符串 aivc 第一次出现的位置"}]},{title0:e(({value:a,isActive:o})=>n[47]||(n[47]=[l("1. 查找字符 o 第一次出现的位置")])),title1:e(({value:a,isActive:o})=>n[48]||(n[48]=[l("2. 查找字符 a 第一次出现的位置")])),title2:e(({value:a,isActive:o})=>n[49]||(n[49]=[l("3. 子字符串 for 第一次出现的位置")])),title3:e(({value:a,isActive:o})=>n[50]||(n[50]=[l("4. 子字符串 aivc 第一次出现的位置")])),tab0:e(({value:a,isActive:o})=>n[51]||(n[51]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "bornforthis"')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"index_result "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.index("),s("span",{style:{color:"#E6DB74"}},'"o"'),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(index_result)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"1")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:e(({value:a,isActive:o})=>n[52]||(n[52]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "bornforthis"')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"index_result "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.index("),s("span",{style:{color:"#E6DB74"}},'"a"'),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(index_result)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"Traceback (most recent call last):")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  File "),s("span",{style:{color:"#E6DB74"}},'"D:\\Coder'),s("span",{style:{color:"#AE81FF"}},"\\t"),s("span",{style:{color:"#E6DB74"}},"est 1"),s("span",{style:{color:"#AE81FF"}},"\\t"),s("span",{style:{color:"#E6DB74"}},'est 1.1.py"'),s("span",{style:{color:"#F8F8F2"}},", line "),s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#F92672"}},"in"),s("span",{style:{color:"#F92672"}}," <"),s("span",{style:{color:"#F8F8F2"}},"module"),s("span",{style:{color:"#F92672"}},">")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    index_result "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.index("),s("span",{style:{color:"#E6DB74"}},'"a"'),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"ValueError"),s("span",{style:{color:"#F8F8F2"}},": substring "),s("span",{style:{color:"#F92672"}},"not"),s("span",{style:{color:"#F8F8F2"}}," found")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab2:e(({value:a,isActive:o})=>n[53]||(n[53]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "bornforthis"')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"index_result "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.index("),s("span",{style:{color:"#E6DB74"}},'"for"'),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(index_result)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"4")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab3:e(({value:a,isActive:o})=>n[54]||(n[54]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "bornforthis"')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"index_result "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.index("),s("span",{style:{color:"#E6DB74"}},'"aivc"'),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(index_result)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"Traceback (most recent call last):")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  File "),s("span",{style:{color:"#E6DB74"}},'"D:\\Coder'),s("span",{style:{color:"#AE81FF"}},"\\t"),s("span",{style:{color:"#E6DB74"}},"est 1"),s("span",{style:{color:"#AE81FF"}},"\\t"),s("span",{style:{color:"#E6DB74"}},'est 1.1.py"'),s("span",{style:{color:"#F8F8F2"}},", line "),s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#F92672"}},"in"),s("span",{style:{color:"#F92672"}}," <"),s("span",{style:{color:"#F8F8F2"}},"module"),s("span",{style:{color:"#F92672"}},">")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    index_result "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.index("),s("span",{style:{color:"#E6DB74"}},'"aivc"'),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"ValueError"),s("span",{style:{color:"#F8F8F2"}},": substring "),s("span",{style:{color:"#F92672"}},"not"),s("span",{style:{color:"#F8F8F2"}}," found")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1}),n[134]||(n[134]=p(`<div class="hint-container note"><p class="hint-container-title">使用场景</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;Experiment-record.xlsx&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">index_result </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.index(</span><span style="color:#E6DB74;">&#39;.&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">filename </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string[:index_result]</span></span>
<span class="line"><span style="color:#F8F8F2;">suffix </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string[index_result</span><span style="color:#F92672;">+</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">:]</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(filename)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(suffix)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">Experiment</span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;">record</span></span>
<span class="line"><span style="color:#F8F8F2;">xlsx</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><div class="hint-container note"><p class="hint-container-title">使用场景练习</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">line </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;ID=1234;NAME=Tom;AGE=25&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">name_start </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> line.index(</span><span style="color:#E6DB74;">&#39;NAME=&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">name_end </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> line.index(</span><span style="color:#E6DB74;">&#39;;AGE&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">name </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> line[name_start</span><span style="color:#F92672;">+</span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">:name_end]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(name_start)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(name_end)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(name)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#AE81FF;">8</span></span>
<span class="line"><span style="color:#AE81FF;">16</span></span>
<span class="line"><span style="color:#F8F8F2;">Tom</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h3 id="_4-10-isdigit" tabindex="-1"><a class="header-anchor" href="#_4-10-isdigit"><span>4.10 isdigit()</span></a></h3><p>判断字符串是不是纯数字字符串，字符串中但凡有个字符是非数字，则返回 False 。</p>`,4)),r(i,{id:"298",data:[{id:"判断是否纯数字"},{id:"若数字中出现空格"}]},{title0:e(({value:a,isActive:o})=>n[55]||(n[55]=[l("判断是否纯数字")])),title1:e(({value:a,isActive:o})=>n[56]||(n[56]=[l("若数字中出现空格")])),tab0:e(({value:a,isActive:o})=>n[57]||(n[57]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "12345678"')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"isdigit_result "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.isdigit()")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(isdigit_result)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"True")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:e(({value:a,isActive:o})=>n[58]||(n[58]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "1234 5678"')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"isdigit_result "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.isdigit()")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(isdigit_result)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"False")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1}),n[135]||(n[135]=s("h3",{id:"_4-11-isalpha",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_4-11-isalpha"},[s("span",null,"4.11 isalpha()")])],-1)),n[136]||(n[136]=s("p",null,"判断字符串是不是纯字母字符串，字符串中但凡有一个非字母的，则返回 False 。",-1)),r(i,{id:"315",data:[{id:"判断是否全为字母"},{id:"出现空格"}]},{title0:e(({value:a,isActive:o})=>n[59]||(n[59]=[l("判断是否全为字母")])),title1:e(({value:a,isActive:o})=>n[60]||(n[60]=[l("出现空格")])),tab0:e(({value:a,isActive:o})=>n[61]||(n[61]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "Impeppapig"')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"isalpha_result "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.isalpha()")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(isalpha_result)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"True")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:e(({value:a,isActive:o})=>n[62]||(n[62]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "Im peppa pig"')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"isalpha_result "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.isalpha()")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(isalpha_result)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"False")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1}),n[137]||(n[137]=s("h3",{id:"_4-12-isalnum",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_4-12-isalnum"},[s("span",null,"4.12 isalnum()")])],-1)),n[138]||(n[138]=s("p",null,"判断字符串是否纯数字、纯字母、纯数字字母字符串，字符串中如果包含任何非数字或字母字符，则返回 False 。",-1)),r(i,{id:"332",data:[{id:"判断是否全为数字字母"},{id:"出现空格"}]},{title0:e(({value:a,isActive:o})=>n[63]||(n[63]=[l("判断是否全为数字字母")])),title1:e(({value:a,isActive:o})=>n[64]||(n[64]=[l("出现空格")])),tab0:e(({value:a,isActive:o})=>n[65]||(n[65]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"code "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "peppapig1"')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"valid_code "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," code.isalnum()")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(valid_code)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"True")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:e(({value:a,isActive:o})=>n[66]||(n[66]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"code "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "peppa pig1"')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"valid_code "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," code.isalnum()")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(valid_code)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"False")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1}),n[139]||(n[139]=s("h3",{id:"_4-13-isupper",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_4-13-isupper"},[s("span",null,"4.13 isupper()")])],-1)),n[140]||(n[140]=s("p",null,"判断字符串是否全大写字母组成。",-1)),r(i,{id:"349",data:[{id:"1. 判断是否全大写字母"},{id:"2. 出现空格、其他符号"},{id:"3. 混合大小写"},{id:"4. 全小写字母"}]},{title0:e(({value:a,isActive:o})=>n[67]||(n[67]=[l("1. 判断是否全大写字母")])),title1:e(({value:a,isActive:o})=>n[68]||(n[68]=[l("2. 出现空格、其他符号")])),title2:e(({value:a,isActive:o})=>n[69]||(n[69]=[l("3. 混合大小写")])),title3:e(({value:a,isActive:o})=>n[70]||(n[70]=[l("4. 全小写字母")])),tab0:e(({value:a,isActive:o})=>n[71]||(n[71]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"name "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "PEPPERPIG"')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"isupper_name "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," name.isupper()")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(isupper_name)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"True")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:e(({value:a,isActive:o})=>n[72]||(n[72]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"name "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "PEPPER PIG1-"')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"isupper_name "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," name.isupper()")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(isupper_name)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"True")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab2:e(({value:a,isActive:o})=>n[73]||(n[73]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"name "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "PEPPERpig"')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"isupper_name "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," name.isupper()")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(isupper_name)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"False")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab3:e(({value:a,isActive:o})=>n[74]||(n[74]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"name "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "pepperpig"')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"isupper_name "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," name.isupper()")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(isupper_name)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"False")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1}),n[141]||(n[141]=s("h3",{id:"_4-14-islower",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_4-14-islower"},[s("span",null,"4.14 islower()")])],-1)),n[142]||(n[142]=s("p",null,"判断字符串是否全小写字母组成。",-1)),r(i,{id:"372",data:[{id:"1. 是否全小写"},{id:"2. 大小写混合"},{id:"3. 全部大写"}]},{title0:e(({value:a,isActive:o})=>n[75]||(n[75]=[l("1. 是否全小写")])),title1:e(({value:a,isActive:o})=>n[76]||(n[76]=[l("2. 大小写混合")])),title2:e(({value:a,isActive:o})=>n[77]||(n[77]=[l("3. 全部大写")])),tab0:e(({value:a,isActive:o})=>n[78]||(n[78]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"name "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "pepper pig1-=、"')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"islower_name "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," name.islower()")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(islower_name)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"True")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:e(({value:a,isActive:o})=>n[79]||(n[79]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"name "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "PEPPERpig"')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"islower_name "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," name.islower()")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(islower_name)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"False")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab2:e(({value:a,isActive:o})=>n[80]||(n[80]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"name "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "PEPPERPIG"')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"islower_name "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," name.islower()")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(islower_name)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"False")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1}),n[143]||(n[143]=s("h3",{id:"_4-15-isspace",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_4-15-isspace"},[s("span",null,"4.15 isspace()")])],-1)),n[144]||(n[144]=s("p",null,"判断字符串是否全部由空格组成。",-1)),r(i,{id:"392",data:[{id:"<strong>空格</strong>字符串"},{id:"<strong>空</strong>字符串"},{id:"非空格字符串"}]},{title0:e(({value:a,isActive:o})=>n[81]||(n[81]=[s("strong",null,"空格",-1),l("字符串")])),title1:e(({value:a,isActive:o})=>n[82]||(n[82]=[s("strong",null,"空",-1),l("字符串")])),title2:e(({value:a,isActive:o})=>n[83]||(n[83]=[l("非空格字符串")])),tab0:e(({value:a,isActive:o})=>n[84]||(n[84]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"input1 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "   "')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"isspace_input1 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," input1.isspace()")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(isspace_input1)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"True")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:e(({value:a,isActive:o})=>n[85]||(n[85]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"input1 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' ""')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"isspace_input1 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," input1.isspace()")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(isspace_input1)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"False")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab2:e(({value:a,isActive:o})=>n[86]||(n[86]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"input1 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "123asd-=["')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"isspace_input1 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," input1.isspace()")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(isspace_input1)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"False")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1}),n[145]||(n[145]=s("h3",{id:"_4-16-strip",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_4-16-strip"},[s("span",null,"4.16 strip()")])],-1)),r(i,{id:"409",data:[{id:"1. 清除字符串前后（两侧）空格"},{id:"2. 指定两侧需要清除的字符串（需连续）"}]},{title0:e(({value:a,isActive:o})=>n[87]||(n[87]=[l("1. 清除字符串前后（两侧）空格")])),title1:e(({value:a,isActive:o})=>n[88]||(n[88]=[l("2. 指定两侧需要清除的字符串（需连续）")])),tab0:e(({value:a,isActive:o})=>n[89]||(n[89]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},` "     I'm pepper pig.     "`)]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"strip_string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.strip()")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"Original string:"'),s("span",{style:{color:"#F8F8F2"}},", string)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"String after stripping:"'),s("span",{style:{color:"#F8F8F2"}},", strip_string)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"Original string:      I"),s("span",{style:{color:"#E6DB74"}},"'m pepper pig.     ")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"String after stripping: I"),s("span",{style:{color:"#E6DB74"}},"'m pepper pig.")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:e(({value:a,isActive:o})=>n[90]||(n[90]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},` "----I'm pepper pig.----"`)]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"strip_string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.strip("),s("span",{style:{color:"#E6DB74"}},'"-"'),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"Original string:"'),s("span",{style:{color:"#F8F8F2"}},", string)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"String after stripping:"'),s("span",{style:{color:"#F8F8F2"}},", strip_string)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"Original string: "),s("span",{style:{color:"#F44747"}},"----"),s("span",{style:{color:"#F8F8F2"}},"I"),s("span",{style:{color:"#E6DB74"}},"'m pepper pig.----")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"String after stripping: I"),s("span",{style:{color:"#E6DB74"}},"'m pepper pig.")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1}),r(i,{id:"420",data:[{id:"s 1. 清除两侧指定字符串，且指定的字符串中间间隔其他字符"},{id:"2. 解决方案"}]},{title0:e(({value:a,isActive:o})=>n[91]||(n[91]=[l("s 1. 清除两侧指定字符串，且指定的字符串中间间隔其他字符")])),title1:e(({value:a,isActive:o})=>n[92]||(n[92]=[l("2. 解决方案")])),tab0:e(({value:a,isActive:o})=>n[93]||(n[93]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},` "---  -I'm pepper pig.--  ?--"`)]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"strip_string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.strip("),s("span",{style:{color:"#E6DB74"}},'"-"'),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"Original string:"'),s("span",{style:{color:"#F8F8F2"}},", string)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"String after stripping:"'),s("span",{style:{color:"#F8F8F2"}},", strip_string)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"Original string: "),s("span",{style:{color:"#F44747"}},"--"),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F92672"}},"  -"),s("span",{style:{color:"#F8F8F2"}},"I"),s("span",{style:{color:"#E6DB74"}},"'m pepper pig.--  ?--")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"String after stripping:   "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}},"I"),s("span",{style:{color:"#E6DB74"}},"'m pepper pig.--  ?")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:e(({value:a,isActive:o})=>n[94]||(n[94]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},` "---  -I'm pepper pig.--  ?--"`)]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"strip_string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.strip("),s("span",{style:{color:"#E6DB74"}},'" -?"'),s("span",{style:{color:"#F8F8F2"}},")      "),s("span",{style:{color:"#88846F"}},"#把要去掉的都扔在里面，不分先后顺序")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"Original string:"'),s("span",{style:{color:"#F8F8F2"}},", string)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"String after stripping:"'),s("span",{style:{color:"#F8F8F2"}},", strip_string)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"Original string: "),s("span",{style:{color:"#F44747"}},"--"),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F92672"}},"  -"),s("span",{style:{color:"#F8F8F2"}},"I"),s("span",{style:{color:"#E6DB74"}},"'m pepper pig.--  ?--")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"String after stripping: I"),s("span",{style:{color:"#E6DB74"}},"'m pepper pig.")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1}),n[146]||(n[146]=s("h3",{id:"_4-17-lstrip",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_4-17-lstrip"},[s("span",null,"4.17 lstrip()")])],-1)),n[147]||(n[147]=s("p",null,"去掉左侧，()内包含的所有字符的连续字符串。",-1)),r(i,{id:"437",data:[{id:"1. 去掉左侧空格"},{id:"2. 去掉左侧字符"},{id:"去掉左侧多种字符"}]},{title0:e(({value:a,isActive:o})=>n[95]||(n[95]=[l("1. 去掉左侧空格")])),title1:e(({value:a,isActive:o})=>n[96]||(n[96]=[l("2. 去掉左侧字符")])),title2:e(({value:a,isActive:o})=>n[97]||(n[97]=[l("去掉左侧多种字符")])),tab0:e(({value:a,isActive:o})=>n[98]||(n[98]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},` "    I'm pepper pig.    "`)]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"lstrip_string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.lstrip()")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"Original string:"'),s("span",{style:{color:"#F8F8F2"}},", string)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"String after stripping:"'),s("span",{style:{color:"#F8F8F2"}},", lstrip_string)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"Original string:     I"),s("span",{style:{color:"#E6DB74"}},"'m pepper pig.    ")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"String after stripping: I"),s("span",{style:{color:"#E6DB74"}},"'m pepper pig.")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:e(({value:a,isActive:o})=>n[99]||(n[99]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},` "-----I'm pepper pig.-----"`)]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"lstrip_string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.lstrip("),s("span",{style:{color:"#E6DB74"}},'"-"'),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"Original string:"'),s("span",{style:{color:"#F8F8F2"}},", string)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"String after stripping:"'),s("span",{style:{color:"#F8F8F2"}},", lstrip_string)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"Original string: "),s("span",{style:{color:"#F44747"}},"----"),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}},"I"),s("span",{style:{color:"#E6DB74"}},"'m pepper pig.-----")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"String after stripping: I"),s("span",{style:{color:"#E6DB74"}},"'m pepper pig.-----")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab2:e(({value:a,isActive:o})=>n[100]||(n[100]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},` "--!--?-I'm pepper pig.-!---?-"`)]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"lstrip_string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.lstrip("),s("span",{style:{color:"#E6DB74"}},'"?-!"'),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"Original string:"'),s("span",{style:{color:"#F8F8F2"}},", string)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"String after stripping:"'),s("span",{style:{color:"#F8F8F2"}},", lstrip_string)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"Original string: "),s("span",{style:{color:"#F44747"}},"--"),s("span",{style:{color:"#F8F8F2"}},"!"),s("span",{style:{color:"#F44747"}},"--?"),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}},"I"),s("span",{style:{color:"#E6DB74"}},"'m pepper pig.-!---?-")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"String after stripping: I"),s("span",{style:{color:"#E6DB74"}},"'m pepper pig.-!---?-")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1}),n[148]||(n[148]=s("h3",{id:"_4-18-rstrip",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_4-18-rstrip"},[s("span",null,"4.18 rstrip()")])],-1)),n[149]||(n[149]=s("p",null,"去掉右侧，()内包含的所有字符的连续字符串。",-1)),n[150]||(n[150]=s("p",null,[l("使用方法同 "),s("code",null,"lstrip()")],-1)),n[151]||(n[151]=s("h3",{id:"_4-19-replace",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_4-19-replace"},[s("span",null,"4.19 replace()")])],-1)),n[152]||(n[152]=s("p",null,[s("code",null,".replace(old, new count)"),l(" 括号内第一个位置传入需要替换的 ”旧字符“ ，第二个位置传入要替换的 ”新字符“ ，默认替换全部，count 控制替换次数。")],-1)),r(i,{id:"466",data:[{id:"全部替换"},{id:"count 控制替换次数"}]},{title0:e(({value:a,isActive:o})=>n[101]||(n[101]=[l("全部替换")])),title1:e(({value:a,isActive:o})=>n[102]||(n[102]=[l("count 控制替换次数")])),tab0:e(({value:a,isActive:o})=>n[103]||(n[103]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},` "I'm pepper pig."`)]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"replace_result "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.replace("),s("span",{style:{color:"#E6DB74"}},'" "'),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},'"!"'),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"原本的字符串:"'),s("span",{style:{color:"#F8F8F2"}},", string)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"替换后的字符串:"'),s("span",{style:{color:"#F8F8F2"}},", replace_result)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"原本的字符串: I"),s("span",{style:{color:"#E6DB74"}},"'m pepper pig.")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"替换后的字符串: I"),s("span",{style:{color:"#E6DB74"}},"'m!pepper!pig.")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:e(({value:a,isActive:o})=>n[104]||(n[104]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},'"ai-peppapig-ai"')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"replace_result "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.replace ("),s("span",{style:{color:"#E6DB74"}},'"ai"'),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},'"love"'),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"原本的字符串:"'),s("span",{style:{color:"#F8F8F2"}},", string)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"替换后的字符串:"'),s("span",{style:{color:"#F8F8F2"}},", replace_result)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"原本的字符串: ai"),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}},"peppapig"),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}},"ai")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"替换后的字符串: love"),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}},"peppapig"),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}},"ai")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1}),n[153]||(n[153]=s("h3",{id:"_4-20-split",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_4-20-split"},[s("span",null,"4.20 split()")])],-1)),n[154]||(n[154]=s("p",null,[s("code",null,".split(sep, maxsplit)"),l(" 以特定字符进行分割，默认空格分割。")],-1)),n[155]||(n[155]=s("p",null,[l("若传入参数 "),s("code",null,"sep"),l(" ，则以参数进行分割。")],-1)),n[156]||(n[156]=s("p",null,"返回的为分割后的列表。",-1)),n[157]||(n[157]=s("p",null,[s("code",null,"maxsplit"),l(" 用于控制分割次数。")],-1)),r(i,{id:"492",data:[{id:"1. 默认空格分割"},{id:"2. 指定字符分割"},{id:"3. 控制次数分割"},{id:"4. 返回空字符串"}]},{title0:e(({value:a,isActive:o})=>n[105]||(n[105]=[l("1. 默认空格分割")])),title1:e(({value:a,isActive:o})=>n[106]||(n[106]=[l("2. 指定字符分割")])),title2:e(({value:a,isActive:o})=>n[107]||(n[107]=[l("3. 控制次数分割")])),title3:e(({value:a,isActive:o})=>n[108]||(n[108]=[l("4. 返回空字符串")])),tab0:e(({value:a,isActive:o})=>n[109]||(n[109]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},`"I'm peppa pig."`)]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"split_result "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.split()")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"原本的字符串:"'),s("span",{style:{color:"#F8F8F2"}},", string)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"替换后的字符串:"'),s("span",{style:{color:"#F8F8F2"}},", split_result)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"原本的字符串: I"),s("span",{style:{color:"#E6DB74"}},"'m peppa pig.")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"替换后的字符串: ["),s("span",{style:{color:"#E6DB74"}},`"I'm"`),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'peppa'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'pig.'"),s("span",{style:{color:"#F8F8F2"}},"]")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:e(({value:a,isActive:o})=>n[110]||(n[110]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},`"I'm-peppa-pig."`)]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"split_result "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.split("),s("span",{style:{color:"#E6DB74"}},"'-'"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"原本的字符串:"'),s("span",{style:{color:"#F8F8F2"}},", string)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"替换后的字符串:"'),s("span",{style:{color:"#F8F8F2"}},", split_result)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"原本的字符串: I"),s("span",{style:{color:"#E6DB74"}},"'m-peppa-pig.")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"替换后的字符串: ["),s("span",{style:{color:"#E6DB74"}},`"I'm"`),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'peppa'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'pig.'"),s("span",{style:{color:"#F8F8F2"}},"]")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab2:e(({value:a,isActive:o})=>n[111]||(n[111]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},`"I'm-peppa-pig."`)]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"split_result "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.split( "),s("span",{style:{color:"#E6DB74"}},'"-"'),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"原本的字符串:"'),s("span",{style:{color:"#F8F8F2"}},", string)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"替换后的字符串:"'),s("span",{style:{color:"#F8F8F2"}},", split_result)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"原本的字符串: I"),s("span",{style:{color:"#E6DB74"}},"'m-peppa-pig.")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"替换后的字符串: ["),s("span",{style:{color:"#E6DB74"}},`"I'm"`),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'peppa-pig.'"),s("span",{style:{color:"#F8F8F2"}},"]")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab3:e(({value:a,isActive:o})=>n[112]||(n[112]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},`"I'm--------peppa--------pig."`)]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"split_result "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.split("),s("span",{style:{color:"#E6DB74"}},'"-"'),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"原本的字符串:"'),s("span",{style:{color:"#F8F8F2"}},", string)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"替换后的字符串:"'),s("span",{style:{color:"#F8F8F2"}},", split_result)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"原本的字符串: I"),s("span",{style:{color:"#E6DB74"}},"'m--------peppa--------pig.")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"替换后的字符串: ["),s("span",{style:{color:"#E6DB74"}},`"I'm"`),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"''"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"''"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"''"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"''"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"''"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"''"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"''"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'peppa'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"''"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"''"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"''"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"''"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"''"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"''"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"''"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'pig.'"),s("span",{style:{color:"#F8F8F2"}},"]")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1}),n[158]||(n[158]=p(`<h3 id="_4-21-rsplit" tabindex="-1"><a class="header-anchor" href="#_4-21-rsplit"><span>4.21 rsplit()</span></a></h3><p><code>.rsplit(sep, maxsplit)</code> 从字符串右边开始分割。</p><p>可以传入参数 <code>sep</code> 来指定分隔符。</p><p>返回为分割后的列表。</p><p><code>maxsplit</code> 用于控制分割次数，默认值为 -1，表示不限制分割次数。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;">&quot;I&#39;m-peppa-pig.&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">rsplit_result </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.rsplit(</span><span style="color:#E6DB74;">&quot;-&quot;</span><span style="color:#F8F8F2;">,</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;原本的字符串:&quot;</span><span style="color:#F8F8F2;">, string)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;替换后的字符串:&quot;</span><span style="color:#F8F8F2;">, rsplit_result)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">原本的字符串: I</span><span style="color:#E6DB74;">&#39;m-peppa-pig.</span></span>
<span class="line"><span style="color:#F8F8F2;">替换后的字符串: [</span><span style="color:#E6DB74;">&quot;I&#39;m-peppa&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;pig.&#39;</span><span style="color:#F8F8F2;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-22-join" tabindex="-1"><a class="header-anchor" href="#_4-22-join"><span>4.22 join()</span></a></h3><p><code>.join(iterable)</code> 将可迭代（指可以继续拆分）对象（如列表、元组等）中的字符串元素连接成一个新的字符串，可以指定连接符。</p>`,8)),r(i,{id:"531",data:[{id:"拼接字符串"},{id:"列表中元素拼接"}]},{title0:e(({value:a,isActive:o})=>n[113]||(n[113]=[l("拼接字符串")])),title1:e(({value:a,isActive:o})=>n[114]||(n[114]=[l("列表中元素拼接")])),tab0:e(({value:a,isActive:o})=>n[115]||(n[115]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},'"peppapig"')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"join_result "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}}," '-'"),s("span",{style:{color:"#F8F8F2"}},".join(string)      "),s("span",{style:{color:"#88846F"}},"#注意语法与前文不同，join括号里是字符串变量，前面为连接符")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"原本的字符串:"'),s("span",{style:{color:"#F8F8F2"}},", string)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"替换后的字符串:"'),s("span",{style:{color:"#F8F8F2"}},", join_result)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"原本的字符串: peppapig")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"拼接后的字符串: p"),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}},"e"),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}},"p"),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}},"p"),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}},"a"),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}},"p"),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}},"i"),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}},"g")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:e(({value:a,isActive:o})=>n[116]||(n[116]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string_list "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," ["),s("span",{style:{color:"#E6DB74"}},'"I"'),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},'"am"'),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},'"peppa"'),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},'"pig"'),s("span",{style:{color:"#F8F8F2"}},"]")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"join_result "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "-"'),s("span",{style:{color:"#F8F8F2"}},".join(string_list)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"原本的列表:"'),s("span",{style:{color:"#F8F8F2"}},", string_list)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"拼接后的列表:"'),s("span",{style:{color:"#F8F8F2"}},", join_result)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"原本的列表: ["),s("span",{style:{color:"#E6DB74"}},"'I'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'am'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'peppa'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'pig'"),s("span",{style:{color:"#F8F8F2"}},"]")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"拼接后的列表: I"),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}},"am"),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}},"peppa"),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}},"pig")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1}),n[159]||(n[159]=p(`<h3 id="_4-23-quiz-1" tabindex="-1"><a class="header-anchor" href="#_4-23-quiz-1"><span>4.23 Quiz 1</span></a></h3><p>统计下面字符串中的字数，不包含标点符号、空格、换行，字符串内容如下：</p><p>亲爱的黄艳医生：</p><p>新年好！时光飞逝，婉棠已经满满长大，我们永远感激您在龙年时给予我们的那份守护和祝福。是您的细心和专业，让我们的家庭迎来了最珍贵的礼物。</p><p>蛇年的钟声已敲响，愿新年的每一天都像您的微笑一样温暖，每个夜晚都如您的双手一样安心。感谢您让我们的家充满了欢笑与爱。祝您和家人龙腾虎跃、岁岁平安、幸福安康！</p><p>此致<br> 敬祝新春快乐<br> 婉棠一家敬上</p><p>答案：</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai has-focused-lines vp-code"><code><span class="line has-focus"><span style="color:#F8F8F2;">para </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;&quot;&quot;</span></span>
<span class="line has-focus"><span style="color:#E6DB74;">亲爱的</span><span style="color:#E6DB74;" class="highlighted-word">黄艳医生</span><span style="color:#E6DB74;">：</span></span>
<span class="line has-focus"><wbr></span>
<span class="line has-focus"><span style="color:#E6DB74;">新年好！时光飞逝，婉棠已经满满长大，我们永远感激您在龙年时给予我们的那份守护和祝福。是您的细心和专业，让我们的家庭迎来了最珍贵的礼物。</span></span>
<span class="line has-focus"><wbr></span>
<span class="line has-focus"><span style="color:#E6DB74;">蛇年的钟声已敲响，愿新年的每一天都像您的微笑一样温暖，每个夜晚都如您的双手一样安心。感谢您让我们的家充满了欢笑与爱。祝您和家人龙腾虎跃、岁岁平安、幸福安康！</span></span>
<span class="line has-focus"><wbr></span>
<span class="line has-focus"><span style="color:#E6DB74;">此致</span></span>
<span class="line has-focus"><span style="color:#E6DB74;">敬祝新春快乐</span></span>
<span class="line has-focus"><span style="color:#E6DB74;">婉棠一家敬上</span></span>
<span class="line has-focus"><wbr></span>
<span class="line has-focus"><span style="color:#E6DB74;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">replace_para1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> para.replace(</span><span style="color:#E6DB74;">&quot;：&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">replace_para2 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> replace_para1.replace(</span><span style="color:#E6DB74;">&quot;！&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">replace_para3 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> replace_para2.replace(</span><span style="color:#E6DB74;">&quot;，&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">replace_para4 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> replace_para3.replace(</span><span style="color:#E6DB74;">&quot;。&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">replace_para5 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> replace_para4.replace(</span><span style="color:#E6DB74;">&quot;、&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">replace_para6 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> replace_para5.replace(</span><span style="color:#E6DB74;">&quot;</span><span style="color:#AE81FF;">\\n</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">len</span><span style="color:#F8F8F2;">(replace_para6))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#AE81FF;">153</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h2 id="_4-24-字符串格式化" tabindex="-1"><a class="header-anchor" href="#_4-24-字符串格式化"><span>4.24 字符串格式化</span></a></h2><ol><li>解决重复创建问题</li></ol><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;Hello, peppa pig, I come from China.&quot;</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(string)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">string1 </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;Hello, &quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">name </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;peppa pig&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">string2 </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;, I come from &quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">region </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;China&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">string3 </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;.&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">welcome_sentence </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string1 </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> name </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> string2 </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> region </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> string3</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(welcome_sentence)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">Hello, peppa pig, I come </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> China.</span></span>
<span class="line"><span style="color:#F8F8F2;">Hello, peppa pig, I come </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> China.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>但采用上述方法存在”不同数据类型无法相加“的问题，会报错。</p>`,12)),r(i,{id:"578",data:[{id:"不同数据类型无法相加"},{id:"数据类型转换解决"}]},{title0:e(({value:a,isActive:o})=>n[117]||(n[117]=[l("不同数据类型无法相加")])),title1:e(({value:a,isActive:o})=>n[118]||(n[118]=[l("数据类型转换解决")])),tab0:e(({value:a,isActive:o})=>n[119]||(n[119]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string1 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "Hello, "')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"name "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "peppa pig"')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string2 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' ", I come from "')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"region "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "China"')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string3 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "."')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"age "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 18")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"welcome_sentence "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string1 "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," name "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," string2 "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," region "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," string3 "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," age")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(welcome_sentence)")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:e(({value:a,isActive:o})=>n[120]||(n[120]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string1 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "Hello, "')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"name "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "peppa pig"')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string2 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' ", I come from "')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"region "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "China"')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string3 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "."')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"age "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 18")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"welcome_sentence "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string1 "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," name "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," string2 "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," region "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," string3 "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," str"),s("span",{style:{color:"#F8F8F2"}},"(age)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(welcome_sentence)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"Hello, peppa pig, I come "),s("span",{style:{color:"#F92672"}},"from"),s("span",{style:{color:"#F8F8F2"}}," China.18")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1}),n[160]||(n[160]=p(`<ol start="2"><li><p>更好的解决办法：字符串格式化</p><p>语法：<code>string = &quot;Hi {}， Welcome to China.&quot;.format(&quot;peppa pig&quot;)</code></p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#88846F;">#直接使用</span></span>
<span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;Hi </span><span style="color:#AE81FF;">{}</span><span style="color:#E6DB74;">， Welcome to China.&quot;</span><span style="color:#F8F8F2;">.format(</span><span style="color:#E6DB74;">&quot;peppa pig&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(string)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#借助变量，定好模板</span></span>
<span class="line"><span style="color:#F8F8F2;">template_string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;Hi </span><span style="color:#AE81FF;">{}</span><span style="color:#E6DB74;">， Welcome to China.&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">formatted_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> template_string.format(</span><span style="color:#E6DB74;">&quot;peppa pig&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(formatted_string)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">Hi peppa pig， Welcome to China.</span></span>
<span class="line"><span style="color:#F8F8F2;">Hi peppa pig， Welcome to China.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#88846F;">#填两个值，多个值类似</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;Hi </span><span style="color:#AE81FF;">{}</span><span style="color:#E6DB74;">， Welcome to </span><span style="color:#AE81FF;">{}</span><span style="color:#E6DB74;">.&quot;</span><span style="color:#F8F8F2;">.format(</span><span style="color:#E6DB74;">&quot;peppa pig&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;China&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(string)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">template_string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;Hi </span><span style="color:#AE81FF;">{}</span><span style="color:#E6DB74;">， Welcome to </span><span style="color:#AE81FF;">{}</span><span style="color:#E6DB74;">.&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">formatted_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> template_string.format(</span><span style="color:#E6DB74;">&quot;peppa pig&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;China&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(formatted_string)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol>`,1))])}const h=t(u,[["render",v]]),E=JSON.parse(`{"path":"/programming/python/04-string.html","title":"4. 字符串","lang":"zh-CN","frontmatter":{"title":"4. 字符串","icon":"boke","date":"2025-03-27T20:02:55.000Z","author":"Ran","category":["python"],"tag":["python"],"isOriginal":true,"sticky":false,"star":false,"article":true,"timeline":true,"image":false,"navbar":true,"sidebarIcon":true,"headerDepth":5,"comment":true,"lastUpdated":true,"editLink":false,"backToTop":true,"toc":true,"description":"1. 字符串的创建 三种方法： 单引号 双引号 三个单引号（三个双引号） 单引号、双引号 问题：无法直接输出段落。 三个单引号（三个双引号） 特点：段落原样输出。 2. 字符串的长度 字符串是从1开始数，下标从左到右是从0开始，注意区分。因此，字符串长度 - 1 = 下标最大值。 3. 字符串的获取 获取单个字符 获取一串连续字符 方法一：从左向右取下...","head":[["meta",{"property":"og:url","content":"https://pythiaroot.com/programming/python/04-string.html"}],["meta",{"property":"og:site_name","content":"Pythia’s Root"}],["meta",{"property":"og:title","content":"4. 字符串"}],["meta",{"property":"og:description","content":"1. 字符串的创建 三种方法： 单引号 双引号 三个单引号（三个双引号） 单引号、双引号 问题：无法直接输出段落。 三个单引号（三个双引号） 特点：段落原样输出。 2. 字符串的长度 字符串是从1开始数，下标从左到右是从0开始，注意区分。因此，字符串长度 - 1 = 下标最大值。 3. 字符串的获取 获取单个字符 获取一串连续字符 方法一：从左向右取下..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-08T08:05:00.000Z"}],["meta",{"property":"article:author","content":"Ran"}],["meta",{"property":"article:tag","content":"python"}],["meta",{"property":"article:published_time","content":"2025-03-27T20:02:55.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-08T08:05:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"4. 字符串\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-03-27T20:02:55.000Z\\",\\"dateModified\\":\\"2025-04-08T08:05:00.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Ran\\"}]}"]]},"git":{"createdTime":1743079221000,"updatedTime":1744099500000,"contributors":[{"name":"AmaraMeng","username":"AmaraMeng","email":"ranmeng9558@gmail.com","commits":4,"url":"https://github.com/AmaraMeng"}]},"readingTime":{"minutes":15.57,"words":4670},"filePathRelative":"programming/python/04-string.md","localizedDate":"2025年3月27日","excerpt":"<h2>1. 字符串的创建</h2>\\n<p>三种方法：</p>\\n<ol>\\n<li>单引号</li>\\n<li>双引号</li>\\n<li>三个单引号（三个双引号）</li>\\n</ol>\\n<ul>\\n<li>单引号、双引号</li>\\n</ul>\\n<div class=\\"language-python line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"python\\" style=\\"background-color:#272822;color:#F8F8F2\\"><pre class=\\"shiki monokai vp-code\\"><code><span class=\\"line\\"><span style=\\"color:#F8F8F2\\">string </span><span style=\\"color:#F92672\\">=</span><span style=\\"color:#E6DB74\\"> 'I am born for this.'</span><span style=\\"color:#88846F\\">    #英文表达</span></span>\\n<span class=\\"line\\"><span style=\\"color:#88846F\\">#string = 'I'm born for this.'     # I am 缩写成 I‘m，与表示字符串的引号冲突，错误。</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">string </span><span style=\\"color:#F92672\\">=</span><span style=\\"color:#E6DB74\\"> \\"I'm born for this.\\"</span><span style=\\"color:#88846F\\">     # 正确表达</span></span>\\n<span class=\\"line\\"><span style=\\"color:#66D9EF\\">print</span><span style=\\"color:#F8F8F2\\">(string)</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#88846F\\">#-------output-------</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">I</span><span style=\\"color:#E6DB74\\">'m born for this.</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{h as comp,E as data};
