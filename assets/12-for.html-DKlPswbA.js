import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as l,o as e}from"./app-Cfm_SL1T.js";const p="/assets/image-20250619133403964-3HmPQFsj.png",o="/assets/image-20250619133451110-BCCoygSF.png",i="/assets/image-20250619134318766-DL0aDRuz.png",c="/assets/image-20250619134610409-DjbeqmSG.png",r="/assets/image-20250619134629785-HfKLWwew.png",t={};function F(d,s){return e(),a("div",null,s[0]||(s[0]=[l(`<h2 id="_1-for-的语法" tabindex="-1"><a class="header-anchor" href="#_1-for-的语法"><span>1. for 的语法</span></a></h2><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> 变量 </span><span style="color:#F92672;">in</span><span style="color:#F8F8F2;"> 可迭代对象：</span></span>
<span class="line"><span style="color:#F8F8F2;">	循环体代码</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>代码：</p><p>代码中 <code>x</code> 是<strong>临时变量</strong>。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> x </span><span style="color:#F92672;">in</span><span style="color:#F8F8F2;"> [</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">]:</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(x)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;循环结束后，x 的值为：&#39;</span><span style="color:#F8F8F2;">, x)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#AE81FF;">1</span></span>
<span class="line"><span style="color:#AE81FF;">2</span></span>
<span class="line"><span style="color:#AE81FF;">3</span></span>
<span class="line"><span style="color:#F8F8F2;">循环结束后，x 的值为： </span><span style="color:#AE81FF;">3</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>例子：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">student_list </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#E6DB74;">&#39;李雷&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;韩梅梅&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;马冬梅&#39;</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> student </span><span style="color:#F92672;">in</span><span style="color:#F8F8F2;"> student_list:</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(student)</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">李雷</span></span>
<span class="line"><span style="color:#F8F8F2;">韩梅梅</span></span>
<span class="line"><span style="color:#F8F8F2;">马冬梅</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-while-循环实现-for-循环" tabindex="-1"><a class="header-anchor" href="#_2-while-循环实现-for-循环"><span>2. while 循环实现 for 循环</span></a></h2><p>上述代码用 while 循环如何实现？</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">student_list </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#E6DB74;">&#39;李雷&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;韩梅梅&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;马冬梅&#39;</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">i </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">while</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">&lt;</span><span style="color:#66D9EF;"> len</span><span style="color:#F8F8F2;">(student_list):</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(student_list[i])</span></span>
<span class="line"><span style="color:#F8F8F2;">    i </span><span style="color:#F92672;">+=</span><span style="color:#AE81FF;"> 1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-小试牛刀" tabindex="-1"><a class="header-anchor" href="#_3-小试牛刀"><span>3. 小试牛刀</span></a></h2><h3 id="_3-1-遍历列表并将每个元素平方后放回原列表" tabindex="-1"><a class="header-anchor" href="#_3-1-遍历列表并将每个元素平方后放回原列表"><span>3.1 遍历列表并将每个元素平方后放回原列表</span></a></h3><figure><img src="`+p+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>Answer:</strong></p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">numbers </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">6</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">7</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">8</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">9</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">10</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">index </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span></span>
<span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> num </span><span style="color:#F92672;">in</span><span style="color:#F8F8F2;"> numbers:</span></span>
<span class="line"><span style="color:#F8F8F2;">    new_num </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> num </span><span style="color:#F92672;">**</span><span style="color:#AE81FF;"> 2</span></span>
<span class="line"><span style="color:#F8F8F2;">    numbers[index] </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> new_num</span></span>
<span class="line"><span style="color:#F8F8F2;">    index </span><span style="color:#F92672;">+=</span><span style="color:#AE81FF;"> 1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(numbers)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">9</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">16</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">25</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">36</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">49</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">64</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">81</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">100</span><span style="color:#F8F8F2;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>思路：问题拆解</p><p>step1: 明确提取方法：取下标</p><p>step2: 下标如何生成</p><p>step3: 提取</p><h3 id="_3-2-输出带序号的数据" tabindex="-1"><a class="header-anchor" href="#_3-2-输出带序号的数据"><span>3.2 输出带序号的数据</span></a></h3><figure><img src="`+o+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>Answer:</strong></p><p>方法一：内置函数 <code>.index()</code></p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">student_list </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#E6DB74;">&#39;李雷&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;韩梅梅&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;马冬梅&#39;</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> student </span><span style="color:#F92672;">in</span><span style="color:#F8F8F2;"> student_list:</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(student_list.index(student), student)</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;"> 李雷</span></span>
<span class="line"><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;"> 韩梅梅</span></span>
<span class="line"><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;"> 马冬梅</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>方法二：创建储存下标的变量</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">student_list </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#E6DB74;">&#39;李雷&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;韩梅梅&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;马冬梅&#39;</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">index </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span></span>
<span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> st </span><span style="color:#F92672;">in</span><span style="color:#F8F8F2;"> student_list:</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(index, st)</span></span>
<span class="line"><span style="color:#F8F8F2;">    index </span><span style="color:#F92672;">+=</span><span style="color:#AE81FF;"> 1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>优化：</p><p>若需要输出</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">stid_0 李雷</span></span>
<span class="line"><span style="color:#F8F8F2;">stid_1 韩梅梅</span></span>
<span class="line"><span style="color:#F8F8F2;">stid_2 马冬梅</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>则代码可以改为：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">student_list </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#E6DB74;">&#39;李雷&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;韩梅梅&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;马冬梅&#39;</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">index </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span></span>
<span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> st </span><span style="color:#F92672;">in</span><span style="color:#F8F8F2;"> student_list:</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;stid_</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">index</span><span style="color:#AE81FF;">}</span><span style="color:#AE81FF;"> {</span><span style="color:#F8F8F2;">st</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    index </span><span style="color:#F92672;">+=</span><span style="color:#AE81FF;"> 1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-range" tabindex="-1"><a class="header-anchor" href="#_4-range"><span>4. range()</span></a></h2><p>当需要生成一系列连续数字时，例如遍历列表、控制循环次数等。Python 提供了一个简单又高效的工具—— <code>range()</code> 函数，专门用于生成 <mark>不可变</mark>（immutable）的<mark>数字序列</mark>，尤其配合 <code>for</code> 循环进行迭代操作。</p><h3 id="_4-1-基本用法" tabindex="-1"><a class="header-anchor" href="#_4-1-基本用法"><span>4.1 基本用法</span></a></h3><p><code>range()</code> 函数最多可以接收三个参数：<code>start</code> 起始值，<code>stop</code> 终止值， <code>step</code> 步长，下面详细解释这些参数：</p><ul><li><code>start</code> ：数字序列的起始值，默认是 0 ；</li><li><code>stop</code> ：数字序列停止的地方，但注意<strong>不包含这个值</strong>；</li><li><code>step</code> ：每个数字之间的差值（步长），默认值是 1.</li></ul><p>代码如下：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;"> range</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(i)</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#AE81FF;">0</span></span>
<span class="line"><span style="color:#AE81FF;">1</span></span>
<span class="line"><span style="color:#AE81FF;">2</span></span>
<span class="line"><span style="color:#AE81FF;">3</span></span>
<span class="line"><span style="color:#AE81FF;">4</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>指定开始结束：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;"> range</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">6</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(i)</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#AE81FF;">2</span></span>
<span class="line"><span style="color:#AE81FF;">3</span></span>
<span class="line"><span style="color:#AE81FF;">4</span></span>
<span class="line"><span style="color:#AE81FF;">5</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>指定间隔：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;"> range</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">10</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(i)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#AE81FF;">1</span></span>
<span class="line"><span style="color:#AE81FF;">3</span></span>
<span class="line"><span style="color:#AE81FF;">5</span></span>
<span class="line"><span style="color:#AE81FF;">7</span></span>
<span class="line"><span style="color:#AE81FF;">9</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2-例子-生成一个列表包含-0-到-100" tabindex="-1"><a class="header-anchor" href="#_4-2-例子-生成一个列表包含-0-到-100"><span>4.2 例子：生成一个列表包含 0 到 100</span></a></h3><p>方法一：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">lst </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> []</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;"> range</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">101</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F8F8F2;">    lst.append(i)                </span><span style="color:#88846F;"># 注意不能用 lst = lst.append(i) ，因为 .append() 是直接修改原列表</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(lst)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>方法二：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">list</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">range</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">101</span><span style="color:#F8F8F2;">)))</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>因此上文输出带序号的元素可以用 <code>range()</code> 完成：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">student_list </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#E6DB74;">&#39;李雷&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;韩梅梅&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;马冬梅&#39;</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> student </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;"> range</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">len</span><span style="color:#F8F8F2;">(student_list)):</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(student_list[student])</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-小试牛刀2-打印星号三角形" tabindex="-1"><a class="header-anchor" href="#_5-小试牛刀2-打印星号三角形"><span>5. 小试牛刀2：打印星号三角形</span></a></h2><figure><img src="`+i+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>Answer:</strong></p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">n </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;请输入高度：&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;"> range</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">(n)</span><span style="color:#F92672;">+</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(i</span><span style="color:#F92672;">*</span><span style="color:#E6DB74;">&#39;*&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">请输入高度：</span><span style="color:#AE81FF;">3</span></span>
<span class="line"><span style="color:#F92672;">*</span></span>
<span class="line"><span style="color:#F92672;">**</span></span>
<span class="line"><span style="color:#F92672;">***</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>思路：</strong></p><p>先输出一次，再考虑循环</p><p><code>n = int(input(&#39;请输入三角形的高度&#39;))</code></p><p>第一行 <code>print(*)</code></p><p>第二行 <code>print(**)</code></p><p>第三行 <code>print(***)</code></p><p>转化为：</p><p><code>print(1 * &#39;*&#39;)</code></p><p><code>print(2 * &#39;*&#39;)</code></p><p><code>print(3 * &#39;*&#39;)</code></p><p>转化为前面获得 1-3 的数字的问题。</p><h2 id="_6-enumerate" tabindex="-1"><a class="header-anchor" href="#_6-enumerate"><span>6. enumerate()</span></a></h2><p>任务：按照索引得到水果。</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">fruits </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#E6DB74;">&quot;apple&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;banana&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;cherry&quot;</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 方法一：</span></span>
<span class="line"><span style="color:#F8F8F2;">index </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span></span>
<span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> fruit </span><span style="color:#F92672;">in</span><span style="color:#F8F8F2;"> fruits:</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;索引为 </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">index</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> 的水果是 </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">fruit</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    index </span><span style="color:#F92672;">+=</span><span style="color:#AE81FF;"> 1</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span></span>
<span class="line"><span style="color:#88846F;"># 方法二</span></span>
<span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> index </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;"> range</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">len</span><span style="color:#F8F8F2;">(fruits)):</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;索引为 </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">index</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> 的水果是 </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">fruits[index]</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">索引为 </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;"> 的水果是 apple</span></span>
<span class="line"><span style="color:#F8F8F2;">索引为 </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;"> 的水果是 banana</span></span>
<span class="line"><span style="color:#F8F8F2;">索引为 </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;"> 的水果是 cherry</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_6-1-基本用法" tabindex="-1"><a class="header-anchor" href="#_6-1-基本用法"><span>6.1 基本用法</span></a></h3><p>引入新函数<code>enumerate()</code></p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">fruits </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#E6DB74;">&quot;apple&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;banana&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;cherry&quot;</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> index, fruit </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;"> enumerate</span><span style="color:#F8F8F2;">(fruits):</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(index, fruit)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;"> apple</span></span>
<span class="line"><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;"> banana</span></span>
<span class="line"><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;"> cherry</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>那么 <code>enumerate(fruits)</code> 的结果是什么？如何理解 <code>enumerate</code> 语句？</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">fruits </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#E6DB74;">&quot;apple&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;banana&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;cherry&quot;</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># print(enumerate(fruits))</span></span>
<span class="line"><span style="color:#88846F;"># 得到地址 &lt;enumerate object at 0x0000020D811399C0&gt;</span></span>
<span class="line"><span style="color:#88846F;"># 考虑转化为 list</span></span>
<span class="line"><span style="color:#F8F8F2;">fruits_list </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> list</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">enumerate</span><span style="color:#F8F8F2;">(fruits))</span></span>
<span class="line"><span style="color:#88846F;"># 用循环实现</span></span>
<span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> item </span><span style="color:#F92672;">in</span><span style="color:#F8F8F2;"> fruits_list:</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(item)</span></span>
<span class="line"><span style="color:#88846F;"># item 是元组的形式</span></span>
<span class="line"><span style="color:#88846F;">#     index, fruit = item</span></span>
<span class="line"><span style="color:#88846F;">#     print(index, fruit)</span></span>
<span class="line"><span style="color:#88846F;"># 可以将 for 循环语句中的 item 用 index, fruit 替换掉</span></span>
<span class="line"><span style="color:#88846F;"># 即</span></span>
<span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> index, fruit </span><span style="color:#F92672;">in</span><span style="color:#F8F8F2;"> fruits_list:</span></span>
<span class="line"><span style="color:#88846F;"># 即</span></span>
<span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> index, fruit </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;"> enumerate</span><span style="color:#F8F8F2;">(fruits)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_6-2-指定起始索引" tabindex="-1"><a class="header-anchor" href="#_6-2-指定起始索引"><span>6.2 指定起始索引</span></a></h3><p>默认情况下， <code>enumerate</code> 是从 0 开始计数，可以通过添加一个可选的 <code>start</code> 参数来指定起始索引。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">fruits </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#E6DB74;">&quot;apple&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;banana&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;cherry&quot;</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> index, fruit </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;"> enumerate</span><span style="color:#F8F8F2;">(fruits, </span><span style="color:#FD971F;font-style:italic;">start</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(index, fruit)</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;"> apple</span></span>
<span class="line"><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;"> banana</span></span>
<span class="line"><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;"> cherry</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-3-使用场景" tabindex="-1"><a class="header-anchor" href="#_6-3-使用场景"><span>6.3 使用场景</span></a></h3><ol><li>需要同时对索引和元素处理；</li><li>需要修改原列表或数组的某些特定位置（修改或替换某些元素时拿到索引比较必要，在循环内可以完成索引和元素的映射）；</li><li>减少硬编码，提升可读性。</li></ol><h3 id="_6-4-找到列表的最大值" tabindex="-1"><a class="header-anchor" href="#_6-4-找到列表的最大值"><span>6.4 找到列表的最大值</span></a></h3><figure><img src="`+c+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+r+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>Answer:</strong></p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">nums </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#AE81FF;">12</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">43</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">66</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">74</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">28</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">91</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">66</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">max_num </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> nums[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">]             </span><span style="color:#88846F;"># 先假设第一个元素是最大的</span></span>
<span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> n </span><span style="color:#F92672;">in</span><span style="color:#F8F8F2;"> nums:</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> n </span><span style="color:#F92672;">&gt;</span><span style="color:#F8F8F2;"> max_num:</span></span>
<span class="line"><span style="color:#F8F8F2;">        max_num </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> n</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;Max Value is </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">max_num</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">Max Value </span><span style="color:#F92672;">is</span><span style="color:#AE81FF;"> 91</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>思路：从篮子里拿桃子比较，先拿出一个假设是最大的，然后再从篮子里拿桃子比较，大的留下。</p><p>因此，该代码思路一样，先假设第一个元素最大，穷举列表中的元素比大小，把比较出来的大的值覆盖掉上一个最大值。</p><h3 id="_6-5-找到列表最大值的下标" tabindex="-1"><a class="header-anchor" href="#_6-5-找到列表最大值的下标"><span>6.5 找到列表最大值的下标</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">nums </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#AE81FF;">12</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">43</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">66</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">74</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">28</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">91</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">66</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">max_num </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> nums[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> index, n </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;"> enumerate</span><span style="color:#F8F8F2;">(nums):</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> n </span><span style="color:#F92672;">&gt;</span><span style="color:#F8F8F2;"> max_num:</span></span>
<span class="line"><span style="color:#F8F8F2;">        max_num </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> n</span></span>
<span class="line"><span style="color:#F8F8F2;">        max_index </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> index</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;The index of max value is </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">max_index</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">The index of </span><span style="color:#66D9EF;">max</span><span style="color:#F8F8F2;"> value </span><span style="color:#F92672;">is</span><span style="color:#AE81FF;"> 7</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-6-找到列表的多个最大值以及对应的多个下标" tabindex="-1"><a class="header-anchor" href="#_6-6-找到列表的多个最大值以及对应的多个下标"><span>6.6 找到列表的多个最大值以及对应的多个下标</span></a></h3><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">nums </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#AE81FF;">12</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">43</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">66</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">74</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">91</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">28</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">91</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">66</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 第一次循环找到最大值</span></span>
<span class="line"><span style="color:#F8F8F2;">max_value </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> nums[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> n </span><span style="color:#F92672;">in</span><span style="color:#F8F8F2;"> nums:</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> n </span><span style="color:#F92672;">&gt;</span><span style="color:#F8F8F2;"> max_value:</span></span>
<span class="line"><span style="color:#F8F8F2;">        max_value </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> n</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 第二次循环：找到所有等于这个最大值的元素的下标</span></span>
<span class="line"><span style="color:#F8F8F2;">max_indices </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> []</span></span>
<span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> index, value </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;"> enumerate</span><span style="color:#F8F8F2;">(nums):</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> value </span><span style="color:#F92672;">==</span><span style="color:#F8F8F2;"> max_value:</span></span>
<span class="line"><span style="color:#F8F8F2;">        max_indices.append(index)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 把下标列表转换成元组</span></span>
<span class="line"><span style="color:#F8F8F2;">max_indices_tuple </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> tuple</span><span style="color:#F8F8F2;">(max_indices)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(max_indices_tuple)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">6</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">8</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>思考：如何一个循环实现？</p><p>其他思考：不用enumerate，用其他比如range, 下标，max之类的实现</p>`,90)]))}const v=n(t,[["render",F]]),m=JSON.parse(`{"path":"/programming/python/12-for.html","title":"12. for","lang":"zh-CN","frontmatter":{"title":"12. for","icon":"boke","date":"2025-06-13T13:34:13.000Z","author":"Ran","isOriginal":true,"sticky":false,"star":false,"article":true,"timeline":true,"image":false,"navbar":true,"sidebarIcon":true,"comment":true,"lastUpdated":true,"editLink":true,"backToTop":true,"toc":true,"description":"1. for 的语法 代码： 代码中 x 是临时变量。 例子： 2. while 循环实现 for 循环 上述代码用 while 循环如何实现？ 3. 小试牛刀 3.1 遍历列表并将每个元素平方后放回原列表 Answer: 思路：问题拆解 step1: 明确提取方法：取下标 step2: 下标如何生成 step3: 提取 3.2 输出带序号的数据 An...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"12. for\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-06-13T13:34:13.000Z\\",\\"dateModified\\":\\"2025-06-19T05:49:28.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Ran\\"}]}"],["meta",{"property":"og:url","content":"https://pythiaroot.com/programming/python/12-for.html"}],["meta",{"property":"og:site_name","content":"Pythia’s Root"}],["meta",{"property":"og:title","content":"12. for"}],["meta",{"property":"og:description","content":"1. for 的语法 代码： 代码中 x 是临时变量。 例子： 2. while 循环实现 for 循环 上述代码用 while 循环如何实现？ 3. 小试牛刀 3.1 遍历列表并将每个元素平方后放回原列表 Answer: 思路：问题拆解 step1: 明确提取方法：取下标 step2: 下标如何生成 step3: 提取 3.2 输出带序号的数据 An..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-19T05:49:28.000Z"}],["meta",{"property":"article:author","content":"Ran"}],["meta",{"property":"article:published_time","content":"2025-06-13T13:34:13.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-19T05:49:28.000Z"}]]},"git":{"createdTime":1749796377000,"updatedTime":1750312168000,"contributors":[{"name":"AmaraMeng","username":"AmaraMeng","email":"ranmeng9558@gmail.com","commits":4,"url":"https://github.com/AmaraMeng"}],"changelog":[{"hash":"d15a62ab2c39ef4c45c542393571f8578f3e18c6","time":1750312168000,"email":"ranmeng9558@gmail.com","author":"AmaraMeng","message":"Refactor code structure for improved readability and maintainability"},{"hash":"e18ce267d4d0d8017326b04e2c07ce3bc4bd78eb","time":1750147824000,"email":"ranmeng9558@gmail.com","author":"AmaraMeng","message":"Refactor section headings: Update formatting for clarity in maximum value index examples"},{"hash":"02d636f5a3813dddea2591a9ff10ab6ad5d2ca1d","time":1750147679000,"email":"ranmeng9558@gmail.com","author":"AmaraMeng","message":"Implement code changes to enhance functionality and improve performance"},{"hash":"bf9cae666c7867720b65e938151e155803d71a30","time":1749796377000,"email":"ranmeng9558@gmail.com","author":"AmaraMeng","message":"Add comprehensive documentation for 'for' loop in Python"}]},"readingTime":{"minutes":5.06,"words":1517},"filePathRelative":"programming/python/12-for.md","excerpt":"<h2>1. for 的语法</h2>\\n<div class=\\"language-python line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"python\\" style=\\"background-color:#272822;color:#F8F8F2\\"><pre class=\\"shiki monokai vp-code\\"><code class=\\"language-python\\"><span class=\\"line\\"><span style=\\"color:#F92672\\">for</span><span style=\\"color:#F8F8F2\\"> 变量 </span><span style=\\"color:#F92672\\">in</span><span style=\\"color:#F8F8F2\\"> 可迭代对象：</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">\\t循环体代码</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{v as comp,m as data};
