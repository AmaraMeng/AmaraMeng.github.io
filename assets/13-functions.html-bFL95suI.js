import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as l,o as e}from"./app-8SYWuCA1.js";const o="/assets/image-20250703160410295-_pq71A1H.png",p={};function t(c,s){return e(),a("div",null,s[0]||(s[0]=[l(`<h2 id="_1-函数的定义" tabindex="-1"><a class="header-anchor" href="#_1-函数的定义"><span>1. 函数的定义</span></a></h2><h3 id="_1-1-数学函数与计算机函数" tabindex="-1"><a class="header-anchor" href="#_1-1-数学函数与计算机函数"><span>1.1 数学函数与计算机函数</span></a></h3><p>数学函数：y = f(x)</p><p>计算机函数：代码片段</p><ul><li>一段具有特定功能的、可重复使用的代码。</li><li>用函数名表示并通过函数名完成调用。</li></ul><h3 id="_1-2-使用函数的意义" tabindex="-1"><a class="header-anchor" href="#_1-2-使用函数的意义"><span>1.2 使用函数的意义</span></a></h3><ul><li>代码的重复利用（实际上也会把代码导入进来，但是肉眼上看只需要函数名）；</li><li>减少程序中代码的重复量，使代码更加容易被理解；</li><li>让代码更易于维护与更新，只需修改封装的函数代码，其他调用的地方都会随之修改。</li></ul><h2 id="_2-函数的使用" tabindex="-1"><a class="header-anchor" href="#_2-函数的使用"><span>2. 函数的使用</span></a></h2><p>函数可分为内置函数和用户自定义函数：</p><p>内置函数：</p><ul><li>Python 编程语言中已经被定好功能的函数。</li><li>可以直接调用来执行特定的任务。</li></ul><p>用户自定义函数：</p><ul><li>函数的功能和使用方法都由用户决定。</li></ul><h3 id="_2-1-使用一个函数-实现代码" tabindex="-1"><a class="header-anchor" href="#_2-1-使用一个函数-实现代码"><span>2.1 使用一个函数（实现代码）</span></a></h3><ol><li><strong>内置函数</strong></li></ol><p>输出函数：<code>print()</code></p><p>获取用户输入的函数：<code>input()</code></p><p>类型转换函数：<code>int()</code> , <code>float()</code> , <code>str()</code> 等。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">a </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> abs</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(a)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">b </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;12&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">c </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 13</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(b</span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;">c)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#AE81FF;">1</span></span>
<span class="line"><span style="color:#AE81FF;">25</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li><strong>内置标准函数库</strong></li></ol><p>除了内置函数外，Python 还有内置的标准函数库。</p><p>当我们把这些额外的函数库导入到我们的程序里时，我们可以用这些函数库中提供的方法。</p><p>访问这些函数时需要以 <strong>库名.函数名</strong> 的方式来应用。</p><ul><li><code>math.pi</code> 和 <code>math.e</code></li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> math</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;π = &#39;</span><span style="color:#F8F8F2;">, math.pi)     </span><span style="color:#88846F;"># π =  3.141592653589793</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;e = &#39;</span><span style="color:#F8F8F2;">, math.e)      </span><span style="color:#88846F;"># e =  2.718281828459045</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>math.pi</code> 在计算圆面积、圆周长时常用。</p><p><code>math.e</code> 在指数运算、自然对数等场景常用。</p><ul><li><code>math.sqrt(x)</code> 开平方</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> math</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">x </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 16</span></span>
<span class="line"><span style="color:#F8F8F2;">result </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> math.sqrt(x)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">x</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> 的平方根是 </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">result</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">)    </span><span style="color:#88846F;"># 4.0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>等价于 <code>x ** 0.5</code> ，但是<code>math.sqrt(x)</code> 的可读性更好。</p><ul><li><code>math.pow(x, y)</code> 幂</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> math</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">result </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> math.pow(</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;2 的 3 次幂 = &#39;</span><span style="color:#F8F8F2;">, result)      </span><span style="color:#88846F;"># 8.0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>与内置的 <code>**</code> 运算符类似，但 <code>math.pow()</code> 总是返回 **<code>float</code> ** 。</p><ul><li><code>math.exp(x)</code> e 的几次幂</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> math</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">result </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> math.exp(</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;e 的 2 次幂 = &#39;</span><span style="color:#F8F8F2;">, result)      </span><span style="color:#88846F;"># 7.38905609893065</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>计算指数增长很常用，比如复利、连续增长。</p><ul><li><code>math.log(x[ , base])</code> （源代码显示，实际 <code>math.log(x, base)</code> ）</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> math</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(math.log(</span><span style="color:#AE81FF;">8</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">))      </span><span style="color:#88846F;"># 3.0 以2为底， 2^3 = 8</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(math.log(</span><span style="color:#AE81FF;">10</span><span style="color:#F8F8F2;">))        </span><span style="color:#88846F;"># ln(10) 自然对数，不写以 e 为底</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>math.log(x)</code> → 自然对数（以 e 为底）</p><p><code>math.log10(x)</code> → 以 10 为底</p><p><code>math.log2(x)</code> → 以 2 为底 （Python 3.3+）</p><ul><li><code>math.factorial(x)</code> 阶乘</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> math</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(math.factorial(</span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">))    </span><span style="color:#88846F;"># 120， 指的是 5！ = 5 * 4 * 3 * 2 * 1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>常用于组合、排列、概率</p><ul><li><code>math.gcd(a, b)</code> 最大公约数</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> math</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(math.gcd(</span><span style="color:#AE81FF;">12</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">18</span><span style="color:#F8F8F2;">))    </span><span style="color:#88846F;"># 6</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>求最大公约数，常用于分数约简等。</p><ul><li><code>math.fabs(x)</code> 绝对值，返回浮点数</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> math</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(math.fabs(</span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">7</span><span style="color:#F8F8F2;">))    </span><span style="color:#88846F;"># 7.0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>类似内置 <code>abs()</code> ，只是 <code>math.fabs</code> 返回浮点数。</p><ul><li><code>math.floor(x)</code> 和 <code>math.ceil(x)</code></li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> math</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">x </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 3.7</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(math.floor(x))     </span><span style="color:#88846F;"># 3</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(math.ceil(x))      </span><span style="color:#88846F;"># 4</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>floor</code> 常用于取不超过给定值的最大整数。</p><p><code>ceil</code> 用于取不小于给定值的最小整数。</p><ul><li><code>math.trunc(x)</code> 截断小数部分</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> math</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">x </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> -</span><span style="color:#AE81FF;">3.7</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(math.trunc(x))     </span><span style="color:#88846F;"># -3</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>类似 <code>int()</code> 转换，直接去掉小数部分，<strong>不四舍五入</strong>。</p><ul><li>三角函数 sin cos tan</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> math</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">angle </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> math.pi </span><span style="color:#F92672;">/</span><span style="color:#AE81FF;"> 2</span><span style="color:#88846F;">        # 90度</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(math.sin(angle))     </span><span style="color:#88846F;"># 1.0</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(math.cos(angle))     </span><span style="color:#88846F;"># 6.123233995736766e-17 ≈ 0</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(math.tan(angle))     </span><span style="color:#88846F;"># 非常大，趋于无穷</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意角度要先转换成弧度：<code>radians = degrees(角度) × π / 180</code> 。</p><p>遵循数学库的通用标准</p><p>π/2 弧度 = 90 度</p><p>π 弧度 = 180 度</p><p>因此利用公式， <code>line4</code> 也可以写为 <code>print(math.sin(90 * math.pi / 180)) # 1.0</code> 。</p><p>也可以利用函数 <code>angle = math.radians(degress)</code> ，将度数转化为弧度 <code>print(math.sin(math.radians(90))) </code>。</p><ul><li>反三角函数 asin acos atan</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> math</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">x </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0.5</span></span>
<span class="line"><span style="color:#F8F8F2;">angle </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> math.asin(x)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;asin(0.5) = &#39;</span><span style="color:#F8F8F2;">, angle, </span><span style="color:#E6DB74;">&#39;弧度&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;≈&#39;</span><span style="color:#F8F8F2;">, math.degrees(angle), </span><span style="color:#E6DB74;">&#39;度&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">asin(</span><span style="color:#AE81FF;">0.5</span><span style="color:#F8F8F2;">) </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">  0.5235987755982989</span><span style="color:#F8F8F2;"> 弧度</span></span>
<span class="line"><span style="color:#F8F8F2;">≈ </span><span style="color:#AE81FF;">30.000000000000004</span><span style="color:#F8F8F2;"> 度</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>math.hypot(x, y)</code></li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> math</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(math.hypot(</span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">))    </span><span style="color:#88846F;"># 5.0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>常用于2D平面距离计算。</p><h3 id="_2-2-常用-math-函数总结" tabindex="-1"><a class="header-anchor" href="#_2-2-常用-math-函数总结"><span>2.2 常用 math 函数总结</span></a></h3><table><thead><tr><th>常用函数</th><th>作用</th><th>常见用途</th></tr></thead><tbody><tr><td><code>pi</code>, <code>e</code></td><td>常数</td><td>圆形、指数运算</td></tr><tr><td><code>sqrt</code></td><td>平方根</td><td>几何、方差</td></tr><tr><td><code>pow</code></td><td>幂运算</td><td>计算 x^y</td></tr><tr><td><code>exp</code></td><td>e 的幂</td><td>指数增长</td></tr><tr><td><code>log</code></td><td>对数</td><td>信息论、熵</td></tr><tr><td><code>factorial</code></td><td>阶乘</td><td>排列组合</td></tr><tr><td><code>gcd</code></td><td>最大公约数</td><td>分数约简</td></tr><tr><td><code>fabs</code></td><td>绝对值</td><td>距离</td></tr><tr><td><code>floor</code>, <code>ceil</code></td><td>向下/向上取整</td><td>分段</td></tr><tr><td><code>trunc</code></td><td>截断</td><td>舍去小数</td></tr><tr><td><code>sin</code>, <code>cos</code>, <code>tan</code></td><td>三角函数</td><td>角度、波形</td></tr><tr><td><code>asin</code>, <code>acos</code>, <code>atan</code></td><td>反三角</td><td>计算角度</td></tr><tr><td><code>radians</code>, <code>degrees</code></td><td>度 ↔ 弧度</td><td>单位转换</td></tr><tr><td><code>isclose</code></td><td>浮点数比较</td><td>相等判断</td></tr><tr><td><code>hypot</code></td><td>斜边</td><td>距离</td></tr></tbody></table><h3 id="_2-3-常用-random-函数总结" tabindex="-1"><a class="header-anchor" href="#_2-3-常用-random-函数总结"><span>2.3 常用 random 函数总结</span></a></h3><table><thead><tr><th>函数</th><th>用途</th><th>解释</th></tr></thead><tbody><tr><td><code>random()</code></td><td>生成 0.0 ~ 1.0 之间的随机小数</td><td>左闭右开 [0.0, 1.0)</td></tr><tr><td><code>uniform(a, b)</code></td><td>生成 a ~ b 之间的随机小数</td><td>左闭右闭 [a, b]</td></tr><tr><td><code>randint(a, b)</code></td><td>生成 a ~ b 之间的随机整数</td><td>左闭右闭 [a, b]</td></tr><tr><td><code>randrange(start, stop[, step])</code></td><td>从 range(start, stop, step) 中随机选一个整数</td><td>类似 <code>range()</code></td></tr></tbody></table><h4 id="_2-3-1-1️⃣-基础随机数生成" tabindex="-1"><a class="header-anchor" href="#_2-3-1-1️⃣-基础随机数生成"><span>2.3.1 1️⃣ 基础随机数生成</span></a></h4><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> random</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(random.random())</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(random.uniform(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">10</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(random.randint(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">10</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(random.randrange(</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">100</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#AE81FF;">0.7533060472818913</span></span>
<span class="line"><span style="color:#AE81FF;">4.265715521633123</span></span>
<span class="line"><span style="color:#AE81FF;">8</span></span>
<span class="line"><span style="color:#AE81FF;">5</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>保留小数时，可以用前面学到的格式化方法，也可以用<code>round</code> 。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">round</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">10.111</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">)) </span><span style="color:#88846F;"># 四舍五入，保留两位小数</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#AE81FF;">10.11</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-3-2-2️⃣-随机选择与打乱" tabindex="-1"><a class="header-anchor" href="#_2-3-2-2️⃣-随机选择与打乱"><span>2.3.2 2️⃣ 随机选择与打乱</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> random</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">items </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#E6DB74;">&#39;apple&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;banana&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;orange&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;pear&#39;</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(random.choice(items))     </span><span style="color:#88846F;"># 随机选一个</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(random.choices(items, </span><span style="color:#FD971F;font-style:italic;">k</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">))    </span><span style="color:#88846F;"># 随机选 3 个，可重复</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(random.sample(items, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">))     </span><span style="color:#88846F;"># 随机选 3 个，不重复</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">orange</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#E6DB74;">&#39;orange&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;pear&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;orange&#39;</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#E6DB74;">&#39;orange&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;apple&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;pear&#39;</span><span style="color:#F8F8F2;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> random</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">numbers </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">random.shuffle(numbers)     </span><span style="color:#88846F;"># 原地打乱</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(numbers)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th>函数</th><th>用途</th><th>解释</th></tr></thead><tbody><tr><td><code>choice(seq)</code></td><td>从序列中随机选 1 个元素</td><td>列表、元组、字符串都行</td></tr><tr><td><code>choices(seq, k=N)</code></td><td>从序列中随机选 N 个（可重复）</td><td>有放回抽样</td></tr><tr><td><code>sample(seq, k=N)</code></td><td>从序列中随机选 N 个（不重复）</td><td>无放回抽样</td></tr><tr><td><code>shuffle(seq)</code></td><td>将序列原地打乱</td><td>修改原列表</td></tr></tbody></table><h4 id="_2-3-3-3️⃣-随机分布函数-稍进阶" tabindex="-1"><a class="header-anchor" href="#_2-3-3-3️⃣-随机分布函数-稍进阶"><span>2.3.3 3️⃣ 随机分布函数（稍进阶）</span></a></h4><table><thead><tr><th>函数</th><th>用途</th><th>解释</th></tr></thead><tbody><tr><td><code>betavariate(alpha, beta)</code></td><td>Beta 分布</td><td></td></tr><tr><td><code>expovariate(lambd)</code></td><td>指数分布</td><td></td></tr><tr><td><code>gauss(mu, sigma)</code></td><td>高斯正态分布</td><td></td></tr><tr><td><code>normalvariate(mu, sigma)</code></td><td>正态分布</td><td></td></tr><tr><td><code>lognormvariate(mu, sigma)</code></td><td>对数正态分布</td><td></td></tr><tr><td><code>vonmisesvariate(mu, kappa)</code></td><td>von Mises 分布</td><td></td></tr><tr><td><code>gammavariate(alpha, beta)</code></td><td>Gamma 分布</td><td></td></tr></tbody></table><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> random</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(random.gauss(</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">))            </span><span style="color:#88846F;"># 均值0，标准差1的正态分布</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(random.normalvariate(</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">))    </span><span style="color:#88846F;"># 同样生成正态分布，与上一个生成的正态分布的方法不一样</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(random.expovariate(</span><span style="color:#AE81FF;">1.5</span><span style="color:#F8F8F2;">))       </span><span style="color:#88846F;"># 指数分布</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#AE81FF;">0.28990359456330556</span></span>
<span class="line"><span style="color:#AE81FF;">0.18178579651038132</span></span>
<span class="line"><span style="color:#AE81FF;">0.27150452972659767</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出的结果是一组数据中随机选了一个输出，如果需要输出多个数据，可以借助 for 循环：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> random</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">lst </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> []</span></span>
<span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> _ </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;"> range</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">):      </span><span style="color:#88846F;"># 生成 5 个数据，因为 i 后续用不到，可以用下划线代替</span></span>
<span class="line"><span style="color:#F8F8F2;">    lst.append(random.gauss(</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(lst)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">1.7322778531816645</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">1.5177947097095652</span><span style="color:#F8F8F2;">, </span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">1.4917899545932514</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0.7663045647487722</span><span style="color:#F8F8F2;">, </span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">0.0974832602527749</span><span style="color:#F8F8F2;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>场景使用：</strong></p><p>需要安装 <code>matplotlib</code> 包，安装失败的话需要关闭代理后再尝试。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> random</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> matplotlib.pyplot </span><span style="color:#F92672;">as</span><span style="color:#F8F8F2;"> plt</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 生成 1000 个指数分布随机数</span></span>
<span class="line"><span style="color:#F8F8F2;">expo_nums </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [random.expovariate(</span><span style="color:#AE81FF;">1.5</span><span style="color:#F8F8F2;">) </span><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> _ </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;"> range</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">1000</span><span style="color:#F8F8F2;">)]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 画直方图</span></span>
<span class="line"><span style="color:#F8F8F2;">plt.hist(expo_nums, </span><span style="color:#FD971F;font-style:italic;">bins</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">30</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">density</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">True</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">edgecolor</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;">&#39;black&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">plt.title(</span><span style="color:#E6DB74;">&#39;Exponential Distribution (lambda=1.5)&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">plt.xlabel(</span><span style="color:#E6DB74;">&#39;Value&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">plt.ylabel(</span><span style="color:#E6DB74;">&#39;Density&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">plt.show()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果如下：</p><figure><img src="`+o+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',92)]))}const d=n(p,[["render",t]]),F=JSON.parse('{"path":"/programming/python/13-functions.html","title":"13. 函数","lang":"zh-CN","frontmatter":{"title":"13. 函数","icon":"boke","date":"2025-07-03T14:01:00.000Z","author":"Ran","isOriginal":true,"sticky":false,"star":false,"article":true,"timeline":true,"image":false,"navbar":true,"sidebarIcon":true,"comment":true,"lastUpdated":true,"editLink":true,"backToTop":true,"toc":true,"description":"1. 函数的定义 1.1 数学函数与计算机函数 数学函数：y = f(x) 计算机函数：代码片段 一段具有特定功能的、可重复使用的代码。 用函数名表示并通过函数名完成调用。 1.2 使用函数的意义 代码的重复利用（实际上也会把代码导入进来，但是肉眼上看只需要函数名）； 减少程序中代码的重复量，使代码更加容易被理解； 让代码更易于维护与更新，只需修改封装...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"13. 函数\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-07-03T14:01:00.000Z\\",\\"dateModified\\":\\"2025-07-03T08:04:49.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Ran\\"}]}"],["meta",{"property":"og:url","content":"https://pythiaroot.com/programming/python/13-functions.html"}],["meta",{"property":"og:site_name","content":"Pythia’s Root"}],["meta",{"property":"og:title","content":"13. 函数"}],["meta",{"property":"og:description","content":"1. 函数的定义 1.1 数学函数与计算机函数 数学函数：y = f(x) 计算机函数：代码片段 一段具有特定功能的、可重复使用的代码。 用函数名表示并通过函数名完成调用。 1.2 使用函数的意义 代码的重复利用（实际上也会把代码导入进来，但是肉眼上看只需要函数名）； 减少程序中代码的重复量，使代码更加容易被理解； 让代码更易于维护与更新，只需修改封装..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-03T08:04:49.000Z"}],["meta",{"property":"article:author","content":"Ran"}],["meta",{"property":"article:published_time","content":"2025-07-03T14:01:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-03T08:04:49.000Z"}]]},"git":{"createdTime":1751529889000,"updatedTime":1751529889000,"contributors":[{"name":"AmaraMeng","username":"AmaraMeng","email":"ranmeng9558@gmail.com","commits":1,"url":"https://github.com/AmaraMeng"}],"changelog":[{"hash":"9f35bf99ecfac75d5b633ab63342cc8d1075ff7a","time":1751529889000,"email":"ranmeng9558@gmail.com","author":"AmaraMeng","message":"Add comprehensive documentation for Python functions, including built-in and user-defined functions, along with examples and usage of the math and random libraries."}]},"readingTime":{"minutes":5.83,"words":1750},"filePathRelative":"programming/python/13-functions.md","excerpt":"<h2>1. 函数的定义</h2>\\n<h3>1.1 数学函数与计算机函数</h3>\\n<p>数学函数：y = f(x)</p>\\n<p>计算机函数：代码片段</p>\\n<ul>\\n<li>一段具有特定功能的、可重复使用的代码。</li>\\n<li>用函数名表示并通过函数名完成调用。</li>\\n</ul>\\n<h3>1.2 使用函数的意义</h3>\\n<ul>\\n<li>代码的重复利用（实际上也会把代码导入进来，但是肉眼上看只需要函数名）；</li>\\n<li>减少程序中代码的重复量，使代码更加容易被理解；</li>\\n<li>让代码更易于维护与更新，只需修改封装的函数代码，其他调用的地方都会随之修改。</li>\\n</ul>","autoDesc":true}');export{d as comp,F as data};
