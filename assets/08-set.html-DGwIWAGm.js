import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as l,o as p}from"./app-DPKxm4qC.js";const e="/assets/image-20250527151942814-CP989LDG.png",o="/assets/image-20250527152109167-DUZUGLfQ.png",F="/assets/image-20250527152227311-D_3xdj7Q.png",c="/assets/image-20250527161040501-DKeEZ40z.png",r="/assets/image-20250527162848633-DugX_QYZ.png",t={};function i(y,s){return p(),a("div",null,[...s[0]||(s[0]=[l(`<h2 id="_1-如何创建集合" tabindex="-1"><a class="header-anchor" href="#_1-如何创建集合"><span>1. 如何创建集合</span></a></h2><p>集合的创建主要有两种方式，可以看具体情况选择使用。</p><h3 id="_1-1-直接使用花括号-创建集合" tabindex="-1"><a class="header-anchor" href="#_1-1-直接使用花括号-创建集合"><span>1.1 直接使用花括号 <code>{}</code> 创建集合</span></a></h3><p>当我们知道集合中的元素时，可以直接使用花括号 <code>{}</code> 来定义集合。需要注意的是，集合中的元素是无序的，每次打印时显示的顺序可能不同。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">set</span><span style="color:#F92672;"> =</span><span style="color:#F8F8F2;"> {</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">8</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">set</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">8</span><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2-使用-set-函数创建集合" tabindex="-1"><a class="header-anchor" href="#_1-2-使用-set-函数创建集合"><span>1.2 使用 <code>set()</code> 函数创建集合</span></a></h3><p>如果我们有一个列表或者其他可迭代对象，想要将其转化为集合，可以使用 <code>set()</code> 函数。这样做不仅可以创建集合，还能自动去除重复的元素。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">set1 </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> set</span><span style="color:#F8F8F2;">([</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">8</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">])</span></span>
<span class="line"><span style="color:#F8F8F2;">set2 </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> set</span><span style="color:#F8F8F2;">([</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">9</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">])</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(set1)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(set2)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">8</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">9</span><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-集合的交集" tabindex="-1"><a class="header-anchor" href="#_2-集合的交集"><span>2. 集合的交集</span></a></h2><p>交集（Intersection）：交集操作返回两个集合中都出现的元素，Python 中集合的交集使用 <code>&amp;</code> 运算符来实现。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">set1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">8</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">set2 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">9</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(set1 </span><span style="color:#F92672;">&amp;</span><span style="color:#F8F8F2;"> set2)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>交集的函数：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#88846F;"># 交集 .intersection() 或运算符 &amp;</span></span>
<span class="line"><span style="color:#88846F;"># 返回多个集合的交集，即所有集合共有的元素</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">a </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">b </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">c </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> a.intersection(b)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(c)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-集合的并集" tabindex="-1"><a class="header-anchor" href="#_3-集合的并集"><span>3. 集合的并集</span></a></h2><p>并集（Union) ：并集操作返回两个集合中所有的元素，相同的元素只保留一次，可以使用 <code>|</code> 运算符来求并集。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">set1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">8</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">set2 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">9</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(set1 </span><span style="color:#F92672;">|</span><span style="color:#F8F8F2;"> set2)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">8</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">9</span><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">basket1</span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&#39;生花生&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;盐焗花生&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;蜂蜜花生&#39;</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">basket2 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&#39;盐焗花生&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;香辣花生&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;烤花生&#39;</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">all_peanuts </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> basket1 </span><span style="color:#F92672;">|</span><span style="color:#F8F8F2;"> basket2</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(all_peanuts)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span><span style="color:#E6DB74;">&#39;烤花生&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;蜂蜜花生&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;生花生&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;香辣花生&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;盐焗花生&#39;</span><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>并集的函数：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#88846F;"># 并集 .union() 或运算符 |</span></span>
<span class="line"><span style="color:#88846F;"># 返回一个新集合，包含所有参与运算的集合中的元素</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">a </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">b </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">6</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">c </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> a.union(b)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(c)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">6</span><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-集合的差集" tabindex="-1"><a class="header-anchor" href="#_4-集合的差集"><span>4. 集合的差集</span></a></h2><p>差集（Difference）：差集操作返回存在于第一个集合中，但不存在于第二个集合中的元素，用 <code>-</code> 运算符实现差集运算。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">set1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">8</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">set2 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">9</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(set1</span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;">set2)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">basket1</span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&#39;生花生&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;盐焗花生&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;蜂蜜花生&#39;</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">basket2 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&#39;盐焗花生&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;香辣花生&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;烤花生&#39;</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">unique_to_basket1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> basket1 </span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;"> basket2</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(unique_to_basket1)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span><span style="color:#AE81FF;">8</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span><span style="color:#E6DB74;">&#39;生花生&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;蜂蜜花生&#39;</span><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>差集的函数</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#88846F;"># 差集 .difference() 或运算符 -</span></span>
<span class="line"><span style="color:#88846F;"># 返回集合与其他集合的差集，即只在该集合中存在，不在其他集合中的元素。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">a </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">b </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">c </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> a.difference(b)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(c)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-对称差集" tabindex="-1"><a class="header-anchor" href="#_5-对称差集"><span>5. 对称差集</span></a></h2><p>对称差集（Symmetric Difference)：对称差集返回那些只存在于其中一个集合的元素（即不同时出现在两个集合中的元素）。使用 <code>^</code> 运算符来求对称差集。</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">set1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">8</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">set2 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">9</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(set1</span><span style="color:#F92672;">^</span><span style="color:#F8F8F2;">set2)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 偶像A的粉丝团</span></span>
<span class="line"><span style="color:#F8F8F2;">fans_A </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&#39;张三&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;李四&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;王五&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;赵六&#39;</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 偶像B的粉丝团</span></span>
<span class="line"><span style="color:#F8F8F2;">fans_B </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&#39;王五&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;赵六&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;孙七&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;周八&#39;</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 得到只在一个粉丝团中出现的忠诚粉丝，排除墙头草</span></span>
<span class="line"><span style="color:#F8F8F2;">loyal_fans </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> fans_A </span><span style="color:#F92672;">^</span><span style="color:#F8F8F2;"> fans_B</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(loyal_fans)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">8</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">9</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span><span style="color:#E6DB74;">&#39;张三&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;周八&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;孙七&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;李四&#39;</span><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>对称差集的函数</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#88846F;"># 对称差集 .symmetric_difference() 或运算符 ^</span></span>
<span class="line"><span style="color:#88846F;"># 返回两个集合的对称差集，即那些只出现在其中一个集合的元素</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">a </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">b </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">c </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> a.symmetric_difference(b)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(c)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-对称差集的其他实现方法" tabindex="-1"><a class="header-anchor" href="#_6-对称差集的其他实现方法"><span>6. 对称差集的其他实现方法</span></a></h2><p>对称差集是两个集合的并集除去两个集合的交集。</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">set1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">8</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">set2 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">9</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">((set1 </span><span style="color:#F92672;">|</span><span style="color:#F8F8F2;"> set2) </span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;"> (set1 </span><span style="color:#F92672;">&amp;</span><span style="color:#F8F8F2;"> set2))</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 偶像A的粉丝团</span></span>
<span class="line"><span style="color:#F8F8F2;">fans_A </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&#39;张三&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;李四&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;王五&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;赵六&#39;</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 偶像B的粉丝团</span></span>
<span class="line"><span style="color:#F8F8F2;">fans_B </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&#39;王五&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;赵六&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;孙七&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;周八&#39;</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 得到只在一个粉丝团中出现的忠诚粉丝，排除墙头草</span></span>
<span class="line"><span style="color:#F8F8F2;">loyal_fans </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (fans_A </span><span style="color:#F92672;">|</span><span style="color:#F8F8F2;"> fans_B) </span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;"> (fans_A </span><span style="color:#F92672;">&amp;</span><span style="color:#F8F8F2;"> fans_B)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(loyal_fans)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">8</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">9</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span><span style="color:#E6DB74;">&#39;张三&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;周八&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;孙七&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;李四&#39;</span><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h2 id="_7-如何创建空集" tabindex="-1"><a class="header-anchor" href="#_7-如何创建空集"><span>7. 如何创建空集</span></a></h2><p>python 中用 <code>set()</code> 来表示空集</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#88846F;">#如何创建空集</span></span>
<span class="line"><span style="color:#F8F8F2;">set1 </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> set</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(set1, </span><span style="color:#66D9EF;font-style:italic;">type</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">set</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">set</span><span style="color:#F8F8F2;">() </span><span style="color:#F92672;">&lt;</span><span style="color:#66D9EF;font-style:italic;">class</span><span style="color:#E6DB74;"> &#39;set&#39;</span><span style="color:#F92672;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>直接用花括号创建，类型会默认为字典，例子如下：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">e </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {}</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(e, </span><span style="color:#66D9EF;font-style:italic;">type</span><span style="color:#F8F8F2;">(e))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">{} </span><span style="color:#F92672;">&lt;</span><span style="color:#66D9EF;font-style:italic;">class</span><span style="color:#E6DB74;"> &#39;dict&#39;</span><span style="color:#F92672;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_8-add-添加元素" tabindex="-1"><a class="header-anchor" href="#_8-add-添加元素"><span>8. <code>.add()</code> 添加元素</span></a></h2><p>集合是可变的数据结构，可以通过 <code>.add()</code> 的方法在集合中添加元素。若添加的元素已经存在，则集合不变。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">set1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">8</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">set1.add(</span><span style="color:#AE81FF;">10</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(set1)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">8</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">10</span><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_9-update-批量添加" tabindex="-1"><a class="header-anchor" href="#_9-update-批量添加"><span>9. <code>.update()</code> 批量添加</span></a></h2><p><code>.update()</code> 可以将其他可迭代对象（如：列表、集合、元组等）中所有的元素添加到原集合中。</p><p>特点：</p><ul><li>自动去重：如果目标集合中已经出现某个元素，则不会重复添加。</li><li>操作原地修改：指修改后的结果直接保存在原集合中，而不返回新的集合。</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">set1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">set1.update([</span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">6</span><span style="color:#F8F8F2;">])</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(set1)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">6</span><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_10-remove-移除元素" tabindex="-1"><a class="header-anchor" href="#_10-remove-移除元素"><span>10. <code>.remove()</code> 移除元素</span></a></h2><p><code>.remove()</code> 可以从集合中删除指定元素。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">set1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">set1.remove(</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(set1)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>若该元素不存在，则会抛出 <code>KeyError</code> 异常，因此可以在使用前判断元素是否存在，或者使用 <code>discard()</code> 方法避免异常。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">set1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">set1.remove(</span><span style="color:#AE81FF;">10</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(set1)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">Traceback (most recent call last):</span></span>
<span class="line"><span style="color:#F8F8F2;">  File </span><span style="color:#E6DB74;">&quot;D:\\Coder</span><span style="color:#AE81FF;">\\t</span><span style="color:#E6DB74;">est 1</span><span style="color:#AE81FF;">\\t</span><span style="color:#E6DB74;">est 1.1.py&quot;</span><span style="color:#F8F8F2;">, line </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#F92672;">in</span><span style="color:#F92672;"> &lt;</span><span style="color:#F8F8F2;">module</span><span style="color:#F92672;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">    set1.remove(</span><span style="color:#AE81FF;">10</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">KeyError</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">10</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_11-discard-移除元素" tabindex="-1"><a class="header-anchor" href="#_11-discard-移除元素"><span>11. <code>.discard()</code> 移除元素</span></a></h2><p><code>.discard()</code> 用来移除集合中的指定元素，若元素存在则删除，<strong>若元素不存在则不会报错，也不会对原集合产生任何影响</strong> 。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">set1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">set1.discard(</span><span style="color:#AE81FF;">10</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(set1)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_12-pop-随机删除元素" tabindex="-1"><a class="header-anchor" href="#_12-pop-随机删除元素"><span>12. <code>.pop()</code> 随机删除元素</span></a></h2><p><code>.pop()</code> 只能随机删除集合中的一个元素，如果集合为空，则会抛出 <code>KeyError</code> 。</p><p>但这种方法不推荐，因为集合无序，我们无法确定删除的是哪一个数据。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">set1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">item </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> set1.pop()</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(item)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(set1)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#AE81FF;">1</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用场景举例：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#88846F;"># 场景一：随机提取并移除集合中的元素</span></span>
<span class="line"><span style="color:#88846F;"># 当想从集合中随机抽取元素进行后续处理，并要保证该元素不被重复使用，就可以用 .pop()。</span></span>
<span class="line"><span style="color:#F8F8F2;">tasks </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&#39;taskA&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;taskB&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;taskC&#39;</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">while</span><span style="color:#F8F8F2;"> tasks:</span></span>
<span class="line"><span style="color:#F8F8F2;">    task </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> tasks.pop()</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;正在处理：</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">task</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">正在处理：taskC</span></span>
<span class="line"><span style="color:#F8F8F2;">正在处理：taskA</span></span>
<span class="line"><span style="color:#F8F8F2;">正在处理：taskB</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#88846F;"># 场景二：逐一处理并清除集合内元素</span></span>
<span class="line"><span style="color:#88846F;"># 有时需要逐个处理并从集合中删除元素，并不关心具体的处理顺序，直到集合为空时</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">tasks </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&#39;吃饭&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;睡觉&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;打代码&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;看电影&#39;</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">while</span><span style="color:#F8F8F2;"> tasks:</span></span>
<span class="line"><span style="color:#F8F8F2;">    task </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> tasks.pop()</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;正在处理任务：</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">task</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;所有任务处理完毕：</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">tasks</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">正在处理任务：看电影</span></span>
<span class="line"><span style="color:#F8F8F2;">正在处理任务：打代码</span></span>
<span class="line"><span style="color:#F8F8F2;">正在处理任务：吃饭</span></span>
<span class="line"><span style="color:#F8F8F2;">正在处理任务：睡觉</span></span>
<span class="line"><span style="color:#F8F8F2;">所有任务处理完毕：</span><span style="color:#66D9EF;font-style:italic;">set</span><span style="color:#F8F8F2;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h2 id="_13-clear-清空集合" tabindex="-1"><a class="header-anchor" href="#_13-clear-清空集合"><span>13. <code>.clear()</code> 清空集合</span></a></h2><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">tasks </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&#39;吃饭&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;睡觉&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;打代码&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;看电影&#39;</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">tasks.clear()</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(tasks)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">set</span><span style="color:#F8F8F2;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>也可以参考前文创建一个空的集合：<a href="#_7-%E5%A6%82%E4%BD%95%E5%88%9B%E5%BB%BA%E7%A9%BA%E9%9B%86">创建空集</a></p><h2 id="_14-关系判断" tabindex="-1"><a class="header-anchor" href="#_14-关系判断"><span>14. 关系判断</span></a></h2><h3 id="_14-1-issubset-判断子集" tabindex="-1"><a class="header-anchor" href="#_14-1-issubset-判断子集"><span>14.1 <code>.issubset()</code> 判断子集</span></a></h3><p>判断当前集合是否为其他集合的子集，即集合中所有元素是否都包含在另一个集合中。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">a </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">b </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">result </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> a.issubset(b)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(result)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#AE81FF;">True</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_14-2-issuperset-判断超集" tabindex="-1"><a class="header-anchor" href="#_14-2-issuperset-判断超集"><span>14.2 <code>.issuperset()</code> 判断超集</span></a></h3><p>判断当前集合是否为其他集合的超集，即是否包含另一个集合的所有元素。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">a </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">b </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">result </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> a.issuperset(b)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(result)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#AE81FF;">True</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_14-3-isdisjoint-判断交集" tabindex="-1"><a class="header-anchor" href="#_14-3-isdisjoint-判断交集"><span>14.3 <code>.isdisjoint()</code> 判断交集</span></a></h3><p>判断两个集合是否没有交集（即交集为空），没有交集则为 <code>True</code> 。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">a </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">b </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">result </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> a.isdisjoint(b)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(result)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#AE81FF;">True</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_15-集合运算函数" tabindex="-1"><a class="header-anchor" href="#_15-集合运算函数"><span>15. 集合运算函数</span></a></h2><figure><img src="`+e+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+o+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="_16-小试牛刀" tabindex="-1"><a class="header-anchor" href="#_16-小试牛刀"><span>16. 小试牛刀</span></a></h2><figure><img src="'+F+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>Answer:</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#88846F;"># 获取输入</span></span>
<span class="line"><span style="color:#F8F8F2;">s_input </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;请输入一个英文句子： &#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 将标点符号删除</span></span>
<span class="line"><span style="color:#F8F8F2;">s_input_replace </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> s_input.replace(</span><span style="color:#E6DB74;">&#39;,&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;&#39;</span><span style="color:#F8F8F2;">).replace(</span><span style="color:#E6DB74;">&#39;.&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;&#39;</span><span style="color:#F8F8F2;">).replace(</span><span style="color:#E6DB74;">&#39;?&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;&#39;</span><span style="color:#F8F8F2;">).replace(</span><span style="color:#E6DB74;">&#39;!&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 把大写都转化成小写</span></span>
<span class="line"><span style="color:#F8F8F2;">s_input_lowercase </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> s_input_replace.lower()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># split</span></span>
<span class="line"><span style="color:#F8F8F2;">s_split </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> s_input_lowercase.split(</span><span style="color:#E6DB74;">&#39; &#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 转换成集合剔除重复</span></span>
<span class="line"><span style="color:#F8F8F2;">s_set </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> set</span><span style="color:#F8F8F2;">(s_split)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(s_set)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">len</span><span style="color:#F8F8F2;">(s_set))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">请输入一个英文句子： The quick brown fox jumps over the lazy dog. . . , !</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span><span style="color:#E6DB74;">&#39;lazy&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;brown&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;jumps&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;over&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;quick&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;fox&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;dog&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;the&#39;</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#AE81FF;">9</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p><strong>注意：遇到连续的分割字符时，若指定分割字符，则会返回空字符串，因此需要注意，因为默认是空格分割，因此不需要空字符串时直接默认即可。</strong></p><p>修改：(line13)</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#88846F;"># 获取输入</span></span>
<span class="line"><span style="color:#F8F8F2;">s_input </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;请输入一个英文句子： &#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 将标点符号删除</span></span>
<span class="line"><span style="color:#F8F8F2;">s_input_replace </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> s_input.replace(</span><span style="color:#E6DB74;">&#39;,&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;&#39;</span><span style="color:#F8F8F2;">).replace(</span><span style="color:#E6DB74;">&#39;.&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;&#39;</span><span style="color:#F8F8F2;">).replace(</span><span style="color:#E6DB74;">&#39;?&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;&#39;</span><span style="color:#F8F8F2;">).replace(</span><span style="color:#E6DB74;">&#39;!&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 把大写都转化成小写</span></span>
<span class="line"><span style="color:#F8F8F2;">s_input_lowercase </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> s_input_replace.lower()</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># split</span></span>
<span class="line"><span style="color:#F8F8F2;">s_split </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> s_input_lowercase.split()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 转换成集合剔除重复</span></span>
<span class="line"><span style="color:#F8F8F2;">s_set </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> set</span><span style="color:#F8F8F2;">(s_split)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(s_set)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">len</span><span style="color:#F8F8F2;">(s_set))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">请输入一个英文句子： The quick brown fox jumps over the lazy dog. . . , !</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span><span style="color:#E6DB74;">&#39;over&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;brown&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;fox&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;the&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;dog&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;quick&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;jumps&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;lazy&#39;</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#AE81FF;">8</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>课后作业：</p><figure><img src="`+c+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>Answer:</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#88846F;"># 获取输入</span></span>
<span class="line"><span style="color:#F8F8F2;">set1_input </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;Enter set 1: &#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">set2_input </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;Enter set 2: &#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 序列有数字/字符串/其他情况，需要考虑用户是否按照 1, 2, 3 这种格式输入，而不会出现 1,2, 3，因此第一步直接去掉空格</span></span>
<span class="line"><span style="color:#F8F8F2;">set1 </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> set</span><span style="color:#F8F8F2;">(set1_input.replace(</span><span style="color:#E6DB74;">&#39; &#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;&#39;</span><span style="color:#F8F8F2;">).split(</span><span style="color:#E6DB74;">&#39;,&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F8F8F2;">set2 </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> set</span><span style="color:#F8F8F2;">(set2_input.replace(</span><span style="color:#E6DB74;">&#39; &#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;&#39;</span><span style="color:#F8F8F2;">).split(</span><span style="color:#E6DB74;">&#39;,&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 只存在于set1，不存在于 set2，用差集</span></span>
<span class="line"><span style="color:#F8F8F2;">unique_to_set1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> set1.difference(set2)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(unique_to_set1)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">Enter </span><span style="color:#66D9EF;font-style:italic;">set</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">,</span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span></span>
<span class="line"><span style="color:#F8F8F2;">Enter </span><span style="color:#66D9EF;font-style:italic;">set</span><span style="color:#AE81FF;"> 2</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">6</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">7</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span><span style="color:#E6DB74;">&#39;1&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;3&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;2&#39;</span><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>优化：</p><p>增加一步代码，将字符串类型修改为整型。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">set1 </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> set</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">map</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">, set1))</span></span>
<span class="line"><span style="color:#F8F8F2;">set2 </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> set</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">map</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">, set2))</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+r+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">numbers </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">9</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">7</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">sorted_numbers </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> sorted</span><span style="color:#F8F8F2;">(numbers)     </span><span style="color:#88846F;"># 这一步返回的是列表</span></span>
<span class="line"><span style="color:#F8F8F2;">num_max</span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> sorted_numbers[</span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">num_min</span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> sorted_numbers[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">((num_min, num_max))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">9</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其他方法：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">numbers </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">9</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">7</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 使用内置的 min 和 max 函数找到集合中的最大值和最小值</span></span>
<span class="line"><span style="color:#F8F8F2;">result_tup </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;">min</span><span style="color:#F8F8F2;">(numbers), </span><span style="color:#66D9EF;">max</span><span style="color:#F8F8F2;">(numbers))</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(result_tup)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">9</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,94)])])}const u=n(t,[["render",i]]),m=JSON.parse('{"path":"/programming/python/08-set.html","title":"08. 集合","lang":"zh-CN","frontmatter":{"title":"08. 集合","icon":"boke","date":"2025-05-22T15:35:36.000Z","author":"Ran","isOriginal":true,"sticky":false,"star":false,"article":true,"timeline":true,"image":false,"navbar":true,"sidebarIcon":true,"comment":true,"lastUpdated":true,"editLink":true,"backToTop":true,"toc":true,"description":"1. 如何创建集合 集合的创建主要有两种方式，可以看具体情况选择使用。 1.1 直接使用花括号 {} 创建集合 当我们知道集合中的元素时，可以直接使用花括号 {} 来定义集合。需要注意的是，集合中的元素是无序的，每次打印时显示的顺序可能不同。 1.2 使用 set() 函数创建集合 如果我们有一个列表或者其他可迭代对象，想要将其转化为集合，可以使用 s...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"08. 集合\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-05-22T15:35:36.000Z\\",\\"dateModified\\":\\"2025-05-29T08:02:46.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Ran\\"}]}"],["meta",{"property":"og:url","content":"https://pythiaroot.com/programming/python/08-set.html"}],["meta",{"property":"og:site_name","content":"Pythia’s Root"}],["meta",{"property":"og:title","content":"08. 集合"}],["meta",{"property":"og:description","content":"1. 如何创建集合 集合的创建主要有两种方式，可以看具体情况选择使用。 1.1 直接使用花括号 {} 创建集合 当我们知道集合中的元素时，可以直接使用花括号 {} 来定义集合。需要注意的是，集合中的元素是无序的，每次打印时显示的顺序可能不同。 1.2 使用 set() 函数创建集合 如果我们有一个列表或者其他可迭代对象，想要将其转化为集合，可以使用 s..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-05-29T08:02:46.000Z"}],["meta",{"property":"article:author","content":"Ran"}],["meta",{"property":"article:published_time","content":"2025-05-22T15:35:36.000Z"}],["meta",{"property":"article:modified_time","content":"2025-05-29T08:02:46.000Z"}]]},"git":{"createdTime":1747973498000,"updatedTime":1748505766000,"contributors":[{"name":"AmaraMeng","username":"AmaraMeng","email":"ranmeng9558@gmail.com","commits":4,"url":"https://github.com/AmaraMeng"}],"changelog":[{"hash":"9d8363f051891fb384cd4aa02451f34375ba01a7","time":1748505766000,"email":"ranmeng9558@gmail.com","author":"AmaraMeng","message":"Add boolean expressions and if statements documentation"},{"hash":"f714ef050099c6e5086e6a11057efe776de15940","time":1748334856000,"email":"ranmeng9558@gmail.com","author":"AmaraMeng","message":"Add new image asset for blog article: image-20250527160921957.png"},{"hash":"c753b2ea5aa5ba5bd787062ea2ae256c6e68447c","time":1748331835000,"email":"ranmeng9558@gmail.com","author":"AmaraMeng","message":"Refactor code structure for improved readability and maintainability"},{"hash":"8415c75575ed0e6e5bcafaaac25cfce7ebd558d2","time":1747973498000,"email":"ranmeng9558@gmail.com","author":"AmaraMeng","message":"Add documentation for Python sets including creation, intersection, union, and difference operations"}]},"readingTime":{"minutes":8.15,"words":2446},"filePathRelative":"programming/python/08-set.md","excerpt":"<h2>1. 如何创建集合</h2>\\n<p>集合的创建主要有两种方式，可以看具体情况选择使用。</p>\\n<h3>1.1 直接使用花括号 <code>{}</code> 创建集合</h3>\\n<p>当我们知道集合中的元素时，可以直接使用花括号 <code>{}</code> 来定义集合。需要注意的是，集合中的元素是无序的，每次打印时显示的顺序可能不同。</p>\\n<div class=\\"language-python line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"python\\" style=\\"background-color:#272822;color:#F8F8F2\\"><pre class=\\"shiki monokai vp-code\\"><code class=\\"language-python\\"><span class=\\"line\\"><span style=\\"color:#66D9EF;font-style:italic\\">set</span><span style=\\"color:#F92672\\"> =</span><span style=\\"color:#F8F8F2\\"> {</span><span style=\\"color:#AE81FF\\">1</span><span style=\\"color:#F8F8F2\\">, </span><span style=\\"color:#AE81FF\\">2</span><span style=\\"color:#F8F8F2\\">, </span><span style=\\"color:#AE81FF\\">4</span><span style=\\"color:#F8F8F2\\">, </span><span style=\\"color:#AE81FF\\">5</span><span style=\\"color:#F8F8F2\\">, </span><span style=\\"color:#AE81FF\\">8</span><span style=\\"color:#F8F8F2\\">}</span></span>\\n<span class=\\"line\\"><span style=\\"color:#66D9EF\\">print</span><span style=\\"color:#F8F8F2\\">(</span><span style=\\"color:#66D9EF;font-style:italic\\">set</span><span style=\\"color:#F8F8F2\\">)</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#88846F\\">#-------output-------</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">{</span><span style=\\"color:#AE81FF\\">1</span><span style=\\"color:#F8F8F2\\">, </span><span style=\\"color:#AE81FF\\">2</span><span style=\\"color:#F8F8F2\\">, </span><span style=\\"color:#AE81FF\\">4</span><span style=\\"color:#F8F8F2\\">, </span><span style=\\"color:#AE81FF\\">5</span><span style=\\"color:#F8F8F2\\">, </span><span style=\\"color:#AE81FF\\">8</span><span style=\\"color:#F8F8F2\\">}</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{u as comp,m as data};
