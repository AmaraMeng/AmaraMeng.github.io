import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{e as r,f as s,i as p,h as c,j as a,g as n,r as F,o as y}from"./app-Dw5Xpgnb.js";const d="/assets/image-20250320145839024-CqrjdigF.png",u="/assets/image-20250325101431960-B5_yt-dL.png",m="/assets/image-20250325130809631-D8B9GYkS.png",v="/assets/image-20250325130953461-CohQttso.png",g="/assets/image-20250325131853998-XhXtIIrb.png",h="/assets/image-20250325131818819-DA32KGhb.png",b="/assets/image-20250325132822007-BRF4TCVq.png",E="/assets/image-20250325133329938-c6Jbcn7p.png",D={};function f(k,l){const t=F("CodeTabs");return y(),r("div",null,[l[9]||(l[9]=s("figure",null,[s("img",{src:d,alt:"数据类型",tabindex:"0",loading:"lazy"}),s("figcaption",null,"数据类型")],-1)),l[10]||(l[10]=s("h2",{id:"_1-数字型-int-float",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_1-数字型-int-float"},[s("span",null,"1. 数字型 [int, float]")])],-1)),p(t,{id:"6",data:[{id:"int"},{id:"float"}]},{title0:a(({value:o,isActive:e})=>l[0]||(l[0]=[n("int")])),title1:a(({value:o,isActive:e})=>l[1]||(l[1]=[n("float")])),tab0:a(({value:o,isActive:e})=>l[2]||(l[2]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python","data-title":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"int_num "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 1")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"t "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," type"),s("span",{style:{color:"#F8F8F2"}},"(int_num)")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(int_num)")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"int num type is:>>>"'),s("span",{style:{color:"#F8F8F2"}},", t)")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"直接检测数据类型，并输出：>>>"'),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"type"),s("span",{style:{color:"#F8F8F2"}},"(int_num))")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"1")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}}," num "),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"type"),s("span",{style:{color:"#F92672"}}," is"),s("span",{style:{color:"#F8F8F2"}},":"),s("span",{style:{color:"#F92672"}},">>>"),s("span",{style:{color:"#F92672"}}," <"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"class"),s("span",{style:{color:"#E6DB74"}}," 'int'"),s("span",{style:{color:"#F92672"}},">")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"直接检测数据类型，并输出："),s("span",{style:{color:"#F92672"}},">>>"),s("span",{style:{color:"#F92672"}}," <"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"class"),s("span",{style:{color:"#E6DB74"}}," 'int'"),s("span",{style:{color:"#F92672"}},">")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:a(({value:o,isActive:e})=>l[3]||(l[3]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python","data-title":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"float_num "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 1.5")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"t "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," type"),s("span",{style:{color:"#F8F8F2"}},"(float_num)")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(float_num)")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"float num type is:>>>"'),s("span",{style:{color:"#F8F8F2"}},", t)")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"直接检测数据类型，并输出：>>>"'),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"type"),s("span",{style:{color:"#F8F8F2"}},"(float_num))")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"1.5")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"float"),s("span",{style:{color:"#F8F8F2"}}," num "),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"type"),s("span",{style:{color:"#F92672"}}," is"),s("span",{style:{color:"#F8F8F2"}},":"),s("span",{style:{color:"#F92672"}},">>>"),s("span",{style:{color:"#F92672"}}," <"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"class"),s("span",{style:{color:"#E6DB74"}}," 'float'"),s("span",{style:{color:"#F92672"}},">")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"直接检测数据类型，并输出："),s("span",{style:{color:"#F92672"}},">>>"),s("span",{style:{color:"#F92672"}}," <"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"class"),s("span",{style:{color:"#E6DB74"}}," 'float'"),s("span",{style:{color:"#F92672"}},">")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1}),l[11]||(l[11]=c(`<h2 id="_2-字符串" tabindex="-1"><a class="header-anchor" href="#_2-字符串"><span>2. 字符串</span></a></h2><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;hello world&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">t </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> type</span><span style="color:#F8F8F2;">(string)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(string)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;string type is:&gt;&gt;&gt;&quot;</span><span style="color:#F8F8F2;">, t)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;直接检测数据类型，并输出：&gt;&gt;&gt;&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">type</span><span style="color:#F8F8F2;">(string))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">hello world</span></span>
<span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#66D9EF;font-style:italic;">type</span><span style="color:#F92672;"> is</span><span style="color:#F8F8F2;">:</span><span style="color:#F92672;">&gt;&gt;&gt;</span><span style="color:#F92672;"> &lt;</span><span style="color:#66D9EF;font-style:italic;">class</span><span style="color:#E6DB74;"> &#39;str&#39;</span><span style="color:#F92672;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">直接检测数据类型，并输出：</span><span style="color:#F92672;">&gt;&gt;&gt;</span><span style="color:#F92672;"> &lt;</span><span style="color:#66D9EF;font-style:italic;">class</span><span style="color:#E6DB74;"> &#39;str&#39;</span><span style="color:#F92672;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>字符串的性质</strong></p><ol><li><p>有序性</p><ul><li>从左到右的索引方法，下标是从 0 开始；</li><li>从右到左的索引方法，下标是从 -1 开始；</li><li>引号里面出现的每个字符都算一个下标，空格也算。</li></ul></li><li><p>不可变性</p><p>不同的编程语言处理字符串的方式可能有所不同，但在大多数语言中，字符串都是不可变的，这意味着一旦创建，字符串的内容就不能改变。</p><div class="hint-container important"><p class="hint-container-title">重要</p><p>我们说的不可变，是指在代码运行过程中（如中间有 input ），不能对字符串修改、添加、删除之类的操作。</p></div></li><li><p>任意字符</p><ul><li>键盘上可以输入的字符，都可以是字符串的元素；</li><li>字符放到字符串中，都将成为字符串类型，即：里面的每一个元素都可以称为：子字符（子字符串）。</li></ul></li></ol><h2 id="_3-列表" tabindex="-1"><a class="header-anchor" href="#_3-列表"><span>3. 列表</span></a></h2><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">lst </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#E6DB74;">&quot;Hello World&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">1.1</span><span style="color:#F8F8F2;">, (</span><span style="color:#E6DB74;">&quot;look&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;book&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">11</span><span style="color:#F8F8F2;">), [</span><span style="color:#AE81FF;">12</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;汉堡包&quot;</span><span style="color:#F8F8F2;">], </span><span style="color:#AE81FF;">True</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">False</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">t </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> type</span><span style="color:#F8F8F2;">(lst)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(lst)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;lst type is:&gt;&gt;&gt;&quot;</span><span style="color:#F8F8F2;">, t)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;直接检测数据类型，并输出：&gt;&gt;&gt;&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">type</span><span style="color:#F8F8F2;">(lst))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#E6DB74;">&#39;Hello World&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">1.1</span><span style="color:#F8F8F2;">, (</span><span style="color:#E6DB74;">&#39;look&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;book&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">11</span><span style="color:#F8F8F2;">), [</span><span style="color:#AE81FF;">12</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;汉堡包&#39;</span><span style="color:#F8F8F2;">], </span><span style="color:#AE81FF;">True</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">False</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">lst </span><span style="color:#66D9EF;font-style:italic;">type</span><span style="color:#F92672;"> is</span><span style="color:#F8F8F2;">:</span><span style="color:#F92672;">&gt;&gt;&gt;</span><span style="color:#F92672;"> &lt;</span><span style="color:#66D9EF;font-style:italic;">class</span><span style="color:#E6DB74;"> &#39;list&#39;</span><span style="color:#F92672;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">直接检测数据类型，并输出：</span><span style="color:#F92672;">&gt;&gt;&gt;</span><span style="color:#F92672;"> &lt;</span><span style="color:#66D9EF;font-style:italic;">class</span><span style="color:#E6DB74;"> &#39;list&#39;</span><span style="color:#F92672;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>列表的性质</strong></p><ol><li><p>有序性</p><ul><li><p>从左到右的索引方法，下标是从 0 开始；</p></li><li><p>从右到左的索引方法，下标是从 -1 开始；</p></li><li><p>列表里的每个元素算一个；</p><p>比如：lst = [“aiyuechuang”, 12];</p><p>上面 lst 有两个元素，下标分别是：</p><p>​ <code>aiyuechuang</code> 是下标 0 （从左到右）， 也是下标 -2 （从右到左）；</p><p>​ <code>12</code> 是下标 1 （从左到右）， 也是下标 -1 （从右到左）；</p></li></ul></li><li><p>可变性：在程序运行过程中（如中间有 input ），列表可以修改、添加、删除；</p></li><li><p>任意数据类型：<strong>指的是 Python 所拥有的数据类型</strong>。</p></li></ol><h2 id="_4-元组" tabindex="-1"><a class="header-anchor" href="#_4-元组"><span>4. 元组</span></a></h2><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">tup </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;aivc&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">1.1</span><span style="color:#F8F8F2;">, [</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">])</span></span>
<span class="line"><span style="color:#F8F8F2;">t </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> type</span><span style="color:#F8F8F2;">(tup)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(tup)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;tup type is: &gt;&gt;&gt;&quot;</span><span style="color:#F8F8F2;">, t)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;直接检测数据类型，并输出：&gt;&gt;&gt;&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">type</span><span style="color:#F8F8F2;">(tup))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;aivc&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">1.1</span><span style="color:#F8F8F2;">, [</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">])</span></span>
<span class="line"><span style="color:#F8F8F2;">tup </span><span style="color:#66D9EF;font-style:italic;">type</span><span style="color:#F92672;"> is</span><span style="color:#F8F8F2;">: </span><span style="color:#F92672;">&gt;&gt;&gt;</span><span style="color:#F92672;"> &lt;</span><span style="color:#66D9EF;font-style:italic;">class</span><span style="color:#E6DB74;"> &#39;tuple&#39;</span><span style="color:#F92672;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">直接检测数据类型，并输出：</span><span style="color:#F92672;">&gt;&gt;&gt;</span><span style="color:#F92672;"> &lt;</span><span style="color:#66D9EF;font-style:italic;">class</span><span style="color:#E6DB74;"> &#39;tuple&#39;</span><span style="color:#F92672;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>元组的性质</strong></p><ol><li><p>有序性</p><ul><li><p>从左到右的索引方法，下标是从 0 开始；</p></li><li><p>从右到左的索引方法，下标是从 -1 开始；</p></li><li><p>元组里的每个元素算一个；</p><p>比如：<code>tup = (&quot;aiyuechuang&quot;, 12)</code>;</p><p>上面 <code>tup</code>有两个元素，下标分别是：</p><p>​ <code>aiyuechuang</code> 是下标 0 （从左到右）， 也是下标 -2 （从右到左）；</p><p>​ <code>12</code> 是下标 1 （从左到右）， 也是下标 -1 （从右到左）；</p></li></ul></li><li><p>不可变性</p><p>元组被创建出来之后，就不能被改变；</p><div class="hint-container important"><p class="hint-container-title">重要</p><p>我们说的不可变，是指在代码运行过程中（如中间有 input ），不能对元组修改、添加、删除之类的操作。</p></div></li><li><p>任意数据类型：<strong>指的是 Python 所拥有的数据类型</strong>。</p></li></ol><h2 id="_5-列表-or-元组" tabindex="-1"><a class="header-anchor" href="#_5-列表-or-元组"><span>5. 列表 or 元组</span></a></h2><div class="hint-container info"><p class="hint-container-title">为什么有列表后还需要元组</p></div><ol><li>如果储存的数据或者数量是<strong>可变</strong>的，比如社交平台上的一个日志功能，是统计一个用户在一周之内看了哪些用户的帖子，那么用<strong>列表</strong>更合适（需要一个仓库管理员）；</li><li>如果储存的数据或者数量<strong>不变</strong>，比如一个系统/软件，用来返回一个地点的经纬度，然后直接传给用户看，那么选择<strong>元组</strong>更合适（不需要仓库管理员）。</li></ol><h2 id="_6-练习" tabindex="-1"><a class="header-anchor" href="#_6-练习"><span>6. 练习</span></a></h2><figure><img src="`+u+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol><li><p>输出内容，字符，变量均可</p></li><li><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;"> mint </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 123</span><span style="color:#88846F;">         # 数字、下划线、字母组合，区分大小写，不能数字开头，不能空格</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;"> mint1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> mint2 </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 123</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;"> mint1, mint2 </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 123</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;一二三&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;"> print</span><span style="color:#F8F8F2;">(mint1, mint2)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#88846F;"> # 井号加注释，Ctrl+/ 整行或选中部分注释</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;"> print</span><span style="color:#F8F8F2;">(mint1, mint2, </span><span style="color:#FD971F;font-style:italic;">sep</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;">&quot; is &quot;</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>end 用来修改输出结尾，默认是 <code>\\n</code> 换行。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(mint1, mint2, </span><span style="color:#FD971F;font-style:italic;">end</span><span style="color:#F92672;"> =</span><span style="color:#E6DB74;"> &quot; done here</span><span style="color:#AE81FF;">\\n</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>覆盖一个变量的值，就重新赋值呗，或者用其他变量赋值</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">mint </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 123</span><span style="color:#F8F8F2;"> </span></span>
<span class="line"><span style="color:#F8F8F2;">mint2 </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;一二三&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">mint </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 456</span></span>
<span class="line"><span style="color:#F8F8F2;">mint </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> mint2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>注释掉</p></li><li><p>默认间隔符是空格</p></li><li><p>变量可以储存数字、字符串、列表、元组</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">a </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 123</span></span>
<span class="line"><span style="color:#F8F8F2;">b </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;hello&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">c </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#AE81FF;">123</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;hello&quot;</span><span style="color:#F8F8F2;">, (</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;tuple&quot;</span><span style="color:#F8F8F2;">), [</span><span style="color:#AE81FF;">4.1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5.1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">6.12</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;list&quot;</span><span style="color:#F8F8F2;">]]</span></span>
<span class="line"><span style="color:#F8F8F2;">d </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#E6DB74;">&quot;world&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">6</span><span style="color:#F8F8F2;">, (</span><span style="color:#AE81FF;">1.1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2.2</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;unchangeable&quot;</span><span style="color:#F8F8F2;">), [</span><span style="color:#AE81FF;">8</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">10</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;try&quot;</span><span style="color:#F8F8F2;">])</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>适当加空格，清楚，变量命名中出现空格会报错，有些情况缺少空格也会报错，空格是有意义的。</p></li><li><p>变量名清楚，省去查找和再理解。</p></li></ol><figure><img src="`+m+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>1c 2b 3b</strong></p><figure><img src="'+v+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>4a 5a 6c 7c</strong></p><figure><img src="'+g+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>8c 9a 10b</strong></p><figure><img src="'+h+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol><li><code>print()</code></li><li>字符串变量</li><li><code>print</code></li><li>10</li><li>b</li><li><code>my_var1</code>、<code>m1y_var</code> 等</li><li><code>“The calue of my integer is&quot;, my_int</code></li><li><code>=</code> 赋予</li><li><code>“hello, Python!”</code></li><li><code>my_float, </code></li></ol><figure><img src="'+b+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>4.1</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">greeting </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;Hello, World!&quot;</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(greeting)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">Hello, World!</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>4.2</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">number </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 10</span></span>
<span class="line"><span style="color:#F8F8F2;">copy_number </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> number</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(number, copy_number)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#AE81FF;">10</span><span style="color:#AE81FF;"> 10</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>4.3</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">food </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;apple&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">food </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;banana&quot;</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(food)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">banana            </span><span style="color:#88846F;">#变量内容可以覆盖</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+E+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>4.4</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">a, b, c </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(a, b, c, </span><span style="color:#FD971F;font-style:italic;">sep</span><span style="color:#F92672;"> =</span><span style="color:#E6DB74;"> &quot;-&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">end</span><span style="color:#F92672;"> =</span><span style="color:#E6DB74;"> &quot;&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#AE81FF;">1</span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">2</span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">3</span></span>
<span class="line"><span style="color:#F8F8F2;">Process finished </span><span style="color:#F92672;">with</span><span style="color:#66D9EF;"> exit</span><span style="color:#F8F8F2;"> code </span><span style="color:#AE81FF;">0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>4.5</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">name, age, job, hobby </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;ran&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;29&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;student&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;jazz&quot;</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(name, age, job, hobby, </span><span style="color:#FD971F;font-style:italic;">sep</span><span style="color:#F92672;"> =</span><span style="color:#E6DB74;"> &quot;, &quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">ran, </span><span style="color:#AE81FF;">29</span><span style="color:#F8F8F2;">, student, jazz</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>4.6</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">x </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> y </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> z </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 10</span></span>
<span class="line"><span style="color:#F8F8F2;">x </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;请输入20：&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">y </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;请输入30：&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;x =&quot;</span><span style="color:#F8F8F2;">, x, </span><span style="color:#E6DB74;">&quot;</span><span style="color:#AE81FF;">\\n</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">,</span><span style="color:#E6DB74;">&quot;y =&quot;</span><span style="color:#F8F8F2;">, y, </span><span style="color:#E6DB74;">&quot;</span><span style="color:#AE81FF;">\\n</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;z =&quot;</span><span style="color:#F8F8F2;">, z)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">请输入20：</span><span style="color:#AE81FF;">20</span></span>
<span class="line"><span style="color:#F8F8F2;">请输入30：</span><span style="color:#AE81FF;">30</span></span>
<span class="line"><span style="color:#F8F8F2;">x </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 20</span><span style="color:#F8F8F2;"> </span></span>
<span class="line"><span style="color:#F8F8F2;"> y </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 30</span><span style="color:#F8F8F2;"> </span></span>
<span class="line"><span style="color:#F8F8F2;"> z </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 10</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 问题问题</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7-练习总结" tabindex="-1"><a class="header-anchor" href="#_7-练习总结"><span>7. 练习总结</span></a></h2>`,41)),s("ol",null,[s("li",null,[l[8]||(l[8]=s("p",null,[s("code",null,"print"),n(" 使用，将浮点型输出为字符串。")],-1)),p(t,{id:"386",data:[{id:"print输出多个变量"},{id:"将浮点型输出为字符串"}]},{title0:a(({value:o,isActive:e})=>l[4]||(l[4]=[n("print输出多个变量")])),title1:a(({value:o,isActive:e})=>l[5]||(l[5]=[n("将浮点型输出为字符串")])),tab0:a(({value:o,isActive:e})=>l[6]||(l[6]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python","data-title":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"my_float "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 5.67")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(my_float, "),s("span",{style:{color:"#E6DB74"}},'"is my float"'),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"5.67"),s("span",{style:{color:"#F92672"}}," is"),s("span",{style:{color:"#F8F8F2"}}," my "),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"float"),s("span",{style:{color:"#88846F"}},"    #此处为 print 输出多个变量，因此浮点型变量和字符串变量输出，中间自动用空格隔开")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:a(({value:o,isActive:e})=>l[7]||(l[7]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python","data-title":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"my_float "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 5.67")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"str"),s("span",{style:{color:"#F8F8F2"}},"(my_float) "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#E6DB74"}},' " is my floating number"'),s("span",{style:{color:"#F8F8F2"}},")    "),s("span",{style:{color:"#88846F"}},"# 加号+ 将两部分拼接，因此中间不会自动用空格隔开，需要手动补充")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"5.67"),s("span",{style:{color:"#F92672"}}," is"),s("span",{style:{color:"#F8F8F2"}}," my floating number     "),s("span",{style:{color:"#88846F"}},"#此处以字符串形式输出")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1})])])])}const B=i(D,[["render",f],["__file","data-type.html.vue"]]),x=JSON.parse(`{"path":"/programming/python/data-type.html","title":"初识数据类型","lang":"zh-CN","frontmatter":{"title":"初识数据类型","icon":"boke","date":"2025-03-20T14:46:33.000Z","author":"Ran","isOriginal":true,"sticky":false,"star":false,"article":true,"timeline":true,"image":false,"navbar":true,"sidebarIcon":true,"headerDepth":5,"comment":true,"lastUpdated":true,"editLink":false,"backToTop":true,"toc":true,"description":"数据类型数据类型 1. 数字型 [int, float] 2. 字符串 字符串的性质 有序性 从左到右的索引方法，下标是从 0 开始； 从右到左的索引方法，下标是从 -1 开始； 引号里面出现的每个字符都算一个下标，空格也算。 不可变性 不同的编程语言处理字符串的方式可能有所不同，但在大多数语言中，字符串都是不可变的，这意味着一旦创建，字符串的内容就不...","head":[["meta",{"property":"og:url","content":"https://pythiaroot.com/programming/python/data-type.html"}],["meta",{"property":"og:site_name","content":"Pythia’s Root"}],["meta",{"property":"og:title","content":"初识数据类型"}],["meta",{"property":"og:description","content":"数据类型数据类型 1. 数字型 [int, float] 2. 字符串 字符串的性质 有序性 从左到右的索引方法，下标是从 0 开始； 从右到左的索引方法，下标是从 -1 开始； 引号里面出现的每个字符都算一个下标，空格也算。 不可变性 不同的编程语言处理字符串的方式可能有所不同，但在大多数语言中，字符串都是不可变的，这意味着一旦创建，字符串的内容就不..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-25T06:32:21.000Z"}],["meta",{"property":"article:author","content":"Ran"}],["meta",{"property":"article:published_time","content":"2025-03-20T14:46:33.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-25T06:32:21.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"初识数据类型\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-03-20T14:46:33.000Z\\",\\"dateModified\\":\\"2025-03-25T06:32:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Ran\\"}]}"]]},"git":{"createdTime":1742453160000,"updatedTime":1742884341000,"contributors":[{"name":"AmaraMeng","username":"AmaraMeng","email":"ranmeng9558@gmail.com","commits":5,"url":"https://github.com/AmaraMeng"}]},"readingTime":{"minutes":5.54,"words":1661},"filePathRelative":"programming/python/data-type.md","localizedDate":"2025年3月20日","excerpt":"<figure><figcaption>数据类型</figcaption></figure>\\n<h2>1.  数字型 [int, float]</h2>\\n\\n<h2>2. 字符串</h2>\\n<div class=\\"language-python line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"python\\" data-title=\\"python\\" style=\\"background-color:#272822;color:#F8F8F2\\"><pre class=\\"shiki monokai vp-code\\"><code><span class=\\"line\\"><span style=\\"color:#F8F8F2\\">string </span><span style=\\"color:#F92672\\">=</span><span style=\\"color:#E6DB74\\"> \\"hello world\\"</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">t </span><span style=\\"color:#F92672\\">=</span><span style=\\"color:#66D9EF;font-style:italic\\"> type</span><span style=\\"color:#F8F8F2\\">(string)</span></span>\\n<span class=\\"line\\"><span style=\\"color:#66D9EF\\">print</span><span style=\\"color:#F8F8F2\\">(string)</span></span>\\n<span class=\\"line\\"><span style=\\"color:#66D9EF\\">print</span><span style=\\"color:#F8F8F2\\">(</span><span style=\\"color:#E6DB74\\">\\"string type is:&gt;&gt;&gt;\\"</span><span style=\\"color:#F8F8F2\\">, t)</span></span>\\n<span class=\\"line\\"><span style=\\"color:#66D9EF\\">print</span><span style=\\"color:#F8F8F2\\">(</span><span style=\\"color:#E6DB74\\">\\"直接检测数据类型，并输出：&gt;&gt;&gt;\\"</span><span style=\\"color:#F8F8F2\\">, </span><span style=\\"color:#66D9EF;font-style:italic\\">type</span><span style=\\"color:#F8F8F2\\">(string))</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#88846F\\">#-------output-------</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">hello world</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">string </span><span style=\\"color:#66D9EF;font-style:italic\\">type</span><span style=\\"color:#F92672\\"> is</span><span style=\\"color:#F8F8F2\\">:</span><span style=\\"color:#F92672\\">&gt;&gt;&gt;</span><span style=\\"color:#F92672\\"> &lt;</span><span style=\\"color:#66D9EF;font-style:italic\\">class</span><span style=\\"color:#E6DB74\\"> 'str'</span><span style=\\"color:#F92672\\">&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">直接检测数据类型，并输出：</span><span style=\\"color:#F92672\\">&gt;&gt;&gt;</span><span style=\\"color:#F92672\\"> &lt;</span><span style=\\"color:#66D9EF;font-style:italic\\">class</span><span style=\\"color:#E6DB74\\"> 'str'</span><span style=\\"color:#F92672\\">&gt;</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{B as comp,x as data};
