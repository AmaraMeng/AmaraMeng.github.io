import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as l,o as p}from"./app-DVGAFrs7.js";const e="/assets/image-20250513144913689-BCKqCcwr.png",o="/assets/image-20250513151631212-Ce0nUosN.png",F="/assets/image-20250513152700832-BP_0aR1i.png",t={};function c(r,s){return p(),a("div",null,s[0]||(s[0]=[l(`<h2 id="_1-创建元组" tabindex="-1"><a class="header-anchor" href="#_1-创建元组"><span>1. 创建元组</span></a></h2><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">tup </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#E6DB74;">&#39;毒药&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;感冒药&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;解药&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(tup, </span><span style="color:#66D9EF;font-style:italic;">type</span><span style="color:#F8F8F2;">(tup))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;毒药&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;感冒药&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;解药&#39;</span><span style="color:#F8F8F2;">) </span><span style="color:#F92672;">&lt;</span><span style="color:#66D9EF;font-style:italic;">class</span><span style="color:#E6DB74;"> &#39;tuple&#39;</span><span style="color:#F92672;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container important"><p class="hint-container-title">元组和列表的区别</p><ul><li>列表的元素用 <code>[]</code> 包裹，元组的元素用 <code>()</code> 包裹。</li><li>可变性：列表的元素可以修改、添加或删除；元组不可变，创建后无法修改。</li></ul></div><h2 id="_2-元组的拼接" tabindex="-1"><a class="header-anchor" href="#_2-元组的拼接"><span>2. 元组的拼接</span></a></h2><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">tup1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">tup2 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">6</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">new_tup </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> tup1 </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> tup2</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(new_tup)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">6</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-元组的获取" tabindex="-1"><a class="header-anchor" href="#_3-元组的获取"><span>3. 元组的获取</span></a></h2><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">tup </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;bornforthis&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">22</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;aiyuechuang&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">12</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;huangjiarongbao&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">8</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># Q1 提取字符串 bornforthis</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(tup[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># Q2 提取 8，三种方法</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(tup[</span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">])</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(tup[</span><span style="color:#AE81FF;">6</span><span style="color:#F8F8F2;">])</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(tup[</span><span style="color:#66D9EF;">len</span><span style="color:#F8F8F2;">(tup)</span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># Q3 提取 （&#39;bornforthis&#39;， 22）</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(tup[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">:</span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># Q4 提取 (3, 22, 12, 8)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(tup[::</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># Q5 提取 (&#39;bornforthis&#39;,&#39;aiyuechuang&#39;, &#39;huangjiarongbao&#39;)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(tup[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">::</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># Q6 提取 (22, &#39;huangjiarongbao&#39;)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(tup[</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">::</span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># Q7 提取 (8, &#39;huangjiarongbao&#39;, 12, &#39;aiyuechuang&#39;, 22, &#39;bornforthis&#39;, 3)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(tup[::</span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># Q8 提取 (&#39;huangjiarongbao&#39;, 12, &#39;aiyuechuang&#39;)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(tup[</span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">:</span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">:</span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">])</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h2 id="_4-只有一个元素的元组" tabindex="-1"><a class="header-anchor" href="#_4-只有一个元素的元组"><span>4. 只有一个元素的元组</span></a></h2><p>当元组内只有一个元素时，如 <code>tup = (1)</code> ， <code>tup = (‘a’)</code> ，查看该变量的数据类型，会显示出该元素本身的数据类型 <code>int</code> ，<code>string</code> ，原因在于计算机将外面的括号识别为运算符号的括号（如： <code>(1+2) * (2+1) = 3*3 = 9</code> ， <code>3</code> 的括号被省略了）。解决方法就是在该元素后加一个逗号 <code>,</code> 进行区分，代码如下：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">tup </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#E6DB74;">&#39;a&#39;</span><span style="color:#F8F8F2;">, )</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">type</span><span style="color:#F8F8F2;">(tup), </span><span style="color:#66D9EF;">len</span><span style="color:#F8F8F2;">(tup))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F92672;">&lt;</span><span style="color:#66D9EF;font-style:italic;">class</span><span style="color:#E6DB74;"> &#39;tuple&#39;</span><span style="color:#F92672;">&gt;</span><span style="color:#AE81FF;"> 1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-元组是不可变的" tabindex="-1"><a class="header-anchor" href="#_5-元组是不可变的"><span>5. 元组是不可变的</span></a></h2><p>元组是不可变的，一但创建，元组中的元素不可修改。如果尝试修改元组中的元素，会抛出 <code>TypeError</code> 错误。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">tup </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#E6DB74;">&#39;毒药&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;感冒药&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;解药&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">tup[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">] </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">Traceback (most recent call last):</span></span>
<span class="line"><span style="color:#F8F8F2;">  File </span><span style="color:#E6DB74;">&quot;D:\\Coder</span><span style="color:#AE81FF;">\\t</span><span style="color:#E6DB74;">est 1</span><span style="color:#AE81FF;">\\t</span><span style="color:#E6DB74;">est 1.1.py&quot;</span><span style="color:#F8F8F2;">, line </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#F92672;">in</span><span style="color:#F92672;"> &lt;</span><span style="color:#F8F8F2;">module</span><span style="color:#F92672;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">    tup[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">] </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 1</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">TypeError</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;tuple&#39;</span><span style="color:#66D9EF;font-style:italic;"> object</span><span style="color:#F8F8F2;"> does </span><span style="color:#F92672;">not</span><span style="color:#F8F8F2;"> support item assignment</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-1-元组的-修改" tabindex="-1"><a class="header-anchor" href="#_5-1-元组的-修改"><span>5.1 元组的“修改”</span></a></h3><p>思考1：元组不可以修改，但是可以提取，把需要的部分提取出来，和修改的元素以元组拼接（加法）的方式再结合成新的元组。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">tup </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#E6DB74;">&#39;毒药&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;感冒药&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;解药&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">tup_new </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#E6DB74;">&#39;泻药&#39;</span><span style="color:#F8F8F2;">, ) </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> tup[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">:]</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(tup_new)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;泻药&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;感冒药&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;解药&#39;</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>思考2：元组不可以修改，但列表可以修改，可以把元组转化成列表修改后，再转化回元组。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">tup </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#E6DB74;">&#39;毒药&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;感冒药&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;解药&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">lst </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> list</span><span style="color:#F8F8F2;">(tup)</span></span>
<span class="line"><span style="color:#F8F8F2;">lst[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">] </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &#39;泻药&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">tup_new </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> tuple</span><span style="color:#F8F8F2;">(lst)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(tup_new)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;泻药&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;感冒药&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;解药&#39;</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-2-在元组的正中间插入元素" tabindex="-1"><a class="header-anchor" href="#_5-2-在元组的正中间插入元素"><span>5.2 在元组的正中间插入元素</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">tup </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#E6DB74;">&#39;毒药&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;感冒药&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;解药&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;aiyc&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;peppa&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">lst </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> list</span><span style="color:#F8F8F2;">(tup)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 考虑奇数偶数，若是偶数直接除2， 奇数取整后，下标为中间位的左侧</span></span>
<span class="line"><span style="color:#F8F8F2;">position </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> len</span><span style="color:#F8F8F2;">(lst) </span><span style="color:#F92672;">//</span><span style="color:#AE81FF;"> 2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">lst.insert(position, </span><span style="color:#E6DB74;">&#39;泻药&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">tup_new </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> tuple</span><span style="color:#F8F8F2;">(lst)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(tup_new)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;毒药&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;感冒药&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;泻药&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;解药&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;aiyc&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;peppa&#39;</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-元组的排序" tabindex="-1"><a class="header-anchor" href="#_6-元组的排序"><span>6. 元组的排序</span></a></h2><figure><img src="`+e+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">tup </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#AE81FF;">9</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">7</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">6</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">8</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">lst </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> list</span><span style="color:#F8F8F2;">(tup)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 用 .sort 实现</span></span>
<span class="line"><span style="color:#88846F;"># lst.sort()</span></span>
<span class="line"><span style="color:#88846F;"># tup_new = tuple(lst)</span></span>
<span class="line"><span style="color:#88846F;"># print(tup_new)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 用 sorted 实现</span></span>
<span class="line"><span style="color:#F8F8F2;">sorted_lst </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> sorted</span><span style="color:#F8F8F2;">(lst)</span></span>
<span class="line"><span style="color:#F8F8F2;">tup_new </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> tuple</span><span style="color:#F8F8F2;">(sorted_lst)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(tup_new)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">6</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">7</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">8</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">9</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h2 id="_7-zip" tabindex="-1"><a class="header-anchor" href="#_7-zip"><span>7. zip()</span></a></h2><p><code>zip()</code> 是一个内置函数，用于将多个可迭代对象（如列表、元组、字符串）的相应元素配对并 <strong>返回一个元组</strong> 的迭代器。如果有两个或更多的列表，并且想要根据他们的相应元素创建一个新的迭代器（指里面的内容可以进一步拆分提取），那么<code>zip()</code> 函数就非常有用。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">list1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">list2 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#E6DB74;">&#39;a&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;b&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;c&#39;</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">zipped </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> zip</span><span style="color:#F8F8F2;">(list1, list2)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(zipped)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">list</span><span style="color:#F8F8F2;">(zipped))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F92672;">&lt;</span><span style="color:#66D9EF;">zip</span><span style="color:#66D9EF;font-style:italic;"> object</span><span style="color:#F8F8F2;"> at </span><span style="color:#66D9EF;font-style:italic;">0x</span><span style="color:#AE81FF;">0000028C886BAC00</span><span style="color:#F92672;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">[(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;a&#39;</span><span style="color:#F8F8F2;">), (</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;b&#39;</span><span style="color:#F8F8F2;">), (</span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;c&#39;</span><span style="color:#F8F8F2;">)]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果元素个数不匹配，多出来的元素不会进行压缩。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">list1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">list2 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#E6DB74;">&#39;a&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;b&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;c&#39;</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">zipped </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> zip</span><span style="color:#F8F8F2;">(list1, list2)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(zipped)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">list</span><span style="color:#F8F8F2;">(zipped))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F92672;">&lt;</span><span style="color:#66D9EF;">zip</span><span style="color:#66D9EF;font-style:italic;"> object</span><span style="color:#F8F8F2;"> at </span><span style="color:#66D9EF;font-style:italic;">0x</span><span style="color:#AE81FF;">0000018EC5A09740</span><span style="color:#F92672;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">[(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;a&#39;</span><span style="color:#F8F8F2;">), (</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;b&#39;</span><span style="color:#F8F8F2;">), (</span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;c&#39;</span><span style="color:#F8F8F2;">)]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>zip()</code> 被创建出来后，只能被解包一次。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">list1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">list2 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#E6DB74;">&#39;a&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;b&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;c&#39;</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">zipped </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> zip</span><span style="color:#F8F8F2;">(list1, list2)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(zipped)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">list</span><span style="color:#F8F8F2;">(zipped))</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">tuple</span><span style="color:#F8F8F2;">(zipped))</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">[(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;a&#39;</span><span style="color:#F8F8F2;">), (</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;b&#39;</span><span style="color:#F8F8F2;">), (</span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;c&#39;</span><span style="color:#F8F8F2;">)]</span></span>
<span class="line"><span style="color:#F8F8F2;">()                                  </span><span style="color:#88846F;"># 由于 zipped 已经被解包成 list 了，那么后面再解包成 tuple 就会显示空</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看 zip 操作后的内容。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">list1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">list2 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#E6DB74;">&#39;a&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;b&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;c&#39;</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">zipped </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> zip</span><span style="color:#F8F8F2;">(list1, list2)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(zipped)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># for 循环查看 zip 后的内容</span></span>
<span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> num, letter </span><span style="color:#F92672;">in</span><span style="color:#F8F8F2;"> zipped:</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;Number: </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">num</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">, letter: </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">letter</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F92672;">&lt;</span><span style="color:#66D9EF;">zip</span><span style="color:#66D9EF;font-style:italic;"> object</span><span style="color:#F8F8F2;"> at </span><span style="color:#66D9EF;font-style:italic;">0x</span><span style="color:#AE81FF;">000001FCE71C9940</span><span style="color:#F92672;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">Number: </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, letter: a</span></span>
<span class="line"><span style="color:#F8F8F2;">Number: </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, letter: b</span></span>
<span class="line"><span style="color:#F8F8F2;">Number: </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, letter: c</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_8-quiz" tabindex="-1"><a class="header-anchor" href="#_8-quiz"><span>8. Quiz</span></a></h2><figure><img src="`+o+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">tup </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (</span></span>
<span class="line"><span style="color:#F8F8F2;">    (</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">),</span></span>
<span class="line"><span style="color:#F8F8F2;">    (</span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">6</span><span style="color:#F8F8F2;">),</span></span>
<span class="line"><span style="color:#F8F8F2;">    (</span><span style="color:#AE81FF;">7</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">8</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">9</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">zipped </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> tuple</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">zip</span><span style="color:#F8F8F2;">(tup[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">], tup[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">], tup[</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">]))</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">sum</span><span style="color:#F8F8F2;">(zipped[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">]), </span><span style="color:#66D9EF;">sum</span><span style="color:#F8F8F2;">(zipped[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">]), </span><span style="color:#66D9EF;">sum</span><span style="color:#F8F8F2;">(zipped[</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">]))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#AE81FF;">12</span><span style="color:#AE81FF;"> 15</span><span style="color:#AE81FF;"> 18</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_9-元组常见的内置函数" tabindex="-1"><a class="header-anchor" href="#_9-元组常见的内置函数"><span>9. 元组常见的内置函数</span></a></h2><figure><img src="`+F+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',37)]))}const d=n(t,[["render",c]]),u=JSON.parse(`{"path":"/programming/python/06-tuple.html","title":"06. 元组","lang":"zh-CN","frontmatter":{"title":"06. 元组","icon":"boke","date":"2025-05-08T15:18:17.000Z","author":"Ran","isOriginal":true,"sticky":false,"star":false,"article":true,"timeline":true,"image":false,"navbar":true,"sidebarIcon":true,"comment":true,"lastUpdated":true,"editLink":true,"backToTop":true,"toc":true,"description":"1. 创建元组 元组和列表的区别 列表的元素用 [] 包裹，元组的元素用 () 包裹。 可变性：列表的元素可以修改、添加或删除；元组不可变，创建后无法修改。 2. 元组的拼接 3. 元组的获取 4. 只有一个元素的元组 当元组内只有一个元素时，如 tup = (1) ， tup = (‘a’) ，查看该变量的数据类型，会显示出该元素本身的数据类型 in...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"06. 元组\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-05-08T15:18:17.000Z\\",\\"dateModified\\":\\"2025-05-29T08:02:46.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Ran\\"}]}"],["meta",{"property":"og:url","content":"https://pythiaroot.com/programming/python/06-tuple.html"}],["meta",{"property":"og:site_name","content":"Pythia’s Root"}],["meta",{"property":"og:title","content":"06. 元组"}],["meta",{"property":"og:description","content":"1. 创建元组 元组和列表的区别 列表的元素用 [] 包裹，元组的元素用 () 包裹。 可变性：列表的元素可以修改、添加或删除；元组不可变，创建后无法修改。 2. 元组的拼接 3. 元组的获取 4. 只有一个元素的元组 当元组内只有一个元素时，如 tup = (1) ， tup = (‘a’) ，查看该变量的数据类型，会显示出该元素本身的数据类型 in..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-05-29T08:02:46.000Z"}],["meta",{"property":"article:author","content":"Ran"}],["meta",{"property":"article:published_time","content":"2025-05-08T15:18:17.000Z"}],["meta",{"property":"article:modified_time","content":"2025-05-29T08:02:46.000Z"}]]},"git":{"createdTime":1745914647000,"updatedTime":1748505766000,"contributors":[{"name":"AmaraMeng","username":"AmaraMeng","email":"ranmeng9558@gmail.com","commits":5,"url":"https://github.com/AmaraMeng"}],"changelog":[{"hash":"9d8363f051891fb384cd4aa02451f34375ba01a7","time":1748505766000,"email":"ranmeng9558@gmail.com","author":"AmaraMeng","message":"Add boolean expressions and if statements documentation"},{"hash":"f4cd20d6f5e77a3fb9064d525a33a52d5e2eced2","time":1747124730000,"email":"ranmeng9558@gmail.com","author":"AmaraMeng","message":"Add a new article on dictionaries in Python with examples of creating a phone book"},{"hash":"cd12a60784428f9325f6c782f6ef7b9fac2f3d91","time":1746691662000,"email":"ranmeng9558@gmail.com","author":"AmaraMeng","message":"feat: expand \\"6. 元组\\" article with detailed examples and explanations"},{"hash":"db887d0f2be6ad69e173072e437dfd91f153128c","time":1746688864000,"email":"ranmeng9558@gmail.com","author":"AmaraMeng","message":"Add initial draft for the \\"6. 元组\\" article with metadata"},{"hash":"185148742a9699df905d8f025f1e7ec25e676dec","time":1745914647000,"email":"ranmeng9558@gmail.com","author":"AmaraMeng","message":"Add Typora syntax guide and JYM strength shaping course article"}]},"readingTime":{"minutes":3.73,"words":1119},"filePathRelative":"programming/python/06-tuple.md","excerpt":"<h2>1. 创建元组</h2>\\n<div class=\\"language-python line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"python\\" style=\\"background-color:#272822;color:#F8F8F2\\"><pre class=\\"shiki monokai vp-code\\"><code class=\\"language-python\\"><span class=\\"line\\"><span style=\\"color:#F8F8F2\\">tup </span><span style=\\"color:#F92672\\">=</span><span style=\\"color:#F8F8F2\\"> (</span><span style=\\"color:#E6DB74\\">'毒药'</span><span style=\\"color:#F8F8F2\\">, </span><span style=\\"color:#E6DB74\\">'感冒药'</span><span style=\\"color:#F8F8F2\\">, </span><span style=\\"color:#E6DB74\\">'解药'</span><span style=\\"color:#F8F8F2\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"color:#66D9EF\\">print</span><span style=\\"color:#F8F8F2\\">(tup, </span><span style=\\"color:#66D9EF;font-style:italic\\">type</span><span style=\\"color:#F8F8F2\\">(tup))</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#88846F\\">#-------output-------</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">(</span><span style=\\"color:#E6DB74\\">'毒药'</span><span style=\\"color:#F8F8F2\\">, </span><span style=\\"color:#E6DB74\\">'感冒药'</span><span style=\\"color:#F8F8F2\\">, </span><span style=\\"color:#E6DB74\\">'解药'</span><span style=\\"color:#F8F8F2\\">) </span><span style=\\"color:#F92672\\">&lt;</span><span style=\\"color:#66D9EF;font-style:italic\\">class</span><span style=\\"color:#E6DB74\\"> 'tuple'</span><span style=\\"color:#F92672\\">&gt;</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{d as comp,u as data};
