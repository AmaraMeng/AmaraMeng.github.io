import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as l,o as p}from"./app-CEYqzRz9.js";const e="/assets/image-20250605144017107-Ip7jYPJz.png",o="/assets/image-20250609221741258-B_AwRhxs.png",t={};function F(i,s){return p(),a("div",null,[...s[0]||(s[0]=[l(`<h2 id="_1-检查用户输入" tabindex="-1"><a class="header-anchor" href="#_1-检查用户输入"><span>1. 检查用户输入</span></a></h2><p>不用循环满足用户输入错误2次：</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">user_gender </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;Enter your gender(F/M): &#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> user_gender </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &quot;F&quot;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;你是萌妹子&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">elif</span><span style="color:#F8F8F2;"> user_gender </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &quot;M&quot;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;你是糙汉子&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">else</span><span style="color:#F8F8F2;">:                                                    </span><span style="color:#88846F;"># else 后面不能跟条件，但是可以跟多条代码</span></span>
<span class="line"><span style="color:#F8F8F2;">    user_gender </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;输入错误请重新输入F或M: &quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> user_gender </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &quot;F&quot;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;你是萌妹子&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">    elif</span><span style="color:#F8F8F2;"> user_gender </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &quot;M&quot;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;你是糙汉子&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">    else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;输入错误，请重新输入F或M&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">Enter your gender(F</span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;">M): N</span></span>
<span class="line"><span style="color:#F8F8F2;">输入错误请重新输入F或M: N</span></span>
<span class="line"><span style="color:#F8F8F2;">输入错误，请重新输入F或M</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">Enter your gender(F</span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;">M): F</span></span>
<span class="line"><span style="color:#F8F8F2;">你是萌妹子</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>问题：错误超过2次要继续嵌套。</p><h2 id="_2-使用-while-循环解决用户输入问题" tabindex="-1"><a class="header-anchor" href="#_2-使用-while-循环解决用户输入问题"><span>2. 使用 while 循环解决用户输入问题</span></a></h2><p><code>while</code> 循环 当…一直循环</p><p>while 条件表达式： (while 后是 True 的时候才能执行)</p><p>​ 循环体 （缩进的代码块）</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">user_answer_correct </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> False</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">while</span><span style="color:#F92672;"> not</span><span style="color:#F8F8F2;"> user_answer_correct:</span></span>
<span class="line"><span style="color:#F8F8F2;">    user_gender </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Please enter your gender (M/F): &quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> user_gender </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &quot;F&quot;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;你是萌妹子&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        user_answer_correct </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> True</span></span>
<span class="line"><span style="color:#F92672;">    elif</span><span style="color:#F8F8F2;"> user_gender </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &quot;M&quot;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;你是糙汉子&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        user_answer_correct </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> True</span></span>
<span class="line"><span style="color:#F92672;">    else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;输入不正确，请输入正确的性别（F/M）&quot;</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+e+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>A1: 当程序输出 “你是萌妹子” 或 “你是糙汉子” 或 ”输入不正确，请输入正确的性别（F/M）“ 时停止。</p><p>A2+A3：如果不用单独变量，用 <code>while True</code> 时，程序会变成：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">while</span><span style="color:#AE81FF;"> True</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">    user_gender </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Please enter your gender (M/F): &quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> user_gender </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &quot;F&quot;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;你是萌妹子&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        user_answer_correct </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> True</span></span>
<span class="line"><span style="color:#F92672;">    elif</span><span style="color:#F8F8F2;"> user_gender </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &quot;M&quot;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;你是糙汉子&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        user_answer_correct </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> True</span></span>
<span class="line"><span style="color:#F92672;">    else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;输入不正确，请输入正确的性别（F/M）&quot;</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>那么条件一直是<code>True</code> ，就会一直循环下去，因此需要一个变量来改变这个条件的状态：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">user_answer_correct </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> True</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">while</span><span style="color:#F8F8F2;"> user_answer_correct:</span></span>
<span class="line"><span style="color:#F8F8F2;">    user_gender </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Please enter your gender (M/F): &quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> user_gender </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &quot;F&quot;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;你是萌妹子&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        user_answer_correct </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> False</span></span>
<span class="line"><span style="color:#F92672;">    elif</span><span style="color:#F8F8F2;"> user_gender </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &quot;M&quot;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;你是糙汉子&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        user_answer_correct </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> False</span></span>
<span class="line"><span style="color:#F92672;">    else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;输入不正确，请输入正确的性别（F/M）&quot;</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>但上述代码还存在一个问题，当输入正确时，<code>user_answer_correct</code> 的状态是 <code>False</code> ，与输入正确这个状态相反，为了统一，因此用<code>while not</code> 。</p><h2 id="_3-while-循环中的逆向思维" tabindex="-1"><a class="header-anchor" href="#_3-while-循环中的逆向思维"><span>3. while 循环中的逆向思维</span></a></h2><p>思考下面的代码输出是什么？</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">i </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">while</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">&lt;</span><span style="color:#AE81FF;"> 10</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(i)</span></span>
<span class="line"><span style="color:#F8F8F2;">    i </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">+</span><span style="color:#AE81FF;"> 1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>思路：</p><p>用结果倒推：什么时候 <code>i &lt; 10</code> 是 <code>False</code> ？ i = 10 的时候，倒推回去 10 = i + 1，上一个输出的 i 就是 9 ，因此输出结果为 1到 9。</p><h2 id="_4-while-循环实现求和" tabindex="-1"><a class="header-anchor" href="#_4-while-循环实现求和"><span>4. while 循环实现求和</span></a></h2><p>用 while 循环实现计算 0 ~ 100 的和。</p><h3 id="_4-1-循环的次数问题" tabindex="-1"><a class="header-anchor" href="#_4-1-循环的次数问题"><span>4.1 循环的次数问题</span></a></h3><p>先思考如何输出0 ~ 100 的数？</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">num </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">while</span><span style="color:#F8F8F2;"> num </span><span style="color:#F92672;">&lt;</span><span style="color:#AE81FF;"> 100</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">    num </span><span style="color:#F92672;">+=</span><span style="color:#AE81FF;"> 1</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(num)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上述代码的输出是 1 到 100，这样会将 num = 0 的这一次略掉，相当于跳过了一次循环。</p><p>修改 <code>print(num)</code> 和 <code>num += 1</code> 的顺序：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">num </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">while</span><span style="color:#F8F8F2;"> num </span><span style="color:#F92672;">&lt;</span><span style="color:#AE81FF;"> 100</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(num)</span></span>
<span class="line"><span style="color:#F8F8F2;">    num </span><span style="color:#F92672;">+=</span><span style="color:#AE81FF;"> 1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出为 0 到 99 ，可以将 line3 修改为 <code>while num &lt;= 100:</code> 或者 <code>while num &lt; 101:</code> 来解决100的输出。</p><p>综上，<code>执行代码</code> 和 <code>循环次数代码</code> 的顺序问题需要格外注意。</p><h3 id="_4-2-固定边界循环求和" tabindex="-1"><a class="header-anchor" href="#_4-2-固定边界循环求和"><span>4.2 固定边界循环求和</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">i </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span><span style="color:#88846F;">                 # 当前要加的数字从0开始</span></span>
<span class="line"><span style="color:#F8F8F2;">total </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span><span style="color:#88846F;">             # 存储每次相加后的结果</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">while</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">&lt;=</span><span style="color:#AE81FF;"> 100</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">    total </span><span style="color:#F92672;">+=</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> i      </span><span style="color:#88846F;"># 将 i 的值加入 total</span></span>
<span class="line"><span style="color:#F8F8F2;">    i </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">+</span><span style="color:#AE81FF;"> 1</span><span style="color:#88846F;">         # 准备下一个数字</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(total)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#AE81FF;">5050</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-3-用户输入边界循环求和" tabindex="-1"><a class="header-anchor" href="#_4-3-用户输入边界循环求和"><span>4.3 用户输入边界循环求和</span></a></h3><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#88846F;"># 获取用户输入</span></span>
<span class="line"><span style="color:#F8F8F2;">min_num </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;请输入连续相加的最小值：&quot;</span><span style="color:#F8F8F2;">))           </span><span style="color:#88846F;"># 要加的数字从 min_num 开始</span></span>
<span class="line"><span style="color:#F8F8F2;">max_num </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;请输入连续相加的最大值：&quot;</span><span style="color:#F8F8F2;">))           </span><span style="color:#88846F;"># 要加的数字到 max_num 结束</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">i </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> min_num           </span><span style="color:#88846F;"># 循环中要加的初始数字</span></span>
<span class="line"><span style="color:#F8F8F2;">total </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span><span style="color:#88846F;">             # 存储每次相加后的结果</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">while</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">&lt;=</span><span style="color:#F8F8F2;"> max_num:</span></span>
<span class="line"><span style="color:#F8F8F2;">    total </span><span style="color:#F92672;">+=</span><span style="color:#F8F8F2;"> i            </span><span style="color:#88846F;"># 从 min_num 开始将逐次递增的值加入 total</span></span>
<span class="line"><span style="color:#F8F8F2;">    i </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">+</span><span style="color:#AE81FF;"> 1</span><span style="color:#88846F;">             # 准备下一个数字</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;从</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">min_num</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">到</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">max_num</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">的和是</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">total</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">请输入连续相加的最小值：</span><span style="color:#AE81FF;">0</span></span>
<span class="line"><span style="color:#F8F8F2;">请输入连续相加的最大值：</span><span style="color:#AE81FF;">100</span></span>
<span class="line"><span style="color:#F8F8F2;">从0到100的和是5050</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h2 id="_5-小试牛刀" tabindex="-1"><a class="header-anchor" href="#_5-小试牛刀"><span>5. 小试牛刀</span></a></h2><h3 id="_5-1-实现更灵活的数字转换" tabindex="-1"><a class="header-anchor" href="#_5-1-实现更灵活的数字转换"><span>5.1 实现更灵活的数字转换</span></a></h3><figure><img src="`+o+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_5-1-1-尝试解决过程出现的错误" tabindex="-1"><a class="header-anchor" href="#_5-1-1-尝试解决过程出现的错误"><span>5.1.1 <strong>尝试解决过程出现的错误</strong></span></a></h4><p><strong>错误1：</strong></p><p>以下为尝试阶段的代码，出现不停循环的问题：</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">num_input </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;请输入数字：&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">is_digit </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> False</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">while</span><span style="color:#F92672;"> not</span><span style="color:#F8F8F2;"> is_digit:</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> num_input.isdigit():</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;输入不合法，请重新输入数字或退出程序&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">    elif</span><span style="color:#F8F8F2;"> num_input.find(</span><span style="color:#E6DB74;">&quot;.&quot;</span><span style="color:#F8F8F2;">) </span><span style="color:#F92672;">==</span><span style="color:#F92672;"> -</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">        num_input </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">(num_input)</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;该数字是整数: </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">num_input</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">, 类型为</span><span style="color:#AE81FF;">{</span><span style="color:#66D9EF;font-style:italic;">type</span><span style="color:#F8F8F2;">(num_input)</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        is_digit </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> True</span></span>
<span class="line"><span style="color:#F92672;">    elif</span><span style="color:#F8F8F2;"> num_input.find(</span><span style="color:#E6DB74;">&quot;.&quot;</span><span style="color:#F8F8F2;">) </span><span style="color:#F92672;">!=</span><span style="color:#F92672;"> -</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">        num_input </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> float</span><span style="color:#F8F8F2;">(num_input)</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;该数字是浮点数：</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">num_input</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">，类型为 </span><span style="color:#AE81FF;">{</span><span style="color:#66D9EF;font-style:italic;">type</span><span style="color:#F8F8F2;">(num_input)</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        is_digit </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> True</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>原因在于，获取用户输入写在最开始，若输入的不是数字，则会执行 <code>print(&quot;输入不合法，请重新输入数字或退出程序&quot;)</code> ，因为 <code>while</code> 循环中不包括重新输入 <code>input</code> 这条命令，<code>num_input.isdigit()</code> 的状态不变，<code>is_digit</code> 的状态也不变，就会一直循环下去。</p><p>修改如下：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">is_digit </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> False</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">while</span><span style="color:#F92672;"> not</span><span style="color:#F8F8F2;"> is_digit:</span></span>
<span class="line"><span style="color:#F8F8F2;">    num_input </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;请输入数字：&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F92672;"> not</span><span style="color:#F8F8F2;"> num_input.isdigit():</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;输入不合法，请重新输入数字或退出程序&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">    else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;是数字&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        is_digit </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> True</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>错误2：</strong></p><p><code>.isdigit()</code> 只能判断字符串内是否全是数字，若用户输入的是负数，则出现负号，也会判定为非数字。</p><p><strong>错误3：</strong></p><p>按照上述逻辑通过小数点判断浮点数，若输入出现两个小数点或者输入的字符串中带有小数点？</p><hr><p><strong>Answer:</strong></p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">is_digit </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> False</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">while</span><span style="color:#F92672;"> not</span><span style="color:#F8F8F2;"> is_digit:</span></span>
<span class="line"><span style="color:#F8F8F2;">    num_input </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;请输入数字：&quot;</span><span style="color:#F8F8F2;">).strip()      </span><span style="color:#88846F;"># 获得输入，并清除字符串左右两侧的空格</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> num_input.isdigit() </span><span style="color:#F92672;">or</span><span style="color:#F8F8F2;"> num_input[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">] </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;-&#39;</span><span style="color:#F92672;"> and</span><span style="color:#F8F8F2;"> num_input[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">:].isdigit():    </span></span>
<span class="line"><span style="color:#88846F;">        # 判断字符串是否全是整数或负整数</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;该数字是整数：</span><span style="color:#AE81FF;">{</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">(num_input)</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        is_digit </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> True</span></span>
<span class="line"><span style="color:#F92672;">    elif</span><span style="color:#E6DB74;"> &#39;.&#39;</span><span style="color:#F92672;"> in</span><span style="color:#F8F8F2;"> num_input:</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> num_input.split(</span><span style="color:#E6DB74;">&#39;.&#39;</span><span style="color:#F8F8F2;">)[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">].isdigit() </span><span style="color:#F92672;">and</span><span style="color:#F8F8F2;"> num_input.split(</span><span style="color:#E6DB74;">&#39;.&#39;</span><span style="color:#F8F8F2;">)[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">].isdigit() </span><span style="color:#F92672;">and</span><span style="color:#66D9EF;"> len</span><span style="color:#F8F8F2;">(num_input.split(</span><span style="color:#E6DB74;">&#39;.&#39;</span><span style="color:#F8F8F2;">)) </span><span style="color:#F92672;">==</span><span style="color:#AE81FF;"> 2</span><span style="color:#F8F8F2;">\\</span></span>
<span class="line"><span style="color:#F92672;">            or</span><span style="color:#F8F8F2;"> num_input[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">] </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;-&#39;</span><span style="color:#F92672;"> and</span><span style="color:#F8F8F2;"> num_input[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">:].split(</span><span style="color:#E6DB74;">&#39;.&#39;</span><span style="color:#F8F8F2;">)[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">].isdigit() </span><span style="color:#F92672;">and</span><span style="color:#F8F8F2;"> num_input[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">:].split(</span><span style="color:#E6DB74;">&#39;.&#39;</span><span style="color:#F8F8F2;">)[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">].isdigit() </span><span style="color:#F92672;">and</span><span style="color:#66D9EF;"> len</span><span style="color:#F8F8F2;">(num_input.split(</span><span style="color:#E6DB74;">&#39;.&#39;</span><span style="color:#F8F8F2;">)) </span><span style="color:#F92672;">==</span><span style="color:#AE81FF;"> 2</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;该数字是浮点数：</span><span style="color:#AE81FF;">{</span><span style="color:#66D9EF;font-style:italic;">float</span><span style="color:#F8F8F2;">(num_input)</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            is_digit </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> True</span></span>
<span class="line"><span style="color:#F92672;">        else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;该输入不合法，请重新输入或退出程序！&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">    else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;该输入不合法，请重新输入或退出程序！&#39;</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><hr><p><strong>其他代码可选/优化：</strong></p><ul><li><strong>建议一：</strong> 原代码 line5 需要加括号保证优先级，防止出现错误：</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> num_input.isdigit() </span><span style="color:#F92672;">or</span><span style="color:#F8F8F2;"> (num_input[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">] </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;-&#39;</span><span style="color:#F8F8F2;">) </span><span style="color:#F92672;">and</span><span style="color:#F8F8F2;"> (num_input[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">:].isdigit()):</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><strong>建议二：</strong> 判断是否为负数的时候，可以用内置函数 <code>.startswith()</code> 判断，因此 line5 可修改如下：</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> num_input.isdigit() </span><span style="color:#F92672;">or</span><span style="color:#F8F8F2;"> num_input.startswith(</span><span style="color:#E6DB74;">&#39;-&#39;</span><span style="color:#F8F8F2;">) </span><span style="color:#F92672;">and</span><span style="color:#F8F8F2;"> num_input[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">:].isdigit():</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><strong>建议三：</strong> line7 直接输出 <code>print(f&#39;该数字是整数：{int(num_input)}&#39;)</code> ，可以将 <code>int(num_input)</code> 命名为一个变量。</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">number </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">(num_input)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;该数字是整数：</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">number</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p><strong>建议四：</strong> 代码逻辑：先成功运行一遍，再在外面套上一个 <code>while</code> 实现多次。</p><p>前面加上 <code>is_digit = False</code> 和 <code>while not is_digit</code></p><p>后面需要放到 <code>while</code> 循环里的直接全选，按 <code>tab</code> 键即可。</p></li><li><p><strong>建议五：</strong> 浮点数解决办法：</p><p>原代码中 line9 <code>elif &#39;.&#39; in num_input:</code> 条件过泛，不能直指浮点数的特点。</p><p>浮点数里面只有一个点，多于一个点的情况就不成立，那么考虑用 <code>count()</code> 来限制点出现的次数：</p></li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">elif</span><span style="color:#F8F8F2;"> num_input.count(</span><span style="color:#E6DB74;">&#39;.&#39;</span><span style="color:#F8F8F2;">) </span><span style="color:#F92672;">==</span><span style="color:#AE81FF;"> 1</span><span style="color:#88846F;">       # 输入中只有一个点</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><strong>建议六：</strong> line 10 - line 11 中 <code>num_input.split(&#39;.&#39;)</code> 需要多次使用，可以在运行一次后直接赋值为变量，不仅简化了代码的长度，还减少了重复操作。</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">num_split </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> num_input.split(</span><span style="color:#E6DB74;">&#39;.&#39;</span><span style="color:#F8F8F2;">)                          </span><span style="color:#88846F;"># 正数</span></span>
<span class="line"><span style="color:#F8F8F2;">        num_split2 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> num_input[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">:].split(</span><span style="color:#E6DB74;">&#39;.&#39;</span><span style="color:#F8F8F2;">)             </span><span style="color:#88846F;"># 负数</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> num_split[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">].isdigit() </span><span style="color:#F92672;">and</span><span style="color:#F8F8F2;"> num_split[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">].isdigit() </span><span style="color:#F92672;">and</span><span style="color:#66D9EF;"> len</span><span style="color:#F8F8F2;">(num_split) </span><span style="color:#F92672;">==</span><span style="color:#AE81FF;"> 2</span><span style="color:#F8F8F2;">\\</span></span>
<span class="line"><span style="color:#F92672;">            or</span><span style="color:#F8F8F2;"> num_input.startwith(</span><span style="color:#E6DB74;">&#39;-&#39;</span><span style="color:#F8F8F2;">) </span><span style="color:#F92672;">and</span><span style="color:#F8F8F2;"> num_split2[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">].isdigit() </span><span style="color:#F92672;">and</span><span style="color:#F8F8F2;"> num_split2[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">].isdigit() </span><span style="color:#F92672;">and</span><span style="color:#66D9EF;"> len</span><span style="color:#F8F8F2;">(num_split) </span><span style="color:#F92672;">==</span><span style="color:#AE81FF;"> 2</span><span style="color:#F8F8F2;">:</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>因为 line9 在上文进行了优化，对按照点分割得到的列表长度的判断可以去掉，得到代码如下：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> num_split[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">].isdigit() </span><span style="color:#F92672;">and</span><span style="color:#F8F8F2;"> num_split[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">].isdigit() </span><span style="color:#F92672;">or</span><span style="color:#F8F8F2;"> num_input.startswith(</span><span style="color:#E6DB74;">&#39;-&#39;</span><span style="color:#F8F8F2;">) </span><span style="color:#F92672;">and</span><span style="color:#F8F8F2;"> num_split2[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">].isdigit() </span><span style="color:#F92672;">and</span><span style="color:#F8F8F2;"> num_split2[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">].isdigit():</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><strong>建议七：</strong> 返璞归真：不需要 split 就可判断是否为浮点数。</li></ul><p>浮点数的小数点作祟，那把小数点去掉，就可以按照整数的逻辑来判断了：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">num_replace </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> num_input.replace(</span><span style="color:#E6DB74;">&#39;.&#39;</span><span style="color:#F8F8F2;">,</span><span style="color:#E6DB74;">&#39;&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> num_replace.isdigit() </span><span style="color:#F92672;">or</span><span style="color:#F8F8F2;"> num_replace.startswith(</span><span style="color:#E6DB74;">&#39;-&#39;</span><span style="color:#F8F8F2;">) </span><span style="color:#F92672;">and</span><span style="color:#F8F8F2;"> num_replace[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">:].isdigit():</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5-1-2-参考答案" tabindex="-1"><a class="header-anchor" href="#_5-1-2-参考答案"><span>5.1.2 参考答案</span></a></h4><h5 id="_5-1-2-1-luna-friday-代码实现分析" tabindex="-1"><a class="header-anchor" href="#_5-1-2-1-luna-friday-代码实现分析"><span>5.1.2.1 Luna&amp;Friday 代码实现分析</span></a></h5><div class="hint-container tip"><p class="hint-container-title">添加日期：2025-06-10 15:22:40</p></div><p>学员 Luna&amp;Friday 实现的代码如下：</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">is_digit </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> False</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">while</span><span style="color:#F92672;"> not</span><span style="color:#F8F8F2;"> is_digit:</span></span>
<span class="line"><span style="color:#F8F8F2;">    num_input </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;请输入数字：&quot;</span><span style="color:#F8F8F2;">).strip()      </span><span style="color:#88846F;"># 获得输入，并清除字符串左右两侧的空格</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> num_input.isdigit() </span><span style="color:#F92672;">or</span><span style="color:#F8F8F2;"> num_input[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">] </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;-&#39;</span><span style="color:#F92672;"> and</span><span style="color:#F8F8F2;"> num_input[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">:].isdigit():    </span></span>
<span class="line"><span style="color:#88846F;">        # 判断字符串是否全是整数或负整数</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;该数字是整数：</span><span style="color:#AE81FF;">{</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">(num_input)</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        is_digit </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> True</span></span>
<span class="line"><span style="color:#F92672;">    elif</span><span style="color:#E6DB74;"> &#39;.&#39;</span><span style="color:#F92672;"> in</span><span style="color:#F8F8F2;"> num_input:</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> num_input.split(</span><span style="color:#E6DB74;">&#39;.&#39;</span><span style="color:#F8F8F2;">)[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">].isdigit() </span><span style="color:#F92672;">and</span><span style="color:#F8F8F2;"> num_input.split(</span><span style="color:#E6DB74;">&#39;.&#39;</span><span style="color:#F8F8F2;">)[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">].isdigit() </span><span style="color:#F92672;">and</span><span style="color:#66D9EF;"> len</span><span style="color:#F8F8F2;">(num_input.split(</span><span style="color:#E6DB74;">&#39;.&#39;</span><span style="color:#F8F8F2;">)) </span><span style="color:#F92672;">==</span><span style="color:#AE81FF;"> 2</span><span style="color:#F8F8F2;">\\</span></span>
<span class="line"><span style="color:#F92672;">            or</span><span style="color:#F8F8F2;"> num_input[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">] </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;-&#39;</span><span style="color:#F92672;"> and</span><span style="color:#F8F8F2;"> num_input[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">:].split(</span><span style="color:#E6DB74;">&#39;.&#39;</span><span style="color:#F8F8F2;">)[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">].isdigit() </span><span style="color:#F92672;">and</span><span style="color:#F8F8F2;"> num_input[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">:].split(</span><span style="color:#E6DB74;">&#39;.&#39;</span><span style="color:#F8F8F2;">)[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">].isdigit() </span><span style="color:#F92672;">and</span><span style="color:#66D9EF;"> len</span><span style="color:#F8F8F2;">(num_input.split(</span><span style="color:#E6DB74;">&#39;.&#39;</span><span style="color:#F8F8F2;">)) </span><span style="color:#F92672;">==</span><span style="color:#AE81FF;"> 2</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;该数字是浮点数：</span><span style="color:#AE81FF;">{</span><span style="color:#66D9EF;font-style:italic;">float</span><span style="color:#F8F8F2;">(num_input)</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            is_digit </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> True</span></span>
<span class="line"><span style="color:#F92672;">        else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;该输入不合法，请重新输入或退出程序！&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">    else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;该输入不合法，请重新输入或退出程序！&#39;</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h5 id="_5-1-2-2-整数判断分析" tabindex="-1"><a class="header-anchor" href="#_5-1-2-2-整数判断分析"><span>5.1.2.2 整数判断分析</span></a></h5><p>Luna 的代码如下：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> num_input.isdigit() </span><span style="color:#F92672;">or</span><span style="color:#F8F8F2;"> num_input[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">] </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;-&#39;</span><span style="color:#F92672;"> and</span><span style="color:#F8F8F2;"> num_input[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">:].isdigit():</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><p><strong>建议一</strong>：适当的添加括号，使逻辑、优先级更加明确；</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> num_input.isdigit() </span><span style="color:#F92672;">or</span><span style="color:#F8F8F2;"> (num_input[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">] </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;-&#39;</span><span style="color:#F8F8F2;">) </span><span style="color:#F92672;">and</span><span style="color:#F8F8F2;"> num_input[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">:].isdigit():</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><strong>建议二</strong>：<code>num_input[0] == &#39;-&#39;</code> 代码，可以改进成使用 <code>num_input.startswith(&#39;-&#39;)</code> 来实现。</p></li><li><p><strong>表扬👍</strong>：想到使用 <code>num_input[0] == &#39;-&#39;</code> 这个非常好，很多人不一定想得到。并且在未来编程中，很多时候没有现成的方法实现，只不过现在刚好有 <code>.startswith()</code> 这个函数来实现。原本的 <code>num_input[0] == &#39;-&#39;</code> 实现，为未来独自实现解决代码，打下基础。</p></li></ul><h5 id="_5-1-2-3-浮点数判断分析" tabindex="-1"><a class="header-anchor" href="#_5-1-2-3-浮点数判断分析"><span>5.1.2.3 浮点数判断分析</span></a></h5><p><strong>Q1</strong></p><p>Luna 的代码如下：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">elif</span><span style="color:#E6DB74;"> &#39;.&#39;</span><span style="color:#F92672;"> in</span><span style="color:#F8F8F2;"> num_input:</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这样的判断方法存在什么问题？</p><p>在说存在的问题时，我们先来说这行代码所要实现的目的：判断用户输入的数字，是不是小数。那么，小数有什么要求？——只有一个小数点。</p><p>但是上面👆的代码中，可以实现只有一个小数点的判断吗？——不行！</p><blockquote><p>条件范围过泛，目标字符串中：存在 1 个点及以上都为 True。</p></blockquote><p>推荐使用如下判断：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">elif</span><span style="color:#F8F8F2;"> num_input.count(</span><span style="color:#E6DB74;">&#39;.&#39;</span><span style="color:#F8F8F2;">) </span><span style="color:#F92672;">==</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">:  </span><span style="color:#88846F;"># 明确目标</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这样的判断方法目标明确。</p><p><strong>Q2</strong></p><p>Luna 的代码如下：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> num_input.split(</span><span style="color:#E6DB74;">&#39;.&#39;</span><span style="color:#F8F8F2;">)[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">].isdigit() </span><span style="color:#F92672;">and</span><span style="color:#F8F8F2;"> num_input.split(</span><span style="color:#E6DB74;">&#39;.&#39;</span><span style="color:#F8F8F2;">)[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">].isdigit() </span><span style="color:#F92672;">and</span><span style="color:#66D9EF;"> len</span><span style="color:#F8F8F2;">(num_input.split(</span><span style="color:#E6DB74;">&#39;.&#39;</span><span style="color:#F8F8F2;">)) </span><span style="color:#F92672;">==</span><span style="color:#AE81FF;"> 2</span><span style="color:#F92672;"> or</span><span style="color:#F8F8F2;"> num_input[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">] </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;-&#39;</span><span style="color:#F92672;"> and</span><span style="color:#F8F8F2;"> num_input[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">:].split(</span><span style="color:#E6DB74;">&#39;.&#39;</span><span style="color:#F8F8F2;">)[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">].isdigit() </span><span style="color:#F92672;">and</span><span style="color:#F8F8F2;"> num_input[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">:].split(</span><span style="color:#E6DB74;">&#39;.&#39;</span><span style="color:#F8F8F2;">)[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">].isdigit() </span><span style="color:#F92672;">and</span><span style="color:#66D9EF;"> len</span><span style="color:#F8F8F2;">(num_input.split(</span><span style="color:#E6DB74;">&#39;.&#39;</span><span style="color:#F8F8F2;">)) </span><span style="color:#F92672;">==</span><span style="color:#AE81FF;"> 2</span><span style="color:#F8F8F2;">:</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><strong>建议一</strong>：重复使用 <code>num_input.split(&#39;.&#39;)</code> 结果，可以直接操作一次 spilt 后，把结果进行赋值，简化代码长度；</li><li><strong>建议二</strong>：使用创建变量这个方法，不是单纯的代码长度减少。根本优化是：减少了重复操作；</li></ul><p><strong>优化代码如下：</strong></p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">nums_split </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> num_input.split(</span><span style="color:#E6DB74;">&#39;.&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> nums_split[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">].isdigit() </span><span style="color:#F92672;">and</span><span style="color:#F8F8F2;"> nums_split[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">].isdigit() </span><span style="color:#F92672;">and</span><span style="color:#66D9EF;"> len</span><span style="color:#F8F8F2;">(nums_split) </span><span style="color:#F92672;">==</span><span style="color:#AE81FF;"> 2</span><span style="color:#F92672;"> or</span><span style="color:#F8F8F2;"> num_input[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">] </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;-&#39;</span><span style="color:#F92672;"> and</span><span style="color:#F8F8F2;"> num_input[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">:].split(</span><span style="color:#E6DB74;">&#39;.&#39;</span><span style="color:#F8F8F2;">)[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">].isdigit() </span><span style="color:#F92672;">and</span><span style="color:#F8F8F2;"> num_input[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">:].split(</span><span style="color:#E6DB74;">&#39;.&#39;</span><span style="color:#F8F8F2;">)[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">].isdigit() </span><span style="color:#F92672;">and</span><span style="color:#66D9EF;"> len</span><span style="color:#F8F8F2;">(num_input.split(</span><span style="color:#E6DB74;">&#39;.&#39;</span><span style="color:#F8F8F2;">)) </span><span style="color:#F92672;">==</span><span style="color:#AE81FF;"> 2</span><span style="color:#F8F8F2;">:</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>后半部分判断重复出现：<code>num_input[1:].split(&#39;.&#39;)</code></p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">nums_split </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> num_input.split(</span><span style="color:#E6DB74;">&#39;.&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">nums_split2 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> num_input[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">:].split(</span><span style="color:#E6DB74;">&#39;.&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> nums_split[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">].isdigit() </span><span style="color:#F92672;">and</span><span style="color:#F8F8F2;"> nums_split[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">].isdigit() </span><span style="color:#F92672;">and</span><span style="color:#66D9EF;"> len</span><span style="color:#F8F8F2;">(nums_split) </span><span style="color:#F92672;">==</span><span style="color:#AE81FF;"> 2</span><span style="color:#F92672;"> or</span><span style="color:#F8F8F2;"> num_input[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">] </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;-&#39;</span><span style="color:#F92672;"> and</span><span style="color:#F8F8F2;"> nums_split2[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">].isdigit() </span><span style="color:#F92672;">and</span><span style="color:#F8F8F2;"> nums_split2[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">].isdigit() </span><span style="color:#F92672;">and</span><span style="color:#66D9EF;"> len</span><span style="color:#F8F8F2;">(nums_split2) </span><span style="color:#F92672;">==</span><span style="color:#AE81FF;"> 2</span><span style="color:#F8F8F2;">:</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接着进一步优化：<code>len(nums_split) == 2</code> 用来判断分割后的浮点数的数据，正常的浮点数以小数点分割后会得到列表，列表拥有小数点左右两个数据，故而 len 长度必须为 2。</p><p>而现在使用 <code>elif num_input.count(&#39;.&#39;) == 1:</code> 来作为先决条件，则不用再判断分割后的列表长度。</p><p>优化如下：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> nums_split[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">].isdigit() </span><span style="color:#F92672;">and</span><span style="color:#F8F8F2;"> nums_split[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">].isdigit() </span><span style="color:#F92672;">or</span><span style="color:#F8F8F2;"> num_input[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">] </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;-&#39;</span><span style="color:#F92672;"> and</span><span style="color:#F8F8F2;"> nums_split2[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">].isdigit() </span><span style="color:#F92672;">and</span><span style="color:#F8F8F2;"> nums_split2[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">].isdigit():</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>Q3 返璞归真</strong></p><div style="text-align:center;"><p><strong>浮点数的不一定要拆分小数点，才可以判断是否为正常小数（浮点数）。</strong></p></div><p>Luna 的代码逻辑使用的是 split 拆分浮点数，来判断浮点数是否合法。那么接下来，试一试不使用 split 方法。</p><p>具体逻辑，前面讲解此题的时候已经讲过。直接放代码：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">elif</span><span style="color:#F8F8F2;"> user_input.count(</span><span style="color:#E6DB74;">&#39;.&#39;</span><span style="color:#F8F8F2;">) </span><span style="color:#F92672;">==</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> user_input.replace(</span><span style="color:#E6DB74;">&#39;.&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;&#39;</span><span style="color:#F8F8F2;">).isdigit() </span><span style="color:#F92672;">or</span><span style="color:#F8F8F2;"> (user_input.startswith(</span><span style="color:#E6DB74;">&#39;-&#39;</span><span style="color:#F8F8F2;">) </span><span style="color:#F92672;">and</span><span style="color:#F8F8F2;"> user_input[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">:].replace(</span><span style="color:#E6DB74;">&#39;.&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;&#39;</span><span style="color:#F8F8F2;">).isdigit()):</span></span>
<span class="line"><span style="color:#F8F8F2;">        number </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> float</span><span style="color:#F8F8F2;">(user_input)</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;你输入的是浮点数：</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">number</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">    else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;输入不合法，请重新输入！&quot;</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div style="text-align:center;"><p><strong>浮点数的小数点在作祟，那咱们就把小数点去掉！</strong></p></div><h5 id="_5-1-2-4-老师答案" tabindex="-1"><a class="header-anchor" href="#_5-1-2-4-老师答案"><span>5.1.2.4 老师答案</span></a></h5><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">condition </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> False</span></span>
<span class="line"><span style="color:#F92672;">while</span><span style="color:#F92672;"> not</span><span style="color:#F8F8F2;"> condition:</span></span>
<span class="line"><span style="color:#F8F8F2;">    user_input </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;请输入一个数字：&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> user_input.isdigit() </span><span style="color:#F92672;">or</span><span style="color:#F8F8F2;"> (user_input.startswith(</span><span style="color:#E6DB74;">&#39;-&#39;</span><span style="color:#F8F8F2;">) </span><span style="color:#F92672;">and</span><span style="color:#F8F8F2;"> user_input[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">:].isdigit()):</span></span>
<span class="line"><span style="color:#F8F8F2;">        number </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">(user_input)</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;你输入的是整数：</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">number</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        condition </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> True</span></span>
<span class="line"><span style="color:#F92672;">    elif</span><span style="color:#F8F8F2;"> user_input.count(</span><span style="color:#E6DB74;">&#39;.&#39;</span><span style="color:#F8F8F2;">) </span><span style="color:#F92672;">==</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> user_input.replace(</span><span style="color:#E6DB74;">&#39;.&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;&#39;</span><span style="color:#F8F8F2;">).isdigit() </span><span style="color:#F92672;">or</span><span style="color:#F8F8F2;"> (user_input.startswith(</span><span style="color:#E6DB74;">&#39;-&#39;</span><span style="color:#F8F8F2;">) </span><span style="color:#F92672;">and</span><span style="color:#F8F8F2;"> user_input[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">:].replace(</span><span style="color:#E6DB74;">&#39;.&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;&#39;</span><span style="color:#F8F8F2;">).isdigit()):</span></span>
<span class="line"><span style="color:#F8F8F2;">            number </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> float</span><span style="color:#F8F8F2;">(user_input)</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;你输入的是浮点数：</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">number</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            condition </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> True</span></span>
<span class="line"><span style="color:#F92672;">        else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;输入不合法，请重新输入！&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">    else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;输入不合法，请重新输入！&quot;</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>添加退出选择：</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">condition </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> False</span></span>
<span class="line"><span style="color:#F92672;">while</span><span style="color:#F92672;"> not</span><span style="color:#F8F8F2;"> condition:</span></span>
<span class="line"><span style="color:#F8F8F2;">    user_input </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;请输入一个数字（输入 q 退出）：&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> user_input.lower() </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;q&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">        condition </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> True</span></span>
<span class="line"><span style="color:#F92672;">    elif</span><span style="color:#F8F8F2;"> user_input.isdigit() </span><span style="color:#F92672;">or</span><span style="color:#F8F8F2;"> (user_input.startswith(</span><span style="color:#E6DB74;">&#39;-&#39;</span><span style="color:#F8F8F2;">) </span><span style="color:#F92672;">and</span><span style="color:#F8F8F2;"> user_input[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">:].isdigit()):</span></span>
<span class="line"><span style="color:#F8F8F2;">        number </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">(user_input)</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;你输入的是整数：</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">number</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        condition </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> True</span></span>
<span class="line"><span style="color:#F92672;">    elif</span><span style="color:#F8F8F2;"> user_input.count(</span><span style="color:#E6DB74;">&#39;.&#39;</span><span style="color:#F8F8F2;">) </span><span style="color:#F92672;">==</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> user_input.replace(</span><span style="color:#E6DB74;">&#39;.&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;&#39;</span><span style="color:#F8F8F2;">).isdigit() </span><span style="color:#F92672;">or</span><span style="color:#F8F8F2;"> (user_input.startswith(</span><span style="color:#E6DB74;">&#39;-&#39;</span><span style="color:#F8F8F2;">) </span><span style="color:#F92672;">and</span><span style="color:#F8F8F2;"> user_input[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">:].replace(</span><span style="color:#E6DB74;">&#39;.&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;&#39;</span><span style="color:#F8F8F2;">).isdigit()):</span></span>
<span class="line"><span style="color:#F8F8F2;">            number </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> float</span><span style="color:#F8F8F2;">(user_input)</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;你输入的是浮点数：</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">number</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            condition </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> True</span></span>
<span class="line"><span style="color:#F92672;">        else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;输入不合法，请重新输入！&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">    else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;输入不合法，请重新输入！&quot;</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_5-2-🎮-猜数字游戏" tabindex="-1"><a class="header-anchor" href="#_5-2-🎮-猜数字游戏"><span>5.2 🎮 猜数字游戏</span></a></h3><h4 id="_5-2-1-📋-题目描述" tabindex="-1"><a class="header-anchor" href="#_5-2-1-📋-题目描述"><span>5.2.1 📋 题目描述</span></a></h4><p>编写一个 Python 程序，模拟“猜数字”游戏：</p><ul><li>程序随机生成一个 1 到 100 之间的整数作为“目标数字”。</li><li>玩家每次输入一个猜测的数字。</li><li>程序根据玩家输入，提示： <ul><li>“太大了”；</li><li>“太小了”；</li><li>或“恭喜你猜对了！”。</li></ul></li><li>玩家可以无限次猜，直到猜中为止。</li></ul><h4 id="_5-2-2-🛠️-基本功能要求" tabindex="-1"><a class="header-anchor" href="#_5-2-2-🛠️-基本功能要求"><span>5.2.2 🛠️ 基本功能要求</span></a></h4><ol><li>使用 <code>random.randint(1, 100)</code> 生成目标数字。</li><li>使用 <code>input()</code> 接收玩家输入。</li><li>使用 <code>while</code> 循环不断让玩家猜，直到猜对。</li><li>每次猜错时输出提示，帮助玩家调整方向。</li><li>猜中后，输出总共猜了几次。</li></ol><h4 id="_5-2-3-🌟-进阶挑战-选做" tabindex="-1"><a class="header-anchor" href="#_5-2-3-🌟-进阶挑战-选做"><span>5.2.3 🌟 进阶挑战（选做）</span></a></h4><ol><li><strong>增加重玩功能：</strong><ul><li>在猜中后询问是否“再来一局”（输入 <code>y</code> 或 <code>n</code> ）；</li><li>若选择 <code>y</code>，重新开始一轮游戏。</li></ul></li><li><strong>添加最多猜 10 次的限制：</strong><ul><li>若 10 次内未猜中，输出失败信息和正确答案；</li><li>若中途猜中则提前结束。</li></ul></li><li><strong>美化输出，加入 emoji 或横线分隔提示：</strong><ul><li>如 <code>🎯 欢迎来到猜数字游戏！</code>；</li><li>用 <code>print(&quot;=&quot;*30)</code> 来分割内容。</li></ul></li></ol><h4 id="_5-2-4-✅-示例运行效果" tabindex="-1"><a class="header-anchor" href="#_5-2-4-✅-示例运行效果"><span>5.2.4 ✅ 示例运行效果</span></a></h4><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-"><span class="line"><span>🎯 欢迎来到猜数字游戏！</span></span>
<span class="line"><span>请输入你猜的数字（1-100）：50</span></span>
<span class="line"><span>太小了，再试试！</span></span>
<span class="line"><span>请输入你猜的数字（1-100）：75</span></span>
<span class="line"><span>太大了，再试试！</span></span>
<span class="line"><span>请输入你猜的数字（1-100）：65</span></span>
<span class="line"><span>恭喜你猜对了！你一共猜了 3 次！</span></span>
<span class="line"><span>是否再来一局？(y/n)：n</span></span>
<span class="line"><span>游戏结束，感谢游玩！</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>提示：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> random</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(random.randint(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">100</span><span style="color:#F8F8F2;">))</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Answer:</strong></p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> random</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">while</span><span style="color:#AE81FF;"> True</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">    answer </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> random.randint(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">100</span><span style="color:#F8F8F2;">)          </span><span style="color:#88846F;"># 系统随机生成一个 1-100 的数字</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    is_correct </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> False</span></span>
<span class="line"><span style="color:#F92672;">    while</span><span style="color:#F92672;"> not</span><span style="color:#F8F8F2;"> is_correct:</span></span>
<span class="line"><span style="color:#F8F8F2;">        user_input </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;请输入 1-100 的整数：&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> user_input.isdigit() </span><span style="color:#F92672;">and</span><span style="color:#AE81FF;"> 1</span><span style="color:#F92672;"> &lt;=</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">(user_input) </span><span style="color:#F92672;">&lt;=</span><span style="color:#AE81FF;"> 100</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F92672;">            if</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">(user_input) </span><span style="color:#F92672;">==</span><span style="color:#F8F8F2;"> answer:</span></span>
<span class="line"><span style="color:#66D9EF;">                print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;恭喜答对！&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">                print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;开始新一轮游戏。。。&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">                is_correct </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> True</span></span>
<span class="line"><span style="color:#F92672;">            elif</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">(user_input) </span><span style="color:#F92672;">&lt;</span><span style="color:#F8F8F2;"> answer:</span></span>
<span class="line"><span style="color:#66D9EF;">                print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;小了！&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">            else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">                print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;大了！&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">        else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;输入错误，请输入 1-100 的整数！&#39;</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h4 id="_5-2-5-参考答案" tabindex="-1"><a class="header-anchor" href="#_5-2-5-参考答案"><span>5.2.5 参考答案</span></a></h4><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> random</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;欢迎来到猜字游戏！&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;=&#39;</span><span style="color:#F92672;"> *</span><span style="color:#AE81FF;"> 30</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">condition </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> False</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">while</span><span style="color:#F92672;"> not</span><span style="color:#F8F8F2;"> condition:</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;我已经想好了一个 1 到 100 之间的数字，你能猜中吗？&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    target </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> random.randint(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">100</span><span style="color:#F8F8F2;">)          </span><span style="color:#88846F;"># 系统随机生成一个 1-100 的数字</span></span>
<span class="line"><span style="color:#F8F8F2;">    max_attempts </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 10</span></span>
<span class="line"><span style="color:#F8F8F2;">    attempts </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span></span>
<span class="line"><span style="color:#F92672;">    while</span><span style="color:#F8F8F2;"> attempts </span><span style="color:#F92672;">&lt;</span><span style="color:#F8F8F2;"> max_attempts:</span></span>
<span class="line"><span style="color:#F8F8F2;">        guess </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;请输入第 </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">attempts </span><span style="color:#F92672;">+</span><span style="color:#AE81FF;"> 1}</span><span style="color:#E6DB74;"> 次猜测：&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        attempts </span><span style="color:#F92672;">+=</span><span style="color:#AE81FF;"> 1</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> guess </span><span style="color:#F92672;">&lt;</span><span style="color:#F8F8F2;"> target:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;太小了，再试试！</span><span style="color:#AE81FF;">\\n</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">        elif</span><span style="color:#F8F8F2;"> guess </span><span style="color:#F92672;">&gt;</span><span style="color:#F8F8F2;"> target:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;太大了，再试试！</span><span style="color:#AE81FF;">\\n</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">        else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;恭喜你猜对了！你一共猜了 </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">attempts</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> 次！&#39;</span><span style="color:#F8F8F2;">)     </span><span style="color:#88846F;"># 内层猜数字循环结束（10次机会）</span></span>
<span class="line"><span style="color:#F8F8F2;">            attempts </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 10</span><span style="color:#88846F;">                                     # 结束循环方法一</span></span>
<span class="line"><span style="color:#F92672;">    else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;很遗憾，你已经猜了 </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">max_attempts</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> 次都没猜中，正确答案是： </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">target</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span></span>
<span class="line"><span style="color:#F8F8F2;">    again </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;是否再来一局？（Y/N）&#39;</span><span style="color:#F8F8F2;">).strip().lower()</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> again </span><span style="color:#F92672;">!=</span><span style="color:#E6DB74;"> &#39;y&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;游戏结束，感谢游玩！&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        condition </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> True</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">\\n</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F92672;"> +</span><span style="color:#E6DB74;"> &#39;=&#39;</span><span style="color:#F92672;"> *</span><span style="color:#AE81FF;"> 30</span><span style="color:#F92672;"> +</span><span style="color:#E6DB74;"> &#39;</span><span style="color:#AE81FF;">\\n</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>line 24 结束循环方法二：</p><p>在外面加上一个条件：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">game_player_condition </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> False</span></span>
<span class="line"><span style="color:#F92672;">    while</span><span style="color:#F8F8F2;"> (</span><span style="color:#F92672;">not</span><span style="color:#F8F8F2;"> game_player_condition) </span><span style="color:#F92672;">and</span><span style="color:#F8F8F2;"> (attempts </span><span style="color:#F92672;">&lt;</span><span style="color:#F8F8F2;"> max_attempts):</span></span>
<span class="line"><span style="color:#F8F8F2;">        guess </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;请输入第 </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">attempts </span><span style="color:#F92672;">+</span><span style="color:#AE81FF;"> 1}</span><span style="color:#E6DB74;"> 次猜测：&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        attempts </span><span style="color:#F92672;">+=</span><span style="color:#AE81FF;"> 1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> guess </span><span style="color:#F92672;">&lt;</span><span style="color:#F8F8F2;"> target:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;太小了，再试试！</span><span style="color:#AE81FF;">\\n</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">        elif</span><span style="color:#F8F8F2;"> guess </span><span style="color:#F92672;">&gt;</span><span style="color:#F8F8F2;"> target:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;太大了，再试试！</span><span style="color:#AE81FF;">\\n</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">        else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;恭喜你猜对了！你一共猜了 </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">attempts</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> 次！&#39;</span><span style="color:#F8F8F2;">)     </span><span style="color:#88846F;"># 内层猜数字循环结束（10次机会）</span></span>
<span class="line"><span style="color:#F8F8F2;">            game_player_condition </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> True</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,130)])])}const y=n(t,[["render",F]]),d=JSON.parse(`{"path":"/programming/python/11-while.html","title":"11. while","lang":"zh-CN","frontmatter":{"title":"11. while","icon":"boke","date":"2025-06-05T14:13:47.000Z","author":"Ran","isOriginal":true,"sticky":false,"star":false,"article":true,"timeline":true,"image":false,"navbar":true,"sidebarIcon":true,"comment":true,"lastUpdated":true,"editLink":true,"backToTop":true,"toc":true,"description":"1. 检查用户输入 不用循环满足用户输入错误2次： 问题：错误超过2次要继续嵌套。 2. 使用 while 循环解决用户输入问题 while 循环 当…一直循环 while 条件表达式： (while 后是 True 的时候才能执行) ​ 循环体 （缩进的代码块） A1: 当程序输出 “你是萌妹子” 或 “你是糙汉子” 或 ”输入不正确，请输入正确的性...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"11. while\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-06-05T14:13:47.000Z\\",\\"dateModified\\":\\"2025-06-13T06:32:57.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Ran\\"}]}"],["meta",{"property":"og:url","content":"https://pythiaroot.com/programming/python/11-while.html"}],["meta",{"property":"og:site_name","content":"Pythia’s Root"}],["meta",{"property":"og:title","content":"11. while"}],["meta",{"property":"og:description","content":"1. 检查用户输入 不用循环满足用户输入错误2次： 问题：错误超过2次要继续嵌套。 2. 使用 while 循环解决用户输入问题 while 循环 当…一直循环 while 条件表达式： (while 后是 True 的时候才能执行) ​ 循环体 （缩进的代码块） A1: 当程序输出 “你是萌妹子” 或 “你是糙汉子” 或 ”输入不正确，请输入正确的性..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-13T06:32:57.000Z"}],["meta",{"property":"article:author","content":"Ran"}],["meta",{"property":"article:published_time","content":"2025-06-05T14:13:47.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-13T06:32:57.000Z"}]]},"git":{"createdTime":1748937627000,"updatedTime":1749796377000,"contributors":[{"name":"AmaraMeng","username":"AmaraMeng","email":"ranmeng9558@gmail.com","commits":10,"url":"https://github.com/AmaraMeng"}],"changelog":[{"hash":"bf9cae666c7867720b65e938151e155803d71a30","time":1749796377000,"email":"ranmeng9558@gmail.com","author":"AmaraMeng","message":"Add comprehensive documentation for 'for' loop in Python"},{"hash":"d110f36e5c876a2c908d6abbfe503c9c9445e36d","time":1749607171000,"email":"ranmeng9558@gmail.com","author":"AmaraMeng","message":"Fix formatting and enhance clarity in Python documentation: Adjust section headings and add Python tips"},{"hash":"b35525d1ac0413306a007be2b3fe5ed3a630429c","time":1749542746000,"email":"ranmeng9558@gmail.com","author":"AmaraMeng","message":"Refactor input validation section: Enhance clarity and structure in error handling and suggestions for numeric input"},{"hash":"a8f86e04c97949a4696399e29ab4c6c18c51f4d5","time":1749540009000,"email":"ranmeng9558@gmail.com","author":"AmaraMeng","message":"Refactor input validation logic: Enhance number input checks with suggestions for improved readability and accuracy"},{"hash":"566f5d57f5dc6e6cf0e84d95e0eeed9959e846d2","time":1749522974000,"email":"ranmeng9558@gmail.com","author":"AmaraMeng","message":"Add number guessing game implementation using while loop for user input validation"},{"hash":"25ac0bba5b20943244ae0fc2ac174d9788a736f1","time":1749478969000,"email":"ranmeng9558@gmail.com","author":"AmaraMeng","message":"Refactor code structure for improved readability and maintainability"},{"hash":"ba45300f4a9834b1880347261c31a1e49076e765","time":1749113780000,"email":"ranmeng9558@gmail.com","author":"AmaraMeng","message":"Add error handling examples for user input validation in while loops"},{"hash":"a28127deabb50feba9c59ebda40588f5c238b6be","time":1749112396000,"email":"ranmeng9558@gmail.com","author":"AmaraMeng","message":"Refactor code structure for improved readability and maintainability"},{"hash":"1d86a722af932b31eef1d494e22ea3c95a6cb43d","time":1749104190000,"email":"ranmeng9558@gmail.com","author":"AmaraMeng","message":"Refactor conditional statements in Python examples for improved readability and structure"},{"hash":"7783bb530326be040ddf84f819343f429ee9f145","time":1748937627000,"email":"ranmeng9558@gmail.com","author":"AmaraMeng","message":"Add initial draft for while loop documentation in Python"}]},"readingTime":{"minutes":13.12,"words":3935},"filePathRelative":"programming/python/11-while.md","excerpt":"<h2>1. 检查用户输入</h2>\\n<p>不用循环满足用户输入错误2次：</p>\\n<div class=\\"language-python line-numbers-mode has-collapsed-lines collapsed\\" data-highlighter=\\"shiki\\" data-ext=\\"python\\" style=\\"--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2\\"><pre class=\\"shiki monokai vp-code\\"><code class=\\"language-python\\"><span class=\\"line\\"><span style=\\"color:#F8F8F2\\">user_gender </span><span style=\\"color:#F92672\\">=</span><span style=\\"color:#66D9EF\\"> input</span><span style=\\"color:#F8F8F2\\">(</span><span style=\\"color:#E6DB74\\">'Enter your gender(F/M): '</span><span style=\\"color:#F8F8F2\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F92672\\">if</span><span style=\\"color:#F8F8F2\\"> user_gender </span><span style=\\"color:#F92672\\">==</span><span style=\\"color:#E6DB74\\"> \\"F\\"</span><span style=\\"color:#F8F8F2\\">:</span></span>\\n<span class=\\"line\\"><span style=\\"color:#66D9EF\\">    print</span><span style=\\"color:#F8F8F2\\">(</span><span style=\\"color:#E6DB74\\">'你是萌妹子'</span><span style=\\"color:#F8F8F2\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F92672\\">elif</span><span style=\\"color:#F8F8F2\\"> user_gender </span><span style=\\"color:#F92672\\">==</span><span style=\\"color:#E6DB74\\"> \\"M\\"</span><span style=\\"color:#F8F8F2\\">:</span></span>\\n<span class=\\"line\\"><span style=\\"color:#66D9EF\\">    print</span><span style=\\"color:#F8F8F2\\">(</span><span style=\\"color:#E6DB74\\">'你是糙汉子'</span><span style=\\"color:#F8F8F2\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F92672\\">else</span><span style=\\"color:#F8F8F2\\">:                                                    </span><span style=\\"color:#88846F\\"># else 后面不能跟条件，但是可以跟多条代码</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">    user_gender </span><span style=\\"color:#F92672\\">=</span><span style=\\"color:#66D9EF\\"> input</span><span style=\\"color:#F8F8F2\\">(</span><span style=\\"color:#E6DB74\\">\\"输入错误请重新输入F或M: \\"</span><span style=\\"color:#F8F8F2\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F92672\\">    if</span><span style=\\"color:#F8F8F2\\"> user_gender </span><span style=\\"color:#F92672\\">==</span><span style=\\"color:#E6DB74\\"> \\"F\\"</span><span style=\\"color:#F8F8F2\\">:</span></span>\\n<span class=\\"line\\"><span style=\\"color:#66D9EF\\">        print</span><span style=\\"color:#F8F8F2\\">(</span><span style=\\"color:#E6DB74\\">'你是萌妹子'</span><span style=\\"color:#F8F8F2\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F92672\\">    elif</span><span style=\\"color:#F8F8F2\\"> user_gender </span><span style=\\"color:#F92672\\">==</span><span style=\\"color:#E6DB74\\"> \\"M\\"</span><span style=\\"color:#F8F8F2\\">:</span></span>\\n<span class=\\"line\\"><span style=\\"color:#66D9EF\\">        print</span><span style=\\"color:#F8F8F2\\">(</span><span style=\\"color:#E6DB74\\">'你是糙汉子'</span><span style=\\"color:#F8F8F2\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F92672\\">    else</span><span style=\\"color:#F8F8F2\\">:</span></span>\\n<span class=\\"line\\"><span style=\\"color:#66D9EF\\">        print</span><span style=\\"color:#F8F8F2\\">(</span><span style=\\"color:#E6DB74\\">'输入错误，请重新输入F或M'</span><span style=\\"color:#F8F8F2\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">        </span></span>\\n<span class=\\"line\\"><span style=\\"color:#88846F\\">#-------output-------</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">Enter your gender(F</span><span style=\\"color:#F92672\\">/</span><span style=\\"color:#F8F8F2\\">M): N</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">输入错误请重新输入F或M: N</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">输入错误，请重新输入F或M</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">Enter your gender(F</span><span style=\\"color:#F92672\\">/</span><span style=\\"color:#F8F8F2\\">M): F</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">你是萌妹子</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div><div class=\\"collapsed-lines\\"></div></div>","autoDesc":true}`);export{y as comp,d as data};
