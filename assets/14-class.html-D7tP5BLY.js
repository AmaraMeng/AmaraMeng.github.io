import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as y,d as c,e as p,a as s,w as a,r,o as d,b as n}from"./app-DrSefl4i.js";const u="/assets/image-20250807133509004-D9kIxplx.png",v="/assets/image-20250807140619593-OEdMI0-0.png",m="/assets/image-20250807150100511-C2_oYkp8.png",b="/assets/image-20250807150135498-nclluQw5.png",E="/assets/image-20250807153945373-G04E1nWH.png",D="/assets/image-20250807154105539-B88A-Wfb.png",h="/assets/image-20250819144744848-CSzxnjF_.png",f="/assets/image-20250821144554990-B5rtItcy.png",g="/assets/image-20250821144627264-DiOzo0rz.png",A="/assets/image-20250922150003693-BiB5Phb5.png",_="/assets/image-20251027144911466-CTgv1Azx.png",B="/assets/image-20251027145124813-DQUVQi6U.png",k="/assets/image-20251027152916927-D9mZFKtT.png",x={};function q(w,l){const t=r("CodeTabs"),F=r("Tabs");return d(),y("div",null,[l[68]||(l[68]=c('<h2 id="_1-面向对象" tabindex="-1"><a class="header-anchor" href="#_1-面向对象"><span>1. 面向对象</span></a></h2><p>将程序任务涉及到的事物抽象为一个个的对象，以这些对象为中心来写程序。</p><h3 id="_1-1-什么是类" tabindex="-1"><a class="header-anchor" href="#_1-1-什么是类"><span>1.1 什么是类？</span></a></h3><p><strong>类</strong> 和 <strong>实例</strong></p><p>物以类聚，人以群分</p><ul><li>狗是一类动物，具有相同、相似属性。（类）</li><li>两只狗，半斤和八两，出生后不会互相影响，彼此是独立的个体。（实例）</li><li>当类改变的时候，实例也会受到影响；但实例改变时，不会影响其他实例或者整个类。</li></ul><h3 id="_1-2-对象-你找到了吗" tabindex="-1"><a class="header-anchor" href="#_1-2-对象-你找到了吗"><span>1.2 对象，你找到了吗？</span></a></h3><figure><img src="'+u+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol><li>下面是一段错误代码，<code>dog_x</code> 和 <code>cat_x</code> 分别是狗和猫的位置坐标，在检测到用户输入为 “move” 时，让猫和狗都前进 10 的长度。</li></ol><p>原代码如下，请修改：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">dog_x </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span></span>
<span class="line"><span style="color:#F8F8F2;">cat_x </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> dog_move</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#F8F8F2;">    dog_x </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> dog_x </span><span style="color:#F92672;">+</span><span style="color:#AE81FF;"> 10</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> cat_move</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#F8F8F2;">    cat_x </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> cat_x </span><span style="color:#F92672;">+</span><span style="color:#AE81FF;"> 10</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">user_input </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> user_input </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;move&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">    dog_move()</span></span>
<span class="line"><span style="color:#F8F8F2;">    cat_move()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>个人修改如下：</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">dog_x </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span></span>
<span class="line"><span style="color:#F8F8F2;">cat_x </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> dog_move</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#F92672;">    global</span><span style="color:#F8F8F2;"> dog_x</span></span>
<span class="line"><span style="color:#F8F8F2;">    dog_x </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> dog_x </span><span style="color:#F92672;">+</span><span style="color:#AE81FF;"> 10</span></span>
<span class="line"><span style="color:#F92672;">    return</span><span style="color:#F8F8F2;"> dog_x</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> cat_move</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#F92672;">    global</span><span style="color:#F8F8F2;"> cat_x</span></span>
<span class="line"><span style="color:#F8F8F2;">    cat_x </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> cat_x </span><span style="color:#F92672;">+</span><span style="color:#AE81FF;"> 10</span></span>
<span class="line"><span style="color:#F92672;">    return</span><span style="color:#F8F8F2;"> cat_x</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">user_input </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> user_input </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;move&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;dog:</span><span style="color:#AE81FF;">{}</span><span style="color:#E6DB74;">, cat:</span><span style="color:#AE81FF;">{}</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">.format(dog_x, cat_x))</span></span>
<span class="line"><span style="color:#F8F8F2;">    dog_move()</span></span>
<span class="line"><span style="color:#F8F8F2;">    cat_move()</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;dog:</span><span style="color:#AE81FF;">{}</span><span style="color:#E6DB74;">, cat:</span><span style="color:#AE81FF;">{}</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">.format(dog_x, cat_x))</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>复盘：</p><ul><li>为什么要加上 global？因为 <code>dog_x</code> 是全局变量，如果不加上 global，函数内的 <code>dog_x</code> 会被视为局部变量，无法修改全局变量的值。</li><li>return 可以不加，因为已经声明为全局变量了，后面输出可以直接使用。</li></ul><ol start="2"><li>下面是另一位同学的错误修改，请找出错误：</li></ol><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> dog_move</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#F8F8F2;">    dog_x </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span></span>
<span class="line"><span style="color:#F8F8F2;">    dog_x </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> dog_x </span><span style="color:#F92672;">+</span><span style="color:#AE81FF;"> 10</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> cat_move</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#F8F8F2;">    cat_x </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span></span>
<span class="line"><span style="color:#F8F8F2;">    cat_x </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> cat_x </span><span style="color:#F92672;">+</span><span style="color:#AE81FF;"> 10</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">user_input </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;输入指令:&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> user_input </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;move&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;dog:</span><span style="color:#AE81FF;">{}</span><span style="color:#E6DB74;">, cat:</span><span style="color:#AE81FF;">{}</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">.format(dog_x, cat_x))</span></span>
<span class="line"><span style="color:#F8F8F2;">    dog_move()</span></span>
<span class="line"><span style="color:#F8F8F2;">    cat_move()</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;dog:</span><span style="color:#AE81FF;">{}</span><span style="color:#E6DB74;">, cat:</span><span style="color:#AE81FF;">{}</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">.format(dog_x, cat_x))</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>错误一：局部变量在函数外不能使用；</p><p>错误二：每次调用函数，<code>dog_x</code> 和 <code>cat_x</code> 都会被重置为 0，因此每次调用函数的时候，输出结果都是 10，一直在原地踏步。</p><ol start="3"><li>现在，除了猫和狗，还要加一个大象，让它也像猫狗一样前进 10。注意：不要机械的写代码，要好好感受一下写代码的时候有什么情绪，这对后续对象的理解有帮助。</li></ol><p>感受：类似的东西在重复添加。我们上面定义了三个相似的函数，功能一样，只是<strong>变量</strong> 名称不一样，没必要创造这么多函数。例如：程序注册新用户，需要用户名、手机号、密码，那是不是要为每一个用户都创建一个函数来储存呢？</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#88846F;"># 我们现在有三个用户要注册，每个用户都要填写用户名、手机号、密码</span></span>
<span class="line"><span style="color:#88846F;"># 如果我们不优化代码，那可能会像下面这样写：</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> register_user1</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#F8F8F2;">    username1 </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;请输入用户1的用户名：&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    phone1 </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;请输入用户1的手机号：&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    password1 </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;请输入用户1的密码：&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;用户1注册成功！用户名：</span><span style="color:#AE81FF;">{}</span><span style="color:#E6DB74;">，手机号：</span><span style="color:#AE81FF;">{}</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">.format(username1, phone1))</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> register_user2</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#F8F8F2;">    username2 </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;请输入用户2的用户名：&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    phone2 </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;请输入用户2的手机号：&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    password2 </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;请输入用户2的密码：&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;用户2注册成功！用户名：</span><span style="color:#AE81FF;">{}</span><span style="color:#E6DB74;">，手机号：</span><span style="color:#AE81FF;">{}</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">.format(username2, phone2))</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> register_user3</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#F8F8F2;">    username3 </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;请输入用户3的用户名：&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    phone3 </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;请输入用户3的手机号：&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    password3 </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;请输入用户3的密码：&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;用户3注册成功！用户名：</span><span style="color:#AE81FF;">{}</span><span style="color:#E6DB74;">，手机号：</span><span style="color:#AE81FF;">{}</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">.format(username3, phone3))</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 现在我们要依次注册这三个用户</span></span>
<span class="line"><span style="color:#F8F8F2;">register_user1()</span></span>
<span class="line"><span style="color:#F8F8F2;">register_user2()</span></span>
<span class="line"><span style="color:#F8F8F2;">register_user3()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h2 id="_2-一个例子-面向对象的方法" tabindex="-1"><a class="header-anchor" href="#_2-一个例子-面向对象的方法"><span>2. 一个例子：面向对象的方法</span></a></h2><h3 id="_2-1-面向对象代码框架" tabindex="-1"><a class="header-anchor" href="#_2-1-面向对象代码框架"><span>2.1 面向对象代码框架</span></a></h3><p>接下来，我们要使用面向对象的方法来实现前面动物听到用户输入指令 <code>move</code> 就往前跑的功能。</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Animal</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.x </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> move</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.x </span><span style="color:#F92672;">=</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.x </span><span style="color:#F92672;">+</span><span style="color:#AE81FF;"> 10</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">dog </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Animal()</span></span>
<span class="line"><span style="color:#F8F8F2;">cat </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Animal()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">user_input </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;输入指令：&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> user_input </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;move&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">    dog.move()</span></span>
<span class="line"><span style="color:#F8F8F2;">    cat.move()</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;Dog position:&#39;</span><span style="color:#F8F8F2;">, dog.x)</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;Cat position:&#39;</span><span style="color:#F8F8F2;">, cat.x)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>上述代码包含几个内容：</p><ul><li>类：一群有相似性的事物的集合，对应 Python 里的 class</li><li>对象：集合中的一个事物，对应 class 里生成的一个 object，比如代码中的 dog 和 cat。（其实就是上文提到的实例）</li><li>属性：对象的某个静态特征，是自身携带的，比如代码中的 x</li><li>函数：对象（实例）的某个动态能力，比如上述代码中的 <code>move()</code> 函数。</li></ul><figure><img src="`+v+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_2-2-init-self-函数" tabindex="-1"><a class="header-anchor" href="#_2-2-init-self-函数"><span>2.2 <code>_ _ init_ _(self)</code> 函数</span></a></h3><p>自动调用函数</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Animal</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):                </span><span style="color:#88846F;"># 在一个对象生成时会被自动调用的函数</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.x </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>验证的代码如下：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Animal</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;init function called&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span></span>
<span class="line"><span style="color:#F8F8F2;">dog </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Animal()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">init function called</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上述代码中，没有调用 <code>_ _init_ _()</code> 这个函数，但是将 dog 定义在 Animal 这个类别里的时候自动运行了这个函数，即自动调用的函数。类似于一出生就自带的天赋技能。</p><p>例子一：创建游戏角色。</p><p>每个角色一出生就会自动拥有一些天赋技能，这些技能不是手动添加的，而是角色一出生系统就帮你准备好了。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">GameCharacter</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;角色已创建，天赋技能已激活！&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">hero </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> GameCharacter()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">角色已创建，天赋技能已激活！</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>例子二：</p><p>就像我们人类在一诞生的时候，没人教我们怎么呼吸、怎么让心脏跳动——这些能力是与生俱来的，是“出生那一刻就自动开始执行”的。Python 中的 <strong>init</strong> 方法（函数），就像“呼吸”和“心跳”一样。当我们创建一个新的对象（生命、实例化）时，它会自动执行，不需要我们手动去调用。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Human</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;一个新生命诞生了，正在自动启动呼吸和心跳系统。&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">baby </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Human()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">一个新生命诞生了，正在自动启动呼吸和心跳系统。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-move-self-函数" tabindex="-1"><a class="header-anchor" href="#_2-3-move-self-函数"><span>2.3 <code>move(self)</code> 函数</span></a></h3><p><code>move(self)</code> 函数就是和我们前面将的基本函数的意思、功能是一样的。</p><p>只不过这里面是属于类里面的功能函数。</p><h3 id="_2-4-类当中的-self" tabindex="-1"><a class="header-anchor" href="#_2-4-类当中的-self"><span>2.4 类当中的 self</span></a></h3><h4 id="_2-4-1-非正式讲解1" tabindex="-1"><a class="header-anchor" href="#_2-4-1-非正式讲解1"><span>2.4.1 非正式讲解1</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Animal</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.x </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> move</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.x </span><span style="color:#F92672;">=</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.x </span><span style="color:#F92672;">+</span><span style="color:#AE81FF;"> 10</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">dog </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Animal()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> user_input </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;move&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">    dog.move()</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;Dog position:&#39;</span><span style="color:#F8F8F2;">, dog.x)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>self</code> 指的是本身，在 <code>Animal()</code> 内部，指的就是 <code>Animal()</code> ，当把 <code>Animal()</code> 赋值给 <code>dog</code> 时，<code>dog = Animal = self</code> 。</p><p>因此：</p><ul><li><code>self.x</code> → <code>Animal().x </code> → <code>dog.x</code> ，这也就解释了 <code>dog.x</code> 可以作为一个变量输出。</li><li>要调用 <code>Animal()</code> 里的函数，是 <code>Animal().move()</code> ，又因为上述的等价原因， <code>Animal().move()</code> = <code>dog.move()</code> 。</li><li>类里面的每个函数都要加上 <code>self</code> ，代表都属于类的一员，如同家族的族徽，代表都属于家族的一员。</li><li>有了 <code>self</code> 这个族徽，意味着家族的资源都可以互相使用。例如：家族的百万棋盘，所有家族成员都可以直接使用，如果不是同一家族的就得看情况了。所以当类里面存在变量，包括各个函数的变量，如果在变量的前面加上 <code>self(self.x)</code> ，则在类中，所有函数都可以随时调用变量 <code>self.x</code> ，在函数内外都可以访问。</li></ul><p>注意：</p><ul><li>在常规函数中，每个函数都是独立的。函数和函数之间的变量，不能互相调用，除非使用全局变量 <code>global</code> 来解决。</li><li>在类中的函数同理，也是独立的，函数与函数之间的变量依然不能直接共有，需要借助 <code>self</code> 来实现类里面的函数变量共用。</li></ul><p>这里给出一个类中没有使用 <code>self</code> 创建变量，导致无法相互调用的例子：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Demo</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> function1</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F8F8F2;">        string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &#39;Hello World&#39;</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(string)</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> function2</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(string)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">demo </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Demo()</span></span>
<span class="line"><span style="color:#F8F8F2;">demo.function1()</span></span>
<span class="line"><span style="color:#F8F8F2;">demo.function2()     </span><span style="color:#88846F;"># 此处会报错 name &#39;string&#39; is not defined</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上述代码加上 <code>self</code> 就可以了：</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Demo</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> function1</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &#39;Hello World&#39;</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.string)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> function2</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.string)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">demo </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Demo()</span></span>
<span class="line"><span style="color:#F8F8F2;">demo.function1()</span></span>
<span class="line"><span style="color:#F8F8F2;">demo.function2()  </span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">Hello World</span></span>
<span class="line"><span style="color:#F8F8F2;">Hello World</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h4 id="_2-4-2-非正式讲解2" tabindex="-1"><a class="header-anchor" href="#_2-4-2-非正式讲解2"><span>2.4.2 非正式讲解2</span></a></h4><figure><img src="`+m+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>**注意： **</p><p><strong>在类里面的函数，第一个参数都必须写 <code>self</code> !</strong></p><h4 id="_2-4-3-正式讲解-什么是-self" tabindex="-1"><a class="header-anchor" href="#_2-4-3-正式讲解-什么是-self"><span>2.4.3 正式讲解：什么是 self ？</span></a></h4><figure><img src="'+b+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_2-4-4-self-存在的意义" tabindex="-1"><a class="header-anchor" href="#_2-4-4-self-存在的意义"><span>2.4.4 self 存在的意义</span></a></h4><ul><li>原因一：代表自己</li><li>原因二：资源共享，没有 self 不能实现资源共享。</li></ul><p>以下代码可以看出，dog 和 self 实际为同一个变量：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Animal</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.x </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;self address: </span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">dog </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Animal()</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;dog address: </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">dog</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;"> address: </span><span style="color:#F92672;">&lt;</span><span style="color:#F8F8F2;">__main__.Animal </span><span style="color:#66D9EF;font-style:italic;">object</span><span style="color:#F8F8F2;"> at </span><span style="color:#66D9EF;font-style:italic;">0x</span><span style="color:#AE81FF;">000001FB0AC48F40</span><span style="color:#F92672;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">dog address: </span><span style="color:#F92672;">&lt;</span><span style="color:#F8F8F2;">__main__.Animal </span><span style="color:#66D9EF;font-style:italic;">object</span><span style="color:#F8F8F2;"> at </span><span style="color:#66D9EF;font-style:italic;">0x</span><span style="color:#AE81FF;">000001FB0AC48F40</span><span style="color:#F92672;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-5-init-初始化参数" tabindex="-1"><a class="header-anchor" href="#_2-5-init-初始化参数"><span>2.5 <code>_ _init_ _</code> 初始化参数</span></a></h3><h4 id="_2-5-1背景" tabindex="-1"><a class="header-anchor" href="#_2-5-1背景"><span>2.5.1背景</span></a></h4><p>类似宝宝出生前想名字</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Baby</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">name</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#E6DB74;">        &quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#E6DB74;">        初始化宝宝对象时，必须提供名字，</span></span>
<span class="line"><span style="color:#E6DB74;">        就像是大人提前为宝宝取好名字，并在必要时办理出生证明。</span></span>
<span class="line"><span style="color:#E6DB74;">        &quot;&quot;&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.name </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> name    </span><span style="color:#88846F;"># 宝宝的名字，相当于出生证明中的名字</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> introduce</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#E6DB74;">        &quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#E6DB74;">        宝宝的自我介绍，展示初始化时设置的属性</span></span>
<span class="line"><span style="color:#E6DB74;">        &quot;&quot;&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;大家好，我叫</span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 宝宝出生前，大人为其取好了名字</span></span>
<span class="line"><span style="color:#F8F8F2;">baby1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Baby(</span><span style="color:#FD971F;font-style:italic;">name</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;">&#39;棠棠&#39;</span><span style="color:#F8F8F2;">)    </span><span style="color:#88846F;"># 实例化</span></span>
<span class="line"><span style="color:#F8F8F2;">baby1.introduce()           </span><span style="color:#88846F;"># 输出介绍</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">大家好，我叫棠棠</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p><code>_ _init_ _</code> 函数的所有参数，全部在类的实例化时传入。即上述代码中的 <code>baby1 = Baby(name=&#39;棠棠&#39;) </code> 。</p><h4 id="_2-5-2-为什么要写-self-xxx-xxx-背后发生了什么" tabindex="-1"><a class="header-anchor" href="#_2-5-2-为什么要写-self-xxx-xxx-背后发生了什么"><span>2.5.2 为什么要写 <code>self.XXX = XXX</code> ？背后发生了什么？</span></a></h4><p>问题一：为什么传进参数 name，还要把 name 赋值给 <a href="http://self.name" target="_blank" rel="noopener noreferrer">self.name</a></p><p>问题二：为什么不直接 name = name ，还要用 self</p><p>问题三：为什么“点”后面的变量名称和参数同名，不同名可以吗？</p><p>回答一：从外面引入一个参数，需要找到一个地方存放，所以需要使用 <code>self.name = name</code> 进行存放。</p><p>回答二：并且，这个函数需要在类内的函数间共用，因此需要一个地方来存放这个共用的函数，并且加上 self 使其能共用</p><p>回答三：叫其他变量名可以，但是本身变量名是“见名知意”，且指代的是同一个东西，因此不需要再想一个合适的变量名。示例如下：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Baby</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">name</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.name </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> name</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.username </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> name</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;init name: </span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">, username: </span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.username</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span></span>
<span class="line"><span style="color:#F8F8F2;">baby1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Baby(</span><span style="color:#E6DB74;">&#39;棠棠&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">init name: 棠棠, username: 棠棠</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>小结：</p><figure><img src="`+E+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+D+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_2-5-3-参数设定后必须传入" tabindex="-1"><a class="header-anchor" href="#_2-5-3-参数设定后必须传入"><span>2.5.3 参数设定后必须传入</span></a></h4><p>在初始化时，如果设定了参数，那么将类实例化时必须将该参数传入，否则会报错。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Baby</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">name</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.name </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> name</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.username </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> name</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;init name: </span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">, username: </span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.username</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">baby1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Baby()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">TypeError</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;">__init__</span><span style="color:#F8F8F2;">() missing </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;"> required positional argument: </span><span style="color:#E6DB74;">&#39;name&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-5-4-传入多个参数" tabindex="-1"><a class="header-anchor" href="#_2-5-4-传入多个参数"><span>2.5.4 传入多个参数</span></a></h4><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Baby</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">name</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">gender</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.name </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> name</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.gender </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> gender</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> introduce</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;大家好，我叫 </span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">, 我是一个</span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.gender</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">宝宝。&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">baby1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Baby(</span><span style="color:#FD971F;font-style:italic;">name</span><span style="color:#F92672;"> =</span><span style="color:#E6DB74;"> &#39;棠棠&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">gender</span><span style="color:#F92672;"> =</span><span style="color:#E6DB74;"> &#39;女&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">baby1.introduce()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">baby2 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Baby(</span><span style="color:#E6DB74;">&#39;锦奕&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;男&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">baby2.introduce()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">大家好，我叫 棠棠, 我是一个女宝宝。</span></span>
<span class="line"><span style="color:#F8F8F2;">大家好，我叫 锦奕, 我是一个男宝宝。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h4 id="_2-5-5-设置默认值" tabindex="-1"><a class="header-anchor" href="#_2-5-5-设置默认值"><span>2.5.5 设置默认值</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Baby</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">name</span><span style="color:#F92672;"> =</span><span style="color:#E6DB74;"> &#39;小悦&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">gender</span><span style="color:#F92672;"> =</span><span style="color:#E6DB74;"> &#39;男&#39;</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;大家好，我叫</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">, 我是一个</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">gender</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">宝宝。&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">baby1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Baby()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">大家好，我叫小悦, 我是一个男宝宝。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>设置默认值的要求和函数一样，一旦设置了默认值，后面就必须都设置默认值，否则会报错。</p><p>默认值也可以设置为 <code>None</code> ，具体如何设置要看使用需求。</p><p>上述代码可以进一步优化：</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Baby</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">name</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">gender</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> None</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.name </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> name</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.gender </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> gender</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> introduce</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.gender:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;大家好，我叫</span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">，是一个</span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.gender</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">宝宝。&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">        else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;大家好，我叫</span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">，性别待定。&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">baby1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Baby(</span><span style="color:#FD971F;font-style:italic;">name</span><span style="color:#F92672;"> =</span><span style="color:#E6DB74;"> &#39;棠棠&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">gender</span><span style="color:#F92672;"> =</span><span style="color:#E6DB74;"> &#39;女&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">baby1.introduce()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">baby2 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Baby(</span><span style="color:#E6DB74;">&#39;锦奕&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;男&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">baby2.introduce()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">baby3 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Baby(</span><span style="color:#FD971F;font-style:italic;">name</span><span style="color:#F92672;"> =</span><span style="color:#E6DB74;"> &#39;宝宝&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">baby3.introduce()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">大家好，我叫棠棠，是一个女宝宝。</span></span>
<span class="line"><span style="color:#F8F8F2;">大家好，我叫锦奕，是一个男宝宝。</span></span>
<span class="line"><span style="color:#F8F8F2;">大家好，我叫宝宝，性别待定。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_2-6-类实例化时-指定传参和位置传参" tabindex="-1"><a class="header-anchor" href="#_2-6-类实例化时-指定传参和位置传参"><span>2.6 类实例化时：指定传参和位置传参</span></a></h3><p>类的传入的三种原则：</p><ol><li><p>全部不指定参数</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">baby1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Baby(</span><span style="color:#E6DB74;">&#39;棠棠&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;女&#39;</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>全部指定参数</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">baby1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Baby(</span><span style="color:#FD971F;font-style:italic;">name</span><span style="color:#F92672;"> =</span><span style="color:#E6DB74;"> &#39;棠棠&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">gender</span><span style="color:#F92672;"> =</span><span style="color:#E6DB74;"> &#39;女&#39;</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>部分指定参数，只能从前面不指定，一旦开始指定，后续参数都要指定，否则会报错。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">baby1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Baby(</span><span style="color:#E6DB74;">&#39;棠棠&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">gender</span><span style="color:#F92672;"> =</span><span style="color:#E6DB74;"> &#39;女&#39;</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>下述情况会报错：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">baby1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Baby(</span><span style="color:#FD971F;font-style:italic;">name</span><span style="color:#F92672;"> =</span><span style="color:#E6DB74;"> &#39;棠棠&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;女&#39;</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>参数也可以通过变量传递进去</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">name </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Enter your name: &quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">gender </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Enter your gender: &quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">age </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Enter your age: &quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">weight </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Enter your weight: &quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">baby1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Baby(name, gender, age, weight)</span></span>
<span class="line"><span style="color:#F8F8F2;">baby2 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Baby(</span><span style="color:#FD971F;font-style:italic;">name</span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;">name, </span><span style="color:#FD971F;font-style:italic;">gender</span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;">gender, </span><span style="color:#FD971F;font-style:italic;">age</span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;">age, </span><span style="color:#FD971F;font-style:italic;">weight</span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;">weight)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>baby2 里面，<code>=</code> 左面是类内包含的变量名，<code>=</code> 右面是作为变量名，通过指定的方式传入到里面，两者长的一样，其实是不同的。</p></li></ol><h2 id="_3-小试牛刀" tabindex="-1"><a class="header-anchor" href="#_3-小试牛刀"><span>3. 小试牛刀</span></a></h2><h3 id="_3-1-宠物管理系统" tabindex="-1"><a class="header-anchor" href="#_3-1-宠物管理系统"><span>3.1 宠物管理系统</span></a></h3><p><strong>题目要求：</strong> 请你用面向对象的方式编写一个宠物管理系统的雏形，完成以下功能：</p><ol><li><strong>创建一个类 <code>Pet</code></strong><ul><li>属性： <ul><li><code>name</code>（宠物名字，字符串）</li><li><code>age</code>（宠物年龄，整数）</li><li><code>species</code>（宠物种类，字符串，比如“狗”、“猫”）</li></ul></li><li>方法： <ul><li><code>show_info()</code>：打印宠物的基本信息（格式自定义）。</li><li><code>birthday()</code>：宠物过生日，年龄加 1，并打印“xxx 过生日啦，现在 xxx 岁了！”</li></ul></li></ul></li><li><strong>编写主程序</strong><ul><li>创建 2 个不同的宠物对象（属性不同）</li><li>分别调用 <code>show_info()</code> 方法展示它们的基本信息</li><li>给其中一个宠物调用一次 <code>birthday()</code> 方法，并再次展示它的信息</li></ul></li></ol><p>运行示例（仅供参考）：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">小白 这只狗今年 </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;"> 岁。</span></span>
<span class="line"><span style="color:#F8F8F2;">小黑 这只猫今年 </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;"> 岁。</span></span>
<span class="line"><span style="color:#F8F8F2;">小白 过生日啦，现在 </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;"> 岁了！</span></span>
<span class="line"><span style="color:#F8F8F2;">小白 这只狗今年 </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;"> 岁。</span></span>
<span class="line"><span style="color:#F8F8F2;">小黑 这只猫今年 </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;"> 岁。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>回答：</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Pet</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">,</span><span style="color:#FD971F;font-style:italic;">name</span><span style="color:#F8F8F2;">,</span><span style="color:#FD971F;font-style:italic;">age</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">species</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.name </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> name</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.age </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> age</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.species </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> species</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> show_info</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;Pet Info: 姓名: </span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">, 年龄: </span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.age</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">, 种族: </span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.species</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> birthday</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.age </span><span style="color:#F92672;">+=</span><span style="color:#AE81FF;"> 1</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">过生日啦！今年</span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.age</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">岁了~&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">cat </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Pet(</span><span style="color:#E6DB74;">&#39;阿尔法&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">6</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;cat&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">cat.show_info()</span></span>
<span class="line"><span style="color:#F8F8F2;">cat.birthday()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">dog </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Pet(</span><span style="color:#E6DB74;">&#39;半斤&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;dog&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">dog.show_info()</span></span>
<span class="line"><span style="color:#F8F8F2;">dog.birthday()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">Pet Info: 姓名: 阿尔法, 年龄: </span><span style="color:#AE81FF;">6</span><span style="color:#F8F8F2;">, 种族: cat</span></span>
<span class="line"><span style="color:#F8F8F2;">阿尔法过生日啦！今年7岁了</span><span style="color:#F92672;">~</span></span>
<span class="line"><span style="color:#F8F8F2;">Pet Info: 姓名: 半斤, 年龄: </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, 种族: dog</span></span>
<span class="line"><span style="color:#F8F8F2;">半斤过生日啦！今年2岁了</span><span style="color:#F92672;">~</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><hr><h3 id="_3-2-银行账户管理系统" tabindex="-1"><a class="header-anchor" href="#_3-2-银行账户管理系统"><span>3.2 银行账户管理系统</span></a></h3><p><strong>题目要求：</strong> 请你使用面向对象的方式，设计一个简单的银行账户类，完成以下功能：</p><ol><li><strong>创建一个类 <code>BankAccount</code></strong><ul><li>属性： <ul><li><code>owner</code>（账户持有人姓名，字符串）</li><li><code>balance</code>（账户余额，浮点数，默认 0）</li></ul></li><li>方法： <ul><li><code>show_balance()</code>：打印当前账户余额。</li><li><code>deposit(amount)</code>：存钱到账户，金额必须大于 0，否则提示“存款金额必须大于 0”。</li><li><code>withdraw(amount)</code>：取钱，金额必须大于 0 且不能超过当前余额，否则提示“余额不足或金额无效”。</li></ul></li></ul></li><li><strong>主程序</strong><ul><li>创建一个账户对象（姓名自定义，初始余额可以为 0）。</li><li>进行一次存款操作（金额自定义）。</li><li>进行一次取款操作（金额自定义）。</li><li>最后显示账户余额。</li></ul></li></ol><p>运行示例（仅供参考）：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-"><span class="line"><span>账户持有人：张三</span></span>
<span class="line"><span>当前余额：￥0.0</span></span>
<span class="line"><span>存入 ￥1000.0 成功！</span></span>
<span class="line"><span>当前余额：￥1000.0</span></span>
<span class="line"><span>取出 ￥500.0 成功！</span></span>
<span class="line"><span>当前余额：￥500.0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>回答：</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">BankAccount</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">name</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">balance</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 0.00</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.name </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> name</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.balance </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> balance</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> show_balance</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">的账户当前余额为</span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.balance</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">。&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> deposit</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">amount</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> amount </span><span style="color:#F92672;">&lt;=</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;存款金额必须大于0&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">        else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#FD971F;">            self</span><span style="color:#F8F8F2;">.balance </span><span style="color:#F92672;">+=</span><span style="color:#F8F8F2;"> amount</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">的账户已存入</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">amount</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">元，当前余额</span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.balance</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">元。&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> withdraw</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">amount</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> amount </span><span style="color:#F92672;">&gt;</span><span style="color:#AE81FF;">0</span><span style="color:#F92672;"> and</span><span style="color:#F8F8F2;"> amount </span><span style="color:#F92672;">&lt;=</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.balance:                 </span><span style="color:#88846F;"># 可以写成 0&lt;amount&lt;=self.balance</span></span>
<span class="line"><span style="color:#FD971F;">            self</span><span style="color:#F8F8F2;">.balance </span><span style="color:#F92672;">-=</span><span style="color:#F8F8F2;"> amount</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">的账户取出</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">amount</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">元，当前余额</span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.balance</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">元。&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">        else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;余额不足或取款金额无效&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"> # 创建张三的账户</span></span>
<span class="line"><span style="color:#F8F8F2;">Zhangsan </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> BankAccount(</span><span style="color:#E6DB74;">&#39;张三&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">Zhangsan.show_balance()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 存入1000元</span></span>
<span class="line"><span style="color:#F8F8F2;">Zhangsan.deposit(</span><span style="color:#AE81FF;">1000</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 取出100元</span></span>
<span class="line"><span style="color:#F8F8F2;">Zhangsan.withdraw(</span><span style="color:#AE81FF;">100</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 显示最后余额</span></span>
<span class="line"><span style="color:#F8F8F2;">Zhangsan.show_balance()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">张三的账户当前余额为0.0。</span></span>
<span class="line"><span style="color:#F8F8F2;">张三的账户已存入1000元，当前余额1000.0元。</span></span>
<span class="line"><span style="color:#F8F8F2;">张三的账户取出100元，当前余额900.0元。</span></span>
<span class="line"><span style="color:#F8F8F2;">张三的账户当前余额为900.0。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_3-3-题目-交互式银行账户系统-扩展版" tabindex="-1"><a class="header-anchor" href="#_3-3-题目-交互式银行账户系统-扩展版"><span>3.3 题目：交互式银行账户系统（扩展版）</span></a></h3><p><strong>题目要求：</strong> 在上一个 <code>BankAccount</code> 类的基础上，编写一个<strong>交互式控制台程序</strong>，让用户可以自己输入指令完成存款、取款、查看余额、退出系统等操作。</p><ol><li><p><strong>类 <code>BankAccount</code></strong>（和之前基本一样）：</p><ul><li><code>owner</code>（账户持有人姓名）</li><li><code>balance</code>（账户余额，默认 0）</li><li><code>show_balance()</code>：显示余额</li><li><code>deposit(amount)</code>：存款</li><li><code>withdraw(amount)</code>：取款</li></ul></li><li><p><strong>主程序交互功能</strong>：</p><ul><li><p>用户输入账户持有人姓名（创建账户）</p></li><li><p>进入循环菜单：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-"><span class="line"><span>请选择操作：</span></span>
<span class="line"><span>1. 存款</span></span>
<span class="line"><span>2. 取款</span></span>
<span class="line"><span>3. 查看余额</span></span>
<span class="line"><span>4. 退出</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>根据用户输入的选项执行对应功能</p></li><li><p>用户输入 <code>4</code> 时退出系统</p></li></ul></li><li><p><strong>运行示例（参考）：</strong></p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">请输入账户持有人姓名：张三</span></span>
<span class="line"><span style="color:#F8F8F2;">账户已创建，当前余额为 ￥</span><span style="color:#AE81FF;">0.0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">请选择操作：</span></span>
<span class="line"><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">. 存款</span></span>
<span class="line"><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">. 取款</span></span>
<span class="line"><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">. 查看余额</span></span>
<span class="line"><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">. 退出</span></span>
<span class="line"><span style="color:#F8F8F2;">请输入选项：</span><span style="color:#AE81FF;">1</span></span>
<span class="line"><span style="color:#F8F8F2;">请输入存款金额：</span><span style="color:#AE81FF;">1000</span></span>
<span class="line"><span style="color:#F8F8F2;">存入 ￥</span><span style="color:#AE81FF;">1000.0</span><span style="color:#F8F8F2;"> 成功！</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">请选择操作：</span></span>
<span class="line"><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">. 存款</span></span>
<span class="line"><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">. 取款</span></span>
<span class="line"><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">. 查看余额</span></span>
<span class="line"><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">. 退出</span></span>
<span class="line"><span style="color:#F8F8F2;">请输入选项：</span><span style="color:#AE81FF;">3</span></span>
<span class="line"><span style="color:#F8F8F2;">账户持有人：张三</span></span>
<span class="line"><span style="color:#F8F8F2;">当前余额：￥</span><span style="color:#AE81FF;">1000.0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div></li></ol><p>回答：</p><p>版本一：</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">BankAccount</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">name</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">balance</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 0.00</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.name </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> name</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.balance </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> balance</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> show_balance</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">的账户当前余额为</span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.balance</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">。&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> deposit</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">amount</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> amount </span><span style="color:#F92672;">&lt;=</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;存款金额必须大于0&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">        else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#FD971F;">            self</span><span style="color:#F8F8F2;">.balance </span><span style="color:#F92672;">+=</span><span style="color:#F8F8F2;"> amount</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">的账户已存入</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">amount</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">元，当前余额</span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.balance</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">元。&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> withdraw</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">amount</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> amount </span><span style="color:#F92672;">&gt;</span><span style="color:#AE81FF;">0</span><span style="color:#F92672;"> and</span><span style="color:#F8F8F2;"> amount </span><span style="color:#F92672;">&lt;=</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.balance:                 </span><span style="color:#88846F;"># 可以写成 0&lt;amount&lt;=self.balance</span></span>
<span class="line"><span style="color:#FD971F;">            self</span><span style="color:#F8F8F2;">.balance </span><span style="color:#F92672;">-=</span><span style="color:#F8F8F2;"> amount</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">的账户取出</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">amount</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">元，当前余额</span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.balance</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">元。&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">        else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;余额不足或取款金额无效&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 创建账户</span></span>
<span class="line"><span style="color:#F8F8F2;">name_input </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;请输入账户姓名：&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">while</span><span style="color:#F8F8F2;"> name_input </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;张三&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">    account1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> BankAccount(name_input)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">    # 显示提示语</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;请选择操作：&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;1. 存款&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;2. 取款&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;3. 查看余额&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;4. 退出&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">    # 获得用户指令</span></span>
<span class="line"><span style="color:#F8F8F2;">    choice </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;请输入选项：&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> choice </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;1&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">        amount </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> float</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;请输入存款金额：&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F8F8F2;">        account1.deposit(amount)</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> choice </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;2&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">        amount </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> float</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;请输入取款金额：&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F8F8F2;">        account1.withdraw(amount)</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> choice </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;3&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">        account1.show_balance()</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> choice </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;4&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F92672;">        del</span><span style="color:#F8F8F2;"> account1</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;账户已退出。&#39;</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>问题：存款后信息无法保留</p><p>原因：存款之后，因为是 <code>while</code> 循环，所以又回到了 <code>line 26</code> 那里重新创建账户，所以改动无法留存。</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">BankAccount</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">name</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">balance</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 0.00</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.name </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> name</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.balance </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> balance</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> show_balance</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">的账户当前余额为</span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.balance</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">。&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> deposit</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">amount</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> amount </span><span style="color:#F92672;">&lt;=</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;存款金额必须大于0&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">        else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#FD971F;">            self</span><span style="color:#F8F8F2;">.balance </span><span style="color:#F92672;">+=</span><span style="color:#F8F8F2;"> amount</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">的账户已存入</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">amount</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">元，当前余额</span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.balance</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">元。&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> withdraw</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">amount</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> amount </span><span style="color:#F92672;">&gt;</span><span style="color:#AE81FF;">0</span><span style="color:#F92672;"> and</span><span style="color:#F8F8F2;"> amount </span><span style="color:#F92672;">&lt;=</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.balance:                 </span><span style="color:#88846F;"># 可以写成 0&lt;amount&lt;=self.balance</span></span>
<span class="line"><span style="color:#FD971F;">            self</span><span style="color:#F8F8F2;">.balance </span><span style="color:#F92672;">-=</span><span style="color:#F8F8F2;"> amount</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">的账户取出</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">amount</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">元，当前余额</span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.balance</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">元。&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">        else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;余额不足或取款金额无效&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 创建账户</span></span>
<span class="line"><span style="color:#F8F8F2;">name_input </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;请输入账户姓名：&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">account1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> BankAccount(name_input)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">while</span><span style="color:#F8F8F2;"> name_input:</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">    # 显示提示语</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;请选择操作：&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;1. 存款&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;2. 取款&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;3. 查看余额&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;4. 退出&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#88846F;"># 获得用户指令</span></span>
<span class="line"><span style="color:#F8F8F2;">    choice </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;请输入选项：&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> choice </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;1&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">        amount </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> float</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;请输入存款金额：&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F8F8F2;">        account1.deposit(amount)</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> choice </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;2&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">        amount </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> float</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;请输入取款金额：&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F8F8F2;">        account1.withdraw(amount)</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> choice </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;3&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">        account1.show_balance()</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> choice </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;4&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;账户已退出。&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        name_input </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> False</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">请输入账户姓名：张三</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">请选择操作：</span></span>
<span class="line"><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">. 存款</span></span>
<span class="line"><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">. 取款</span></span>
<span class="line"><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">. 查看余额</span></span>
<span class="line"><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">. 退出</span></span>
<span class="line"><span style="color:#F8F8F2;">请输入选项：</span><span style="color:#AE81FF;">1</span></span>
<span class="line"><span style="color:#F8F8F2;">请输入存款金额：</span><span style="color:#AE81FF;">1000</span></span>
<span class="line"><span style="color:#F8F8F2;">张三的账户已存入1000.0元，当前余额1000.0元。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">请选择操作：</span></span>
<span class="line"><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">. 存款</span></span>
<span class="line"><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">. 取款</span></span>
<span class="line"><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">. 查看余额</span></span>
<span class="line"><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">. 退出</span></span>
<span class="line"><span style="color:#F8F8F2;">请输入选项：</span><span style="color:#AE81FF;">2</span></span>
<span class="line"><span style="color:#F8F8F2;">请输入取款金额：</span><span style="color:#AE81FF;">100</span></span>
<span class="line"><span style="color:#F8F8F2;">张三的账户取出100.0元，当前余额900.0元。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">请选择操作：</span></span>
<span class="line"><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">. 存款</span></span>
<span class="line"><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">. 取款</span></span>
<span class="line"><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">. 查看余额</span></span>
<span class="line"><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">. 退出</span></span>
<span class="line"><span style="color:#F8F8F2;">请输入选项：</span><span style="color:#AE81FF;">3</span></span>
<span class="line"><span style="color:#F8F8F2;">张三的账户当前余额为900.0。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">请选择操作：</span></span>
<span class="line"><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">. 存款</span></span>
<span class="line"><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">. 取款</span></span>
<span class="line"><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">. 查看余额</span></span>
<span class="line"><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">. 退出</span></span>
<span class="line"><span style="color:#F8F8F2;">请输入选项：</span><span style="color:#AE81FF;">4</span></span>
<span class="line"><span style="color:#F8F8F2;">账户已退出。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>优化：将多个 <code>if</code> 连用改成 <code>elif</code> ，节省判断次数，因为多个 <code>if</code> 需要每个都判断一下，但是 <code>elif</code> 判断成立后，后面的就不会再执行了。</p><p>其他方法：</p><p>可以用 <code>while True</code> 和 <code>break</code> 搭配结束循环。</p><h2 id="_4-类里面的函数传入参数" tabindex="-1"><a class="header-anchor" href="#_4-类里面的函数传入参数"><span>4. 类里面的函数传入参数</span></a></h2><ol><li>传入一个参数</li></ol><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Dog</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">name</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.name </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> name</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> bark</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">times</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">汪 &#39;</span><span style="color:#F92672;"> *</span><span style="color:#F8F8F2;"> times)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">my_dog </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Dog(</span><span style="color:#E6DB74;">&#39;小黑&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">my_dog.bark(</span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">小黑汪 小黑汪 小黑汪</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>传入多个参数</li></ol><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Dog</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">name</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.name </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> name</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> bark</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">times</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">newline</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F92672;">        for</span><span style="color:#F8F8F2;"> _ </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;"> range</span><span style="color:#F8F8F2;">(times):</span></span>
<span class="line"><span style="color:#F92672;">            if</span><span style="color:#F8F8F2;"> newline:</span></span>
<span class="line"><span style="color:#66D9EF;">                print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> 汪&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">            else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">                print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> 汪 &#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">end</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;">&#39; &#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">my_dog </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Dog(</span><span style="color:#E6DB74;">&#39;小黑&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 调用 bark 函数，传入两个函数，叫3次，并每次换行</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;每次换行：&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">my_dog.bark(</span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">True</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 叫3次，不换行</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">\\n</span><span style="color:#E6DB74;">不换行： &#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">my_dog.bark(</span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">False</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">每次换行：</span></span>
<span class="line"><span style="color:#F8F8F2;">小黑 汪</span></span>
<span class="line"><span style="color:#F8F8F2;">小黑 汪</span></span>
<span class="line"><span style="color:#F8F8F2;">小黑 汪</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">不换行： </span></span>
<span class="line"><span style="color:#F8F8F2;">小黑 汪  小黑 汪  小黑 汪</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h2 id="_5-通过实例化对象改属性值" tabindex="-1"><a class="header-anchor" href="#_5-通过实例化对象改属性值"><span>5. 通过实例化对象改属性值</span></a></h2><p>修改前的信息：</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Person</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">name</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">gender</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> None</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">age</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> None</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">weight</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> None</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.name </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> name</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.gender </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> gender</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.age </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> age</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.weight </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> weight</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> introduce</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F8F8F2;">        intro </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> f</span><span style="color:#E6DB74;">&#39;大家好， 我叫 </span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">。&#39;</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.gender:</span></span>
<span class="line"><span style="color:#F92672;">            if</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.gender </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;男&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">                intro </span><span style="color:#F92672;">+=</span><span style="color:#E6DB74;"> &#39;我是一个男孩。&#39;</span></span>
<span class="line"><span style="color:#F92672;">            else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">                intro </span><span style="color:#F92672;">+=</span><span style="color:#E6DB74;"> &#39;我是一个女孩。&#39;</span></span>
<span class="line"><span style="color:#F92672;">        else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">            intro </span><span style="color:#F92672;">+=</span><span style="color:#E6DB74;"> &#39;我的性别暂时保密哦~&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">            </span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.age:</span></span>
<span class="line"><span style="color:#F8F8F2;">            intro </span><span style="color:#F92672;">+=</span><span style="color:#66D9EF;font-style:italic;"> f</span><span style="color:#E6DB74;">&#39;我今年</span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.age</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">岁了。&#39;</span></span>
<span class="line"><span style="color:#F92672;">        else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">            intro </span><span style="color:#F92672;">+=</span><span style="color:#E6DB74;"> &#39;我的年龄保密~&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(intro)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">person1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Person(</span><span style="color:#FD971F;font-style:italic;">name</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &#39;Bornforthis&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">gender</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &#39;男&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">age</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 28</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">weight</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 75</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">person1.introduce()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">大家好， 我叫 Bornforthis。我是一个男孩。我今年28岁了。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>修改：</p><p>通过直接变量赋值就可修改，如 <code>person1.weight = 80</code> 。</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> intro   </span><span style="color:#88846F;"># 上面函数不用 print 改成 return</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">person1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Person(</span><span style="color:#FD971F;font-style:italic;">name</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &#39;Bornforthis&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">gender</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &#39;男&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">age</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 28</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">weight</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 75</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">person1.introduce()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(person1.name, person1.gender, person1.age, person1.weight)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;修改前：</span><span style="color:#AE81FF;">{}</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">.format(person1.introduce()))</span></span>
<span class="line"><span style="color:#F8F8F2;">person1.name </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &#39;AI创悦&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">person1.weight </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 80</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;修改后：</span><span style="color:#AE81FF;">{}</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">.format(person1.introduce()))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">Bornforthis 男 </span><span style="color:#AE81FF;">28</span><span style="color:#AE81FF;"> 75</span></span>
<span class="line"><span style="color:#F8F8F2;">修改前：大家好， 我叫 Bornforthis。我是一个男孩。我今年28岁了。 我的体重是 </span><span style="color:#AE81FF;">75</span><span style="color:#F8F8F2;"> 千克。</span></span>
<span class="line"><span style="color:#F8F8F2;">修改后：大家好， 我叫 AI创悦。我是一个男孩。我今年28岁了。 我的体重是 </span><span style="color:#AE81FF;">80</span><span style="color:#F8F8F2;"> 千克。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h2 id="_6-类的私有属性" tabindex="-1"><a class="header-anchor" href="#_6-类的私有属性"><span>6. 类的私有属性</span></a></h2><p>why 私有？例如手机密码，面部识别等，只有自己才能访问这些信息。同样，python 的类中，需要保护一些内部数据，不希望从外部就能轻易访问和修改，此时就会用到<strong>私有属性</strong>。</p><h3 id="_6-1-什么是私有属性" tabindex="-1"><a class="header-anchor" href="#_6-1-什么是私有属性"><span>6.1 什么是私有属性？</span></a></h3><p>在 Python 中，以双下划线（<code>__</code> ）开头的属性为私有属性，保护类内部的重要数据。我们不是希望别人完全访问不到这些数据，而是希望别人通过类的方法来间接的访问或修改这些数据，这样就能在方法中进行额外的逻辑控制，比如检查输入是否正确、访问记录日志等。</p><h3 id="_6-2-现实举例-手机密码与解锁" tabindex="-1"><a class="header-anchor" href="#_6-2-现实举例-手机密码与解锁"><span>6.2 现实举例：手机密码与解锁</span></a></h3><p>代码提示：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#88846F;"># 创建一个手机对象，设置密码为：&#39;123456&#39;，私密数据为：我的秘密照片和聊天记录</span></span>
<span class="line"><span style="color:#F8F8F2;">my_phone </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Phone(</span><span style="color:#E6DB74;">&quot;123456&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;我的秘密照片和聊天记录&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 我尝试直接访问数据，结果会失败（不能直接访问私有属性）</span></span>
<span class="line"><span style="color:#88846F;"># print(my_phone.__data)  # 错误！无法访问，报错：AttributeError: &#39;Phone&#39; object has no attribute &#39;__data&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 正确的访问方法：使用类提供的方法（函数）进行调用私有属性的值</span></span>
<span class="line"><span style="color:#F8F8F2;">data </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> my_phone.unlock(</span><span style="color:#E6DB74;">&quot;123456&quot;</span><span style="color:#F8F8F2;">)  </span><span style="color:#88846F;"># 输入正确的密码</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;手机中的数据是：&quot;</span><span style="color:#F8F8F2;">, data)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">data </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> my_phone.unlock(</span><span style="color:#E6DB74;">&quot;wrong_password&quot;</span><span style="color:#F8F8F2;">)  </span><span style="color:#88846F;"># 输入错误的密码</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;手机中的数据是：&quot;</span><span style="color:#F8F8F2;">, data)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>个人代码：</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Phone</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">password</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">data</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.__password </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> password</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.__data </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> data</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> unlock</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">password</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> password </span><span style="color:#F92672;">==</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.__password:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;手机中的数据是：</span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.__data</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">        else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;密码输入错误，请重新输入！&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">my_phone </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Phone(</span><span style="color:#E6DB74;">&quot;123456&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;我的秘密照片和聊天记录&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(my_phone.__data)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">my_phone.unlock(</span><span style="color:#E6DB74;">&quot;123456&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">my_phone.unlock(</span><span style="color:#E6DB74;">&quot;wrong_password&quot;</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>修改优化：</p><ul><li>代码中更适合用 return ，而非 print，print 只是把内容显示出来而已。</li></ul><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Phone</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">password</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">data</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.__password </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> password          </span><span style="color:#88846F;"># 私有属性，不能直接访问</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.__data </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> data                  </span><span style="color:#88846F;"># 私有属性，保护数据</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> unlock</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">password</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#88846F;">        # 通过 unlock 的方法访问私有数据，进行逻辑控制</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> password </span><span style="color:#F92672;">==</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.__password:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;密码正确，手机已解锁！&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">            return</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.__data                   </span><span style="color:#88846F;"># return 返回私密数据</span></span>
<span class="line"><span style="color:#F92672;">        else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;密码输入错误，请重新输入！&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">            return</span><span style="color:#AE81FF;"> None</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 创建新的手机对象</span></span>
<span class="line"><span style="color:#F8F8F2;">my_phone </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Phone(</span><span style="color:#E6DB74;">&quot;123456&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;我的秘密照片和聊天记录&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 尝试直接访问数据，会报错</span></span>
<span class="line"><span style="color:#88846F;"># print(my_phone.__data)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 正确访问方法</span></span>
<span class="line"><span style="color:#F8F8F2;">data </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> my_phone.unlock(</span><span style="color:#E6DB74;">&quot;123456&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;手机中的数据是：&#39;</span><span style="color:#F8F8F2;">, data)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">data </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> my_phone.unlock(</span><span style="color:#E6DB74;">&quot;wrong_password&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;手机中的数据是：&#39;</span><span style="color:#F8F8F2;">, data)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">密码正确，手机已解锁！</span></span>
<span class="line"><span style="color:#F8F8F2;">手机中的数据是： 我的秘密照片和聊天记录</span></span>
<span class="line"><span style="color:#F8F8F2;">密码输入错误，请重新输入！</span></span>
<span class="line"><span style="color:#F8F8F2;">手机中的数据是： </span><span style="color:#AE81FF;">None</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p><strong>小贴士：</strong></p><ol><li>手机密码相当于类的私有属性，外人不能轻易查看，相对应的数据也是私有属性。</li><li>手机解锁的动作，相当于类规定的方法，通过这个方法可以访问未被公开的数据，这个方法也决定了哪些可以公开，哪些受到保护。</li></ol><h3 id="_6-3-为何使用私有属性" tabindex="-1"><a class="header-anchor" href="#_6-3-为何使用私有属性"><span>6.3 为何使用私有属性？</span></a></h3><p>安全性：防止外人随意打开</p><p>隐私性：防止外人随意查看内容</p><p>保护性：防止里面的内容损毁</p><p>控制性：有钥匙或密码，能决定什么时候打开，什么时候关上</p><h3 id="_6-4-如何访问私有属性" tabindex="-1"><a class="header-anchor" href="#_6-4-如何访问私有属性"><span>6.4 如何访问私有属性？</span></a></h3><p>Python 的私有属性并非绝对私有，可以通过特殊方法访问（不建议）</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#88846F;"># 通过特殊语法访问</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(my_phone._Phone__data)    </span><span style="color:#88846F;"># 输出为：我的秘密照片和聊天记录</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>还可以通过这种方法来修改属性值：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#88846F;"># 修改私有数据</span></span>
<span class="line"><span style="color:#F8F8F2;">my_phone._Phone__data </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &#39;新的数据&#39;</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(my_phone._Phone__data)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">新的数据</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在实际开发中，不建议这么做，这种特殊访问方式仅在调试或者特殊情况下使用。</p><h2 id="_7-小试牛刀" tabindex="-1"><a class="header-anchor" href="#_7-小试牛刀"><span>7. 小试牛刀</span></a></h2><figure><img src="`+h+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',162)),p(t,{data:[{id:"Answer"},{id:"init修改"},{id:"add_item修改"},{id:"remove_item修改"},{id:"show_items修改"}]},{title0:a(({value:e,isActive:o})=>[...l[0]||(l[0]=[n("Answer",-1)])]),title1:a(({value:e,isActive:o})=>[...l[1]||(l[1]=[n("init修改",-1)])]),title2:a(({value:e,isActive:o})=>[...l[2]||(l[2]=[n("add_item修改",-1)])]),title3:a(({value:e,isActive:o})=>[...l[3]||(l[3]=[n("remove_item修改",-1)])]),title4:a(({value:e,isActive:o})=>[...l[4]||(l[4]=[n("show_items修改",-1)])]),tab0:a(({value:e,isActive:o})=>[...l[5]||(l[5]=[s("div",{class:"language-python line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"python",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",{class:"language-python"},[s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"MagicBag"),s("span",{style:{color:"#F8F8F2"}},"():")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#66D9EF"}}," __init__"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"name"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"items"),s("span",{style:{color:"#F92672"}}," ="),s("span",{style:{color:"#F8F8F2"}}," [], "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"bag_capacity"),s("span",{style:{color:"#F92672"}}," ="),s("span",{style:{color:"#AE81FF"}}," 5"),s("span",{style:{color:"#F8F8F2"}},"):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".name "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," name")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".__items "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," items")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".__bag_capacity "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," bag_capacity")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#A6E22E"}}," add_item"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"item"),s("span",{style:{color:"#F8F8F2"}},"):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        if"),s("span",{style:{color:"#FD971F"}}," self"),s("span",{style:{color:"#F8F8F2"}},".__bag_capacity "),s("span",{style:{color:"#F92672"}},">="),s("span",{style:{color:"#AE81FF"}}," 1"),s("span",{style:{color:"#F8F8F2"}},":                    "),s("span",{style:{color:"#88846F"}},"# 需要注意一下容量的范围")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"            self"),s("span",{style:{color:"#F8F8F2"}},".__items.append(item)")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"            self"),s("span",{style:{color:"#F8F8F2"}},".__bag_capacity "),s("span",{style:{color:"#F92672"}},"-="),s("span",{style:{color:"#AE81FF"}}," 1")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            return"),s("span",{style:{color:"#FD971F"}}," self"),s("span",{style:{color:"#F8F8F2"}},".__items, "),s("span",{style:{color:"#FD971F"}},"self"),s("span",{style:{color:"#F8F8F2"}},".__bag_capacity")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        else"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"            print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},"'背包已满，无法添加！'"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#A6E22E"}}," remove_item"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"item"),s("span",{style:{color:"#F8F8F2"}},"):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        if"),s("span",{style:{color:"#F8F8F2"}}," item "),s("span",{style:{color:"#F92672"}},"in"),s("span",{style:{color:"#FD971F"}}," self"),s("span",{style:{color:"#F8F8F2"}},".__items:")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"            self"),s("span",{style:{color:"#F8F8F2"}},".__items.remove(item)")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"            self"),s("span",{style:{color:"#F8F8F2"}},".__bag_capacity "),s("span",{style:{color:"#F92672"}},"+="),s("span",{style:{color:"#AE81FF"}}," 1")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"            print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"f"),s("span",{style:{color:"#E6DB74"}},"'"),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#FD971F"}},"self"),s("span",{style:{color:"#F8F8F2"}},".name"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}},"的背包中的"),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#F8F8F2"}},"item"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}},"已移除'"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            return"),s("span",{style:{color:"#FD971F"}}," self"),s("span",{style:{color:"#F8F8F2"}},".__items, "),s("span",{style:{color:"#FD971F"}},"self"),s("span",{style:{color:"#F8F8F2"}},".__bag_capacity")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        else"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"            print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},"'没有找到该物品。'"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#A6E22E"}}," show_items"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},"):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"        print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"f"),s("span",{style:{color:"#E6DB74"}},"'当前背包中有："),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#FD971F"}},"self"),s("span",{style:{color:"#F8F8F2"}},".__items"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}},"'"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# ====== 测试代码 ======")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"if"),s("span",{style:{color:"#F8F8F2"}}," __name__ "),s("span",{style:{color:"#F92672"}},"=="),s("span",{style:{color:"#E6DB74"}},' "__main__"'),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    # 创建一个魔法背包对象")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    bag "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," MagicBag("),s("span",{style:{color:"#E6DB74"}},'"勇者阿光"'),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    # 添加 5 个物品")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    bag.add_item("),s("span",{style:{color:"#E6DB74"}},'"木剑"'),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    bag.add_item("),s("span",{style:{color:"#E6DB74"}},'"皮甲"'),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    bag.add_item("),s("span",{style:{color:"#E6DB74"}},'"回复药水"'),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    bag.add_item("),s("span",{style:{color:"#E6DB74"}},'"火把"'),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    bag.add_item("),s("span",{style:{color:"#E6DB74"}},'"干粮"'),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    # 再添加第 6 个物品，应该提示背包已满")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    bag.add_item("),s("span",{style:{color:"#E6DB74"}},'"铁剑"'),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    # 展示当前背包内容")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    bag.show_items()")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    # 移除一个物品")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    bag.remove_item("),s("span",{style:{color:"#E6DB74"}},'"火把"'),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    # 再次展示背包内容")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    bag.show_items()")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    # 尝试直接访问背包的私有属性（会报错）")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    try"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"        print"),s("span",{style:{color:"#F8F8F2"}},"(bag.__items)  "),s("span",{style:{color:"#88846F"}},"# AttributeError")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    except"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," AttributeError"),s("span",{style:{color:"#F92672"}}," as"),s("span",{style:{color:"#F8F8F2"}}," e:")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"        print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"直接访问私有属性失败："'),s("span",{style:{color:"#F8F8F2"}},", e)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    # （补充演示，不推荐这么做）通过名称改写可以访问私有属性")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},'    # print("偷偷访问私有属性：", bag._MagicBag__items)')])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])]),tab1:a(({value:e,isActive:o})=>[...l[6]||(l[6]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",{class:"language-python"},[s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"MagicBag"),s("span",{style:{color:"#F8F8F2"}},"():")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#66D9EF"}}," __init__"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"name"),s("span",{style:{color:"#F8F8F2"}},"):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".name "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," name")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".__items "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," []")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".__bag_capacity "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 5")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])]),tab2:a(({value:e,isActive:o})=>[...l[7]||(l[7]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",{class:"language-python"},[s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"	def"),s("span",{style:{color:"#A6E22E"}}," add_item"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"item"),s("span",{style:{color:"#F8F8F2"}},"):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        if"),s("span",{style:{color:"#66D9EF"}}," len"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F"}},"self"),s("span",{style:{color:"#F8F8F2"}},".__items) "),s("span",{style:{color:"#F92672"}},">="),s("span",{style:{color:"#FD971F"}}," self"),s("span",{style:{color:"#F8F8F2"}},".__capacity:")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"            print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},"'背包已满，无法添加：'"),s("span",{style:{color:"#F8F8F2"}},", item)")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            return"),s("span",{style:{color:"#88846F"}},"                # return 有结束代码的作用，因此如果背包满了，则不会继续执行后面的代码，因此不需要 else")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        # 否则添加物品到列表 ")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".__items.append(item)")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"        print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"f"),s("span",{style:{color:"#E6DB74"}},"'成功添加物品："),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#F8F8F2"}},"item"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}},"'"),s("span",{style:{color:"#F8F8F2"}},")")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])]),tab3:a(({value:e,isActive:o})=>[...l[8]||(l[8]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",{class:"language-python"},[s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"	    def"),s("span",{style:{color:"#A6E22E"}}," remove_item"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"item"),s("span",{style:{color:"#F8F8F2"}},"):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        if"),s("span",{style:{color:"#F8F8F2"}}," item "),s("span",{style:{color:"#F92672"}},"not"),s("span",{style:{color:"#F92672"}}," in"),s("span",{style:{color:"#FD971F"}}," self"),s("span",{style:{color:"#F8F8F2"}},".__items:")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"            print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},"'没有找到该物品'"),s("span",{style:{color:"#F8F8F2"}},", item)")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            return")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        # 移除指定物品")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".__items.remove(item)")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"        print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"f"),s("span",{style:{color:"#E6DB74"}},"'成功移除物品："),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#F8F8F2"}},"item"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}},"'"),s("span",{style:{color:"#F8F8F2"}},")")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])]),tab4:a(({value:e,isActive:o})=>[...l[9]||(l[9]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",{class:"language-python"},[s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#A6E22E"}}," show_items"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},"):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        if"),s("span",{style:{color:"#F92672"}}," not"),s("span",{style:{color:"#FD971F"}}," self"),s("span",{style:{color:"#F8F8F2"}},".__items:")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"            print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},"'背包是空的'"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        else"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"            print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"f"),s("span",{style:{color:"#E6DB74"}},"'"),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#FD971F"}},"self"),s("span",{style:{color:"#F8F8F2"}},".name"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}},"的背包中有："),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#FD971F"}},"self"),s("span",{style:{color:"#F8F8F2"}},".__items"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}},"'"),s("span",{style:{color:"#F8F8F2"}},")")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])]),_:1}),l[69]||(l[69]=c(`<h2 id="_8-类内部的变量如何共用" tabindex="-1"><a class="header-anchor" href="#_8-类内部的变量如何共用"><span>8. 类内部的变量如何共用</span></a></h2><p>在类中，需要定义一些固定不变的变量，比如常量。这些常量每个对象都会用到，是否需要每次创建对象时都构建一次呢？</p><p>不需要！</p><p>只要在类的内部合适的位置定义好，就能实现类内变量共用。</p><h3 id="_8-1-类中的常量-类变量" tabindex="-1"><a class="header-anchor" href="#_8-1-类中的常量-类变量"><span>8.1 类中的常量（类变量）</span></a></h3><p>类似社团有统一的口号，python 中也有统一的口号，我们成为类变量。只需要定义一次，所有对象可以共享。</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Entity</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#AE81FF;">    WELCOME_STR</span><span style="color:#F92672;"> =</span><span style="color:#E6DB74;"> &#39;欢迎来到 Python 学习社团！&#39;</span><span style="color:#88846F;">     # 类变量（常量）</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">name</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.name </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> name</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> say_welcome</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">说：</span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.</span><span style="color:#AE81FF;">WELCOME_STR}</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">entity_a </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Entity(</span><span style="color:#E6DB74;">&#39;Alice&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">entity_b </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Entity(</span><span style="color:#E6DB74;">&#39;Bob&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">entity_a.say_welcome()</span></span>
<span class="line"><span style="color:#F8F8F2;">entity_b.say_welcome()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 类变量也可以直接用类名访问</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(Entity.</span><span style="color:#AE81FF;">WELCOME_STR</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">Alice说：欢迎来到 Python 学习社团！</span></span>
<span class="line"><span style="color:#F8F8F2;">Bob说：欢迎来到 Python 学习社团！</span></span>
<span class="line"><span style="color:#F8F8F2;">欢迎来到 Python 学习社团！</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_8-2-函数之间的局部变量无法共用" tabindex="-1"><a class="header-anchor" href="#_8-2-函数之间的局部变量无法共用"><span>8.2 函数之间的局部变量无法共用</span></a></h3><p>现实生活中，人们的私有物品不能共用，函数也一样，只能在函数内部使用，无法被其他函数直接访问。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> function_a</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#F8F8F2;">    a </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 10</span><span style="color:#F8F8F2;"> </span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;function_a 的变量 a 是：&#39;</span><span style="color:#F8F8F2;">, a)</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> function_b</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(a)   </span><span style="color:#88846F;"># 这里会报错，因为无法访问function_a 的局部变量 a</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>加上一个全局变量就能共用，例如：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#AE81FF;">BOOK_NAME</span><span style="color:#F92672;"> =</span><span style="color:#E6DB74;"> &#39;跟AI悦创学习最前沿的编程思维和人工智能&#39;</span><span style="color:#88846F;">      # 全局变量，任何函数都能造访</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> function_a</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;function_a 正在读书：&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">BOOK_NAME</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> function_b</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;function_b 正在读书：&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">BOOK_NAME</span><span style="color:#F8F8F2;">)   </span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">function_a()</span></span>
<span class="line"><span style="color:#F8F8F2;">function_b()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_8-3-类内部变量各个函数随意调用" tabindex="-1"><a class="header-anchor" href="#_8-3-类内部变量各个函数随意调用"><span>8.3 类内部变量各个函数随意调用</span></a></h3><p>示例如下：</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Family</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.bridge </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#E6DB74;">&#39;草莓&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;巧克力&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;牛奶&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;水果&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;蛋糕&#39;</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> dad_take_food</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F8F8F2;">        food </span><span style="color:#F92672;">=</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.bridge.pop()</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;爸爸拿走了：&#39;</span><span style="color:#F8F8F2;">, food)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> mam_take_food</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F8F8F2;">        food </span><span style="color:#F92672;">=</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.bridge.pop()</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;妈妈拿走了：&#39;</span><span style="color:#F8F8F2;">, food)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> child_take_food</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F8F8F2;">        food </span><span style="color:#F92672;">=</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.bridge.pop()</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;孩子拿走了：&#39;</span><span style="color:#F8F8F2;">, food)</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">family </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Family()</span></span>
<span class="line"><span style="color:#F8F8F2;">family.dad_take_food()</span></span>
<span class="line"><span style="color:#F8F8F2;">family.mam_take_food()</span></span>
<span class="line"><span style="color:#F8F8F2;">family.child_take_food()</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(family.bridge)</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#E6DB74;">&#39;草莓&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;巧克力&#39;</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">爸爸拿走了： 蛋糕</span></span>
<span class="line"><span style="color:#F8F8F2;">妈妈拿走了： 水果</span></span>
<span class="line"><span style="color:#F8F8F2;">孩子拿走了： 牛奶</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p><strong>使用全局变量的影响</strong></p><p>不使用 self 而使用全局变量的问题：全局变量会被更改。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">count </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> increment</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#F92672;">    global</span><span style="color:#F8F8F2;"> count</span></span>
<span class="line"><span style="color:#F8F8F2;">    count </span><span style="color:#F92672;">+=</span><span style="color:#AE81FF;"> 1</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> get_count</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#F92672;">    return</span><span style="color:#F8F8F2;"> count</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">increment()</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(get_count())    </span><span style="color:#88846F;"># 输出为1，而不是0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>小结与回顾</strong></p><table><thead><tr><th>变量类型</th><th>定义位置</th><th>作用域</th><th>举个生活中的例子</th></tr></thead><tbody><tr><td>局部变量</td><td>函数内部</td><td>本函数内有效</td><td>自己的私人用品，别人不能随意拿</td></tr><tr><td>全局变量</td><td>函数外部</td><td>所有函数都有效</td><td>公共的物品，比如图书馆的书</td></tr><tr><td>类变量</td><td>类的内部，方法之外</td><td>类内所有对象都有效</td><td>社团共有的口号</td></tr><tr><td>实例变量</td><td>类的方法内，通过<code>self</code>定义</td><td>单个对象内所有方法有效</td><td>家庭内部共享的冰箱</td></tr></tbody></table><h3 id="_8-4-类内部的函数互相调用" tabindex="-1"><a class="header-anchor" href="#_8-4-类内部的函数互相调用"><span>8.4 类内部的函数互相调用</span></a></h3><p>类内部的变量可以共享，那么类内部的函数也可以共享。</p><p>比如家里准备晚饭，有三个任务：</p><ul><li>妈妈准备食材</li><li>爸爸烹饪</li><li>孩子摆放餐桌</li></ul><p>此时，爸爸的任务中需要调用到妈妈任务中准备的食材。</p><h4 id="_8-4-1-第一步-定义多个方法" tabindex="-1"><a class="header-anchor" href="#_8-4-1-第一步-定义多个方法"><span>8.4.1 第一步：定义多个方法</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">FamilyDinner</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> prepare_ingredients</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;妈妈正在准备食材：洗菜、切菜、准备调料。&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> cook_food</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;爸爸开始烹饪了！&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.prepare_ingredients()     </span><span style="color:#88846F;"># 调用准备食材的方法</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;爸爸正在烹饪菜肴：炒菜、煮汤。&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> set_table</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;孩子正在摆放餐桌。&#39;</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_8-4-2-第二步-方法之间如何调用" tabindex="-1"><a class="header-anchor" href="#_8-4-2-第二步-方法之间如何调用"><span>8.4.2 第二步：方法之间如何调用</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">dinner </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> FamilyDinner()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">dinner.cook_food()</span></span>
<span class="line"><span style="color:#F8F8F2;">dinner.set_table()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">爸爸开始烹饪了！</span></span>
<span class="line"><span style="color:#F8F8F2;">妈妈正在准备食材：洗菜、切菜、准备调料。</span></span>
<span class="line"><span style="color:#F8F8F2;">爸爸正在烹饪菜肴：炒菜、煮汤。</span></span>
<span class="line"><span style="color:#F8F8F2;">孩子正在摆放餐桌。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>调用时，在需要调用的内部函数前添加 <code>self.</code> 即可实现类内部的函数调用，因此只需要使用类中的2个函数就可实现3个函数的功能。</p><h4 id="_8-4-2-继承-是每个富二代的梦想「选学」" tabindex="-1"><a class="header-anchor" href="#_8-4-2-继承-是每个富二代的梦想「选学」"><span>8.4.2 继承，是每个富二代的梦想「选学」</span></a></h4><p><strong>提示</strong>：接下来的继承内容，一时间看不懂学不会没有事的，完全不影响你入门 Python。</p><p>既然类是一群相似的对象的集合，那么可不可以是一群相似的类的集合呢？</p><p>接下来，我们来看第三个问题，既然类是一群相似的对象的集合，那么可不可以是一群相似的类的集合呢？</p><p>答案是，当然可以。只要抽象得好，类可以描述成任何事物的集合。当然你要小心、严谨地去定义它，不然一不小心就会引起第三次数学危机 XD（维基百科：<a href="https://en.wikipedia.org/wiki/Russell%27s_paradox" target="_blank" rel="noopener noreferrer">https://en.wikipedia.org/wiki/Russell%27s_paradox</a>。</p><p>类的继承，顾名思义，指的是一个类既拥有另一个类的特征，也拥有不同于另一个类的独特特征。在这里的第一个类叫做子类，另一个叫做父类，特征其实就是类的属性和函数。</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Entity</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">object_type</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;parent class init called&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.object_type </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> object_type</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> get_context_length</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F92672;">        raise</span><span style="color:#66D9EF;font-style:italic;"> Exception</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;get_context_length not implemented&#39;</span><span style="color:#F8F8F2;">)     </span><span style="color:#88846F;"># 起到主动报错的作用</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> print_title</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.title)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Document</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Entity</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">title</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">author</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">context</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;Document class init called&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        Entity.</span><span style="color:#66D9EF;">__init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;document&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.title </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> title</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.author </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> author</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.__context </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> context</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> get_context_length</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#66D9EF;"> len</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.__context)</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Video</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Entity</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">title</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">author</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">video_length</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;Video class init called&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        Entity.</span><span style="color:#66D9EF;">__init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;video&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.title </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> title</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.author </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> author</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.__video_length </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> video_length</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> get_context_length</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.__video_length</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">harry_potter_book </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Document(</span><span style="color:#E6DB74;">&#39;Harry Potter(Book)&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;J. K. Rowling&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;... Forever Do not believe any thing is capable of thinking independently ...&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">harry_potter_movie </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Video(</span><span style="color:#E6DB74;">&#39;Harry Potter(Movie)&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;J. K. Rowling&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">120</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(harry_potter_book.object_type)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(harry_potter_movie.object_type)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">harry_potter_book.print_title()</span></span>
<span class="line"><span style="color:#F8F8F2;">harry_potter_movie.print_title()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(harry_potter_book.get_context_length())</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(harry_potter_movie.get_context_length())</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># ---output---</span></span>
<span class="line"><span style="color:#F8F8F2;">Document </span><span style="color:#66D9EF;font-style:italic;">class</span><span style="color:#F8F8F2;"> init called</span></span>
<span class="line"><span style="color:#F8F8F2;">parent </span><span style="color:#66D9EF;font-style:italic;">class</span><span style="color:#F8F8F2;"> init called</span></span>
<span class="line"><span style="color:#F8F8F2;">Video </span><span style="color:#66D9EF;font-style:italic;">class</span><span style="color:#F8F8F2;"> init called</span></span>
<span class="line"><span style="color:#F8F8F2;">parent </span><span style="color:#66D9EF;font-style:italic;">class</span><span style="color:#F8F8F2;"> init called</span></span>
<span class="line"><span style="color:#F8F8F2;">document</span></span>
<span class="line"><span style="color:#F8F8F2;">video</span></span>
<span class="line"><span style="color:#F8F8F2;">Harry Potter(Book)</span></span>
<span class="line"><span style="color:#F8F8F2;">Harry Potter(Movie)</span></span>
<span class="line"><span style="color:#AE81FF;">77</span></span>
<span class="line"><span style="color:#AE81FF;">120</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>我们同样结合代码来学习这些概念。在这段代码中，Document 和 Video 它们有相似的地方，都有相应的标题、作者和内容等属性。我们可以从中抽象出一个叫做 Entity 的类，来作为它俩的父类。</p><p>首先需要注意的是构造函数。每个类都有构造函数，继承类在生成对象的时候，是不会自动调用父类的构造函数的，因此你必须在 <code>init()</code> 函数中显式调用父类的构造函数。它们的执行顺序是 子类的构造函数 -&gt; 父类的构造函数。</p><p>其次需要注意父类 <code>get_context_length()</code> 函数。如果使用 Entity 直接生成对象，调用 <code>get_context_length()</code> 函数，就会 raise error 中断程序的执行。这其实是一种很好的写法，叫做函数重写，可以使子类必须重新写一遍 <code>get_context_length()</code> 函数，来覆盖掉原有函数。</p><p>最后需要注意到 <code>print_title()</code> 函数，这个函数定义在父类中，但是子类的对象可以毫无阻力地使用它来打印 title，这也就体现了继承的优势：减少重复的代码，降低系统的熵值（即复杂度）。</p><p>到这里，你对继承就有了比较详细的了解了，面向对象编程也可以说已经入门了。当然，如果你想达到更高的层次，大量练习编程，学习更多的细节知识，都是必不可少的。</p><h2 id="_9-练习" tabindex="-1"><a class="header-anchor" href="#_9-练习"><span>9. 练习</span></a></h2><figure><img src="`+f+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+g+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_9-1-个人回答" tabindex="-1"><a class="header-anchor" href="#_9-1-个人回答"><span>9.1 个人回答</span></a></h3><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> random</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Game</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#88846F;">    # 初始化玩家姓名、HP、敌人HP</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">player_name</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.player_name </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> player_name</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.player_hp </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 100</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.enemy_hp </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 80</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">    # 玩家操作攻击/防守</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> actions</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.action </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;Attack or Defense (A/D):&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.action </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;A&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#FD971F;">            self</span><span style="color:#F8F8F2;">.enemy_hp </span><span style="color:#F92672;">-=</span><span style="color:#F8F8F2;"> random.randint(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">20</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">            if</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.enemy_hp </span><span style="color:#F92672;">&lt;=</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F92672;">                return</span></span>
<span class="line"><span style="color:#FD971F;">            self</span><span style="color:#F8F8F2;">.player_hp </span><span style="color:#F92672;">-=</span><span style="color:#F8F8F2;"> random.randint(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">20</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">        elif</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.action </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;D&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#FD971F;">            self</span><span style="color:#F8F8F2;">.player_hp </span><span style="color:#F92672;">-=</span><span style="color:#F8F8F2;"> random.randint(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">20</span><span style="color:#F8F8F2;">)</span><span style="color:#F92672;">/</span><span style="color:#AE81FF;">10</span></span>
<span class="line"><span style="color:#F92672;">        else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;Invalid action&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#  main</span></span>
<span class="line"><span style="color:#F8F8F2;">player_name </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;请输入玩家姓名：&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">player1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Game(player_name)             </span><span style="color:#88846F;"># 创建实例并完成初始化</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">while</span><span style="color:#F8F8F2;"> player1.player_hp </span><span style="color:#F92672;">&gt;</span><span style="color:#AE81FF;"> 0</span><span style="color:#F92672;"> and</span><span style="color:#F8F8F2;"> player1.enemy_hp </span><span style="color:#F92672;">&gt;</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#88846F;">    # 显示玩家和敌人血量</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">player1.player_name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> HP: </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">player1.player_hp</span><span style="color:#66D9EF;font-style:italic;">:.2f</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;Enemy HP: </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">player1.enemy_hp</span><span style="color:#66D9EF;font-style:italic;">:.2f</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">    # 调用操作函数，玩家选择攻击/防守</span></span>
<span class="line"><span style="color:#F8F8F2;">    player1.actions()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> player1.player_hp </span><span style="color:#F92672;">&gt;</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;You win!&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;You lose!&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># ---output---</span></span>
<span class="line"><span style="color:#F8F8F2;">请输入玩家姓名：Ran</span></span>
<span class="line"><span style="color:#F8F8F2;">Ran </span><span style="color:#AE81FF;">HP</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">100.00</span></span>
<span class="line"><span style="color:#F8F8F2;">Enemy </span><span style="color:#AE81FF;">HP</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">80.00</span></span>
<span class="line"><span style="color:#F8F8F2;">Attack </span><span style="color:#F92672;">or</span><span style="color:#F8F8F2;"> Defense (A</span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;">D):A</span></span>
<span class="line"><span style="color:#F8F8F2;">Ran </span><span style="color:#AE81FF;">HP</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">91.00</span></span>
<span class="line"><span style="color:#F8F8F2;">Enemy </span><span style="color:#AE81FF;">HP</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">61.00</span></span>
<span class="line"><span style="color:#F8F8F2;">Attack </span><span style="color:#F92672;">or</span><span style="color:#F8F8F2;"> Defense (A</span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;">D):A</span></span>
<span class="line"><span style="color:#F8F8F2;">Ran </span><span style="color:#AE81FF;">HP</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">79.00</span></span>
<span class="line"><span style="color:#F8F8F2;">Enemy </span><span style="color:#AE81FF;">HP</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">48.00</span></span>
<span class="line"><span style="color:#F8F8F2;">Attack </span><span style="color:#F92672;">or</span><span style="color:#F8F8F2;"> Defense (A</span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;">D):A</span></span>
<span class="line"><span style="color:#F8F8F2;">Ran </span><span style="color:#AE81FF;">HP</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">70.00</span></span>
<span class="line"><span style="color:#F8F8F2;">Enemy </span><span style="color:#AE81FF;">HP</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">30.00</span></span>
<span class="line"><span style="color:#F8F8F2;">Attack </span><span style="color:#F92672;">or</span><span style="color:#F8F8F2;"> Defense (A</span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;">D):D</span></span>
<span class="line"><span style="color:#F8F8F2;">Ran </span><span style="color:#AE81FF;">HP</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">68.80</span></span>
<span class="line"><span style="color:#F8F8F2;">Enemy </span><span style="color:#AE81FF;">HP</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">30.00</span></span>
<span class="line"><span style="color:#F8F8F2;">Attack </span><span style="color:#F92672;">or</span><span style="color:#F8F8F2;"> Defense (A</span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;">D):D</span></span>
<span class="line"><span style="color:#F8F8F2;">Ran </span><span style="color:#AE81FF;">HP</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">68.10</span></span>
<span class="line"><span style="color:#F8F8F2;">Enemy </span><span style="color:#AE81FF;">HP</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">30.00</span></span>
<span class="line"><span style="color:#F8F8F2;">Attack </span><span style="color:#F92672;">or</span><span style="color:#F8F8F2;"> Defense (A</span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;">D):D</span></span>
<span class="line"><span style="color:#F8F8F2;">Ran </span><span style="color:#AE81FF;">HP</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">67.60</span></span>
<span class="line"><span style="color:#F8F8F2;">Enemy </span><span style="color:#AE81FF;">HP</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">30.00</span></span>
<span class="line"><span style="color:#F8F8F2;">Attack </span><span style="color:#F92672;">or</span><span style="color:#F8F8F2;"> Defense (A</span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;">D):A</span></span>
<span class="line"><span style="color:#F8F8F2;">Ran </span><span style="color:#AE81FF;">HP</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">47.60</span></span>
<span class="line"><span style="color:#F8F8F2;">Enemy </span><span style="color:#AE81FF;">HP</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">27.00</span></span>
<span class="line"><span style="color:#F8F8F2;">Attack </span><span style="color:#F92672;">or</span><span style="color:#F8F8F2;"> Defense (A</span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;">D):A</span></span>
<span class="line"><span style="color:#F8F8F2;">Ran </span><span style="color:#AE81FF;">HP</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">40.60</span></span>
<span class="line"><span style="color:#F8F8F2;">Enemy </span><span style="color:#AE81FF;">HP</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">26.00</span></span>
<span class="line"><span style="color:#F8F8F2;">Attack </span><span style="color:#F92672;">or</span><span style="color:#F8F8F2;"> Defense (A</span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;">D):A</span></span>
<span class="line"><span style="color:#F8F8F2;">Ran </span><span style="color:#AE81FF;">HP</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">25.60</span></span>
<span class="line"><span style="color:#F8F8F2;">Enemy </span><span style="color:#AE81FF;">HP</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">23.00</span></span>
<span class="line"><span style="color:#F8F8F2;">Attack </span><span style="color:#F92672;">or</span><span style="color:#F8F8F2;"> Defense (A</span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;">D):A</span></span>
<span class="line"><span style="color:#F8F8F2;">Ran </span><span style="color:#AE81FF;">HP</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">7.60</span></span>
<span class="line"><span style="color:#F8F8F2;">Enemy </span><span style="color:#AE81FF;">HP</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">8.00</span></span>
<span class="line"><span style="color:#F8F8F2;">Attack </span><span style="color:#F92672;">or</span><span style="color:#F8F8F2;"> Defense (A</span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;">D):D</span></span>
<span class="line"><span style="color:#F8F8F2;">Ran </span><span style="color:#AE81FF;">HP</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">7.00</span></span>
<span class="line"><span style="color:#F8F8F2;">Enemy </span><span style="color:#AE81FF;">HP</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">8.00</span></span>
<span class="line"><span style="color:#F8F8F2;">Attack </span><span style="color:#F92672;">or</span><span style="color:#F8F8F2;"> Defense (A</span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;">D):D</span></span>
<span class="line"><span style="color:#F8F8F2;">Ran </span><span style="color:#AE81FF;">HP</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">6.60</span></span>
<span class="line"><span style="color:#F8F8F2;">Enemy </span><span style="color:#AE81FF;">HP</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">8.00</span></span>
<span class="line"><span style="color:#F8F8F2;">Attack </span><span style="color:#F92672;">or</span><span style="color:#F8F8F2;"> Defense (A</span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;">D):A</span></span>
<span class="line"><span style="color:#F8F8F2;">You win!</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_9-2-老师思路" tabindex="-1"><a class="header-anchor" href="#_9-2-老师思路"><span>9.2 老师思路</span></a></h3><p>优化：</p><ul><li>玩家和敌人都可以当做是对象，因此初始化时可以把敌人也当做是类似对象的实例。</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> random</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Creature</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> attack</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F8F8F2;">        attack_value </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> random.randint(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">50</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#F8F8F2;"> attack_value</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span></span>
<span class="line"><span style="color:#F8F8F2;">player </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Creature()</span></span>
<span class="line"><span style="color:#F8F8F2;">enemy </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Creature()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此处需要考虑类究竟如何使用，玩家和敌人都是类似的对象，因此可以通过类将其实例化出来。</p><ul><li>游戏继续的条件是玩家和敌人都还活着，因此可以建立一个 <code>while</code> 函数，条件就是 <code>player.not_dead() and enemy.not_dead()</code> ，此处又存在共性，所以可以在类中建立一个函数看玩家和敌人是否都存活。</li></ul><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> random</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Creature</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> attack</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F8F8F2;">        attack_value </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> random.randint(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">50</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#F8F8F2;"> attack_value</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> not_dead</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F92672;">        pass</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">player </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Creature()</span></span>
<span class="line"><span style="color:#F8F8F2;">enemy </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Creature()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">while</span><span style="color:#F8F8F2;"> player.not_dead() </span><span style="color:#F92672;">and</span><span style="color:#F8F8F2;"> enemy.not_dead():</span></span>
<span class="line"><span style="color:#F92672;">    pass</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><ul><li>当需要编写 <code>not-dead</code> 函数时，我们发现判断是否死亡的标准是血量，但是目前还没有血量这个参数，因此，可以在实例化的时候将血量当做参数传进去，就需要了 <code>init</code> 函数，此时再编写 <code>init</code> 函数，并加入需要的参数。</li></ul><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> random</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Creature</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">hp</span><span style="color:#F8F8F2;">):                    </span><span style="color:#88846F;"># 根据需要设置参数，初始化</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.hp </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> hp</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span></span>
<span class="line"><span style="color:#F8F8F2;">        </span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> attack</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F8F8F2;">        attack_value </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> random.randint(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">50</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#F8F8F2;"> attack_value</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> not_dead</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F92672;">        pass</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">player </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Creature(</span><span style="color:#AE81FF;">100</span><span style="color:#F8F8F2;">)                          </span><span style="color:#88846F;"># 传入参数</span></span>
<span class="line"><span style="color:#F8F8F2;">enemy </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Creature(</span><span style="color:#AE81FF;">80</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">while</span><span style="color:#F8F8F2;"> player.not_dead() </span><span style="color:#F92672;">and</span><span style="color:#F8F8F2;"> enemy.not_dead():</span></span>
<span class="line"><span style="color:#F92672;">    pass</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><ul><li>有了 hp 就可以编写 not_dead 这个函数了，即血量＞0 为 True。</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> not_dead</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.hp </span><span style="color:#F92672;">&gt;</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F92672;">            return</span><span style="color:#AE81FF;"> True</span></span>
<span class="line"><span style="color:#F92672;">        else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F92672;">            return</span><span style="color:#AE81FF;"> False</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>继续优化：</p><p>上述代码是为了当符合某种条件时，返回我们指定的结果，从比较运算符处可知，运行的结果是<strong>布尔类型</strong> ，恰好和我们本身希望返回的结果是一致的，因此可以优化成直接返回比较的结果，即 <code>return self.hp &gt; 0</code> 。</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> not_dead</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.hp </span><span style="color:#F92672;">&lt;=</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F92672;">            return</span><span style="color:#AE81FF;"> False</span></span>
<span class="line"><span style="color:#F92672;">        else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F92672;">            return</span><span style="color:#AE81FF;"> True</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span></span>
<span class="line"><span style="color:#88846F;">        # 等价 1</span></span>
<span class="line"><span style="color:#88846F;">        # if self.hp &lt;= 0:</span></span>
<span class="line"><span style="color:#88846F;">        #     return False</span></span>
<span class="line"><span style="color:#88846F;">        # return True</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">        # 等价 2</span></span>
<span class="line"><span style="color:#88846F;">        # 本身上述的写法，是为了当符合某种条件时，返回我们指定的结果</span></span>
<span class="line"><span style="color:#88846F;">        # 而我们现在需要返回的结果，恰好和我们本身指定的结果是一致的，因此可以优化成如下代码：</span></span>
<span class="line"><span style="color:#88846F;">        # return self.hp &gt; 0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><ul><li>疑问点：是否需要写 defence？感觉逻辑复杂不通。</li></ul><p>自己继续上述思路补充的后续代码如下：</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> random</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Game</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#88846F;">    # 初始化玩家姓名、HP、敌人HP</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">player_name</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.player_name </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> player_name</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.player_hp </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 100</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.enemy_hp </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 80</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">    # 玩家操作攻击/防守</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> actions</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.action </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;Attack or Defense (A/D):&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.action </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;A&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#FD971F;">            self</span><span style="color:#F8F8F2;">.enemy_hp </span><span style="color:#F92672;">-=</span><span style="color:#F8F8F2;"> random.randint(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">20</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">            if</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.enemy_hp </span><span style="color:#F92672;">&lt;=</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F92672;">                return</span></span>
<span class="line"><span style="color:#FD971F;">            self</span><span style="color:#F8F8F2;">.player_hp </span><span style="color:#F92672;">-=</span><span style="color:#F8F8F2;"> random.randint(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">20</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">        elif</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.action </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;D&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#FD971F;">            self</span><span style="color:#F8F8F2;">.player_hp </span><span style="color:#F92672;">-=</span><span style="color:#F8F8F2;"> random.randint(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">20</span><span style="color:#F8F8F2;">)</span><span style="color:#F92672;">/</span><span style="color:#AE81FF;">10</span></span>
<span class="line"><span style="color:#F92672;">        else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;Invalid action&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#  main</span></span>
<span class="line"><span style="color:#F8F8F2;">player_name </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;请输入玩家姓名：&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">player1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Game(player_name)             </span><span style="color:#88846F;"># 创建实例并完成初始化</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">while</span><span style="color:#F8F8F2;"> player1.player_hp </span><span style="color:#F92672;">&gt;</span><span style="color:#AE81FF;"> 0</span><span style="color:#F92672;"> and</span><span style="color:#F8F8F2;"> player1.enemy_hp </span><span style="color:#F92672;">&gt;</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#88846F;">    # 显示玩家和敌人血量</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">player1.player_name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> HP: </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">player1.player_hp</span><span style="color:#66D9EF;font-style:italic;">:.2f</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;Enemy HP: </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">player1.enemy_hp</span><span style="color:#66D9EF;font-style:italic;">:.2f</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">    # 调用操作函数，玩家选择攻击/防守</span></span>
<span class="line"><span style="color:#F8F8F2;">    player1.actions()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> player1.player_hp </span><span style="color:#F92672;">&gt;</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;You win!&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;You lose!&#39;</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>以上代码暂时保留，继续老师思路：</p><ul><li>有hp 值，下一步可以继续实现交互</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;"> if</span><span style="color:#F8F8F2;"> user_input </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;A&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">        player_attack_value </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> player.attack()</span></span>
<span class="line"><span style="color:#F8F8F2;">        enemy_attack_value </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> enemy.attack()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上述代码有了，我们想到，无论敌人或玩家，都有收到攻击的情节，因此可以继续写一个函 能够实现<code>player.being_attack(enemy_attack_value)</code> 。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">   def</span><span style="color:#A6E22E;"> being_attack</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">attack_value</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.hp </span><span style="color:#F92672;">-=</span><span style="color:#F8F8F2;"> attack_value</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>因此，主程序处进行攻击和防守就可写成：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> user_input </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;A&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">        player_attack_value </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> player.attack()</span></span>
<span class="line"><span style="color:#F8F8F2;">        enemy_attack_value </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> enemy.attack()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">        enemy.being_attack(player_attack_value)</span></span>
<span class="line"><span style="color:#F8F8F2;">        player.being_attack(enemy_attack_value)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">    elif</span><span style="color:#F8F8F2;"> user_input </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;D&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">        enemy_attack_value </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> enemy.attack()</span></span>
<span class="line"><span style="color:#F8F8F2;">        player.being_attack(enemy_attack_value </span><span style="color:#F92672;">*</span><span style="color:#AE81FF;"> 0.1</span><span style="color:#F8F8F2;">)      </span><span style="color:#88846F;"># 因为不同软件对除法的处理略有不同，更倾向使用乘法而不是除法</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>运行代码后，发现没有血量、不知道游戏进程、不知道游戏何时结束。首先补充血量显示：</li></ul><p>显示血量在什么位置呢？A or B or C or D</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">player </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Creature(</span><span style="color:#AE81FF;">100</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">enemy </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Creature(</span><span style="color:#AE81FF;">80</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#88846F;"># A</span></span>
<span class="line"><span style="color:#F92672;">while</span><span style="color:#F8F8F2;"> player.not_dead() </span><span style="color:#F92672;">and</span><span style="color:#F8F8F2;"> enemy.not_dead():</span></span>
<span class="line"><span style="color:#88846F;">    # B</span></span>
<span class="line"><span style="color:#F8F8F2;">    user_input </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Attack or Defence (A/D): &quot;</span><span style="color:#F8F8F2;">)  </span><span style="color:#88846F;"># 操作</span></span>
<span class="line"><span style="color:#88846F;">    # C</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> user_input </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;A&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">        player_attack_value </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> player.attack()</span></span>
<span class="line"><span style="color:#F8F8F2;">        enemy_attack_value </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> enemy.attack()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">        enemy.being_attack(player_attack_value)</span></span>
<span class="line"><span style="color:#F8F8F2;">        player.being_attack(enemy_attack_value)</span></span>
<span class="line"><span style="color:#F92672;">    elif</span><span style="color:#F8F8F2;"> user_input </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;D&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">        enemy_attack_value </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> enemy.attack()</span></span>
<span class="line"><span style="color:#F8F8F2;">        player.being_attack(enemy_attack_value </span><span style="color:#F92672;">*</span><span style="color:#AE81FF;"> 0.1</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#88846F;">    # D</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><hr><p>选择显示血量的代码位置时，首先需要判断在循环内外，由于血量需要实时更新，因此需要在循环内。</p><p>其次，在操作前要根据血量判断执行什么操作，因此放在 <code>user_input</code> 之前。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">while</span><span style="color:#F8F8F2;"> player.not_dead() </span><span style="color:#F92672;">and</span><span style="color:#F8F8F2;"> enemy.not_dead():</span></span>
<span class="line"><span style="color:#88846F;">    # 此处添加血量显示</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">    user_input </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;Attack or Defence (A/D): &#39;</span><span style="color:#F8F8F2;">)          </span><span style="color:#88846F;"># 操作</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> user_input </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;A&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">        player_attack_value </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> player.attack()</span></span>
<span class="line"><span style="color:#F8F8F2;">        enemy_attack_value </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> enemy.attack()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">        enemy.being_attack(player_attack_value)</span></span>
<span class="line"><span style="color:#F8F8F2;">        player.being_attack(enemy_attack_value)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">    elif</span><span style="color:#F8F8F2;"> user_input </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;D&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">        enemy_attack_value </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> enemy.attack()</span></span>
<span class="line"><span style="color:#F8F8F2;">        player.being_attack(enemy_attack_value </span><span style="color:#F92672;">*</span><span style="color:#AE81FF;"> 0.1</span><span style="color:#F8F8F2;">)      </span><span style="color:#88846F;"># 因为不同软件对除法的处理略有不同，更倾向使用乘法而不是除法</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>可以把显示血量写成一个函数</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> show_status</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;HP: </span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.hp</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>主程序调用</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">while</span><span style="color:#F8F8F2;"> player.not_dead() </span><span style="color:#F92672;">and</span><span style="color:#F8F8F2;"> enemy.not_dead():</span></span>
<span class="line"><span style="color:#F8F8F2;">    player.show_status()</span></span>
<span class="line"><span style="color:#F8F8F2;">    enemy.show_status()</span></span>
<span class="line"><span style="color:#F8F8F2;">    user_input </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;Attack or Defence (A/D): &#39;</span><span style="color:#F8F8F2;">)          </span><span style="color:#88846F;"># 操作</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>显示血量的时候发现不知道哪个是哪个的血量，如何解决？</li></ul><p>需要名字这个变量，那就初始化的时候传进去：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">name</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">hp</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.name </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> name</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.hp </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> hp</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> show_status</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;</span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&#39;s HP: </span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.hp</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">player </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Creature(</span><span style="color:#E6DB74;">&#39;Ran&#39;</span><span style="color:#F8F8F2;">,</span><span style="color:#AE81FF;">100</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">enemy </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Creature(</span><span style="color:#E6DB74;">&#39;Monster&#39;</span><span style="color:#F8F8F2;">,</span><span style="color:#AE81FF;">80</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>添加判断游戏结果的代码，放在循环结束后：</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> player.hp </span><span style="color:#F92672;">&gt;</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;You win! Your HP: </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">player.hp</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;You lose!&quot;</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>疑问：什么时候选择写成函数？</p><ol><li>需要重复使用，存在共性的东西，比如玩家有多个，不需要写多个 <code>print</code> 来显示血量。</li><li>有封装需求，方便后期统一修改维护。</li><li>若写在主程序里，修改时可能需要捋前后代码逻辑，输出可能变动，若封装成函数，只要保证 return 不变，主函数的代码出错的概率将会大大减少。</li></ol><hr><h3 id="_9-3-对自己的代码进行修改" tabindex="-1"><a class="header-anchor" href="#_9-3-对自己的代码进行修改"><span>9.3 对自己的代码进行修改</span></a></h3><p>对自己写的代码进行修改：</p><ul><li>玩家姓名可以当做参数传入类中，在初始化步骤中完成，也可对敌人起名。</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Creature</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#88846F;">    # 初始化姓名、HP</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">name</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">hp</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.name </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> name</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.hp </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> hp</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>因此，后续程序中，可以添加 <code>Creature(player_name, 100)</code> 和 <code>Creature(Enemy, 80)</code> 创建玩家和敌人。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">player_name </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;请输入玩家姓名：&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">player </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Creature(player_name, </span><span style="color:#AE81FF;">100</span><span style="color:#F8F8F2;">)             </span><span style="color:#88846F;"># 创建玩家并完成初始化</span></span>
<span class="line"><span style="color:#F8F8F2;">enemy </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Creature(</span><span style="color:#E6DB74;">&#39;Monster&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">80</span><span style="color:#F8F8F2;">)          </span><span style="color:#88846F;"># 创建敌人并初始化</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>个人代码修改如下：</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> random</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 将玩家和敌人都抽象成一个类</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Creature</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">name</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">hp</span><span style="color:#F8F8F2;">):                          </span><span style="color:#88846F;"># 与玩家和敌人都相关的基本参数是姓名和血量</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.name </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> name</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.hp </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> hp</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> show_HP</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):                                     </span><span style="color:#88846F;"># 显示血量</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;</span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&#39;s HP: </span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.hp</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> is_alive</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):                                    </span><span style="color:#88846F;"># 与两者都相关的存亡状态</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.hp </span><span style="color:#F92672;">&gt;</span><span style="color:#AE81FF;"> 0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> defence</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">harm</span><span style="color:#F8F8F2;">):                               </span><span style="color:#88846F;"># 自己防守时，血量只减十分之一</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.hp </span><span style="color:#F92672;">-=</span><span style="color:#AE81FF;"> 0.1</span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;">harm</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> being_attack</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">harm</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">action</span><span style="color:#F8F8F2;">):                  </span><span style="color:#88846F;"># 被攻击，自己血量变化</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> action </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &quot;D&quot;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#FD971F;">            self</span><span style="color:#F8F8F2;">.defence(harm)</span></span>
<span class="line"><span style="color:#F92672;">        else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#FD971F;">            self</span><span style="color:#F8F8F2;">.hp </span><span style="color:#F92672;">-=</span><span style="color:#F8F8F2;"> harm</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> attack</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">target</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">action</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;">&#39;A&#39;</span><span style="color:#F8F8F2;">):                   </span><span style="color:#88846F;"># 攻击对方，为了区分玩家和敌人，需要有一个攻击对象</span></span>
<span class="line"><span style="color:#F8F8F2;">        harm </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> random.randint(</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">50</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        target.being_attack(harm, action)                   </span><span style="color:#88846F;"># 对方被攻击了，对方血量变动，只有被攻击和攻击分开两个函数，才能实现对方血量变动</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 游戏交互阶段开始</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Game</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">player_name</span><span style="color:#F8F8F2;">):                            </span><span style="color:#88846F;"># 玩家给出的姓名作为参数传进去</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.player </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Creature(player_name, </span><span style="color:#AE81FF;">100</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.enemy </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Creature(</span><span style="color:#E6DB74;">&#39;Monster&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">80</span><span style="color:#F8F8F2;">)          </span><span style="color:#88846F;"># 初始化出敌人</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> actions</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F92672;">        while</span><span style="color:#AE81FF;"> True</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">            action </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;Attack or Defence (A/D): &#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">            if</span><span style="color:#F8F8F2;"> action </span><span style="color:#F92672;">in</span><span style="color:#F8F8F2;"> (</span><span style="color:#E6DB74;">&#39;A&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;D&#39;</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F92672;">                return</span><span style="color:#F8F8F2;"> action</span></span>
<span class="line"><span style="color:#F92672;">            else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">                print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;输入无效，请重新输入。&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> play</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F92672;">        while</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.player.is_alive() </span><span style="color:#F92672;">and</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.enemy.is_alive():</span></span>
<span class="line"><span style="color:#FD971F;">            self</span><span style="color:#F8F8F2;">.player.show_HP()</span></span>
<span class="line"><span style="color:#FD971F;">            self</span><span style="color:#F8F8F2;">.enemy.show_HP()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">            # 玩家开始选择攻击/防守</span></span>
<span class="line"><span style="color:#F8F8F2;">            player_action </span><span style="color:#F92672;">=</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.actions()</span></span>
<span class="line"><span style="color:#F92672;">            if</span><span style="color:#F8F8F2;"> player_action </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;A&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#FD971F;">                self</span><span style="color:#F8F8F2;">.player.attack(</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.enemy)         </span><span style="color:#88846F;"># 玩家攻击敌人减血，玩家防守时，敌人不减血，因此不需要操作</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">            # 敌方开始反击</span></span>
<span class="line"><span style="color:#F92672;">            if</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.enemy.is_alive():                  </span><span style="color:#88846F;"># 看看敌方还有血没，有血再打</span></span>
<span class="line"><span style="color:#FD971F;">                self</span><span style="color:#F8F8F2;">.enemy.attack(</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.player, player_action)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">        # 结算结果</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.player.is_alive():</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;</span><span style="color:#AE81FF;">\\n</span><span style="color:#E6DB74;">🎉 你赢了！&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">        else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;</span><span style="color:#AE81FF;">\\n</span><span style="color:#E6DB74;">💀 你输了！&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># main</span></span>
<span class="line"><span style="color:#F8F8F2;">player_name </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;请输入玩家姓名：&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">game </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Game(player_name)</span></span>
<span class="line"><span style="color:#F8F8F2;">game.play()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>优化：</p><ul><li>函数命名尽量不要用大写，修改如下</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> show_hp</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):                                     </span><span style="color:#88846F;"># 显示血量</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;</span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&#39;s HP: </span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.hp</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>函数的注释可以直接在函数内第一行加三个双引号，如下：</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> being_attack</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">harm</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">action</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#E6DB74;">        &quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#E6DB74;">        被攻击时的血量变化</span></span>
<span class="line"><span style="color:#E6DB74;">        :param harm: 伤害值</span></span>
<span class="line"><span style="color:#E6DB74;">        :param action: &quot;A&quot; 表示攻击；&quot;D&quot; 表示防守</span></span>
<span class="line"><span style="color:#E6DB74;">        &quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> action </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &quot;D&quot;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#FD971F;">            self</span><span style="color:#F8F8F2;">.defence(harm)</span></span>
<span class="line"><span style="color:#F92672;">        else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#FD971F;">            self</span><span style="color:#F8F8F2;">.hp </span><span style="color:#F92672;">-=</span><span style="color:#F8F8F2;"> harm</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中，<code>:param</code> 是形参，可以对传入的参数进行注释。</p><h3 id="_9-4-功能扩展" tabindex="-1"><a class="header-anchor" href="#_9-4-功能扩展"><span>9.4 功能扩展</span></a></h3><h4 id="_9-4-1-优化血量的显示效果" tabindex="-1"><a class="header-anchor" href="#_9-4-1-优化血量的显示效果"><span>9.4.1 优化血量的显示效果</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> show_status</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;</span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&#39;s HP → </span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.hp</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_9-4-2-血量问题-会出现负数的情况" tabindex="-1"><a class="header-anchor" href="#_9-4-2-血量问题-会出现负数的情况"><span>9.4.2 血量问题：会出现负数的情况</span></a></h4><p>如何验证血量负数情况？</p><p>两个方向：扩大减血的范围，将0.1改掉；在输掉的时候显示血量。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">You lose! Your </span><span style="color:#AE81FF;">HP</span><span style="color:#F8F8F2;">: </span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">1.800000000000023</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>同理，也可以在结果出输出敌人血量：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">You win! Enemy </span><span style="color:#AE81FF;">HP</span><span style="color:#F8F8F2;">: </span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>此外，也可以修改 <code>while</code> 的条件，只保留玩家不死的条件，玩家一直攻击，敌人很快血量变复数，但是此时循环还未结束，显示血量 <code>show_status()</code> 阶段，会出现负数的敌人血量。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">Ran</span><span style="color:#E6DB74;">&#39;s HP → 100</span></span>
<span class="line"><span style="color:#F8F8F2;">Monster</span><span style="color:#E6DB74;">&#39;s HP → 80</span></span>
<span class="line"><span style="color:#F8F8F2;">Attack </span><span style="color:#F92672;">or</span><span style="color:#F8F8F2;"> Defence (A</span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;">D): A</span></span>
<span class="line"><span style="color:#F8F8F2;">Ran</span><span style="color:#E6DB74;">&#39;s HP → 70</span></span>
<span class="line"><span style="color:#F8F8F2;">Monster</span><span style="color:#E6DB74;">&#39;s HP → 36</span></span>
<span class="line"><span style="color:#F8F8F2;">Attack </span><span style="color:#F92672;">or</span><span style="color:#F8F8F2;"> Defence (A</span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;">D): A</span></span>
<span class="line"><span style="color:#F8F8F2;">Ran</span><span style="color:#E6DB74;">&#39;s HP → 64</span></span>
<span class="line"><span style="color:#F8F8F2;">Monster</span><span style="color:#E6DB74;">&#39;s HP → -6</span></span>
<span class="line"><span style="color:#F8F8F2;">Attack </span><span style="color:#F92672;">or</span><span style="color:#F8F8F2;"> Defence (A</span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;">D): A</span></span>
<span class="line"><span style="color:#F8F8F2;">Ran</span><span style="color:#E6DB74;">&#39;s HP → 36</span></span>
<span class="line"><span style="color:#F8F8F2;">Monster</span><span style="color:#E6DB74;">&#39;s HP → -32</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如何修改血量是负数的情况？</p><p>思路：什么时候会出现负数？减血量的时候。</p><p>方法一：判断伤害值和剩余血量，伤害值高，血量归零，伤害值低，正常减：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> being_attack</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">attack_value</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> attack_value </span><span style="color:#F92672;">&gt;=</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.hp:</span></span>
<span class="line"><span style="color:#FD971F;">            self</span><span style="color:#F8F8F2;">.hp </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span></span>
<span class="line"><span style="color:#F92672;">        else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#FD971F;">            self</span><span style="color:#F8F8F2;">.hp </span><span style="color:#F92672;">-=</span><span style="color:#F8F8F2;"> attack_value</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>方法二：先进行减血，若减出负数，则进行归零处理：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> being_attack</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">attack_value</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.hp </span><span style="color:#F92672;">-=</span><span style="color:#F8F8F2;"> attack_value</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.hp </span><span style="color:#F92672;">&lt;=</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#FD971F;">            self</span><span style="color:#F8F8F2;">.hp </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>方法三：使用 <code>max()</code> 函数</p><p><code>int(self.hp-attack_value)</code> 此处可能是负数，也可能是正数，但是 <code>max()</code> 做到了从两个元素中取最大值，因此该值是负数的时候，总会取到最大值 <code>0</code> ，因此也可以实现血量的控制。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> being_attack</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">attack_value</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#E6DB74;">        &quot;&quot;&quot;受到伤害（向下取整避免血量显示为浮点数，并且保证了血量不会出现负数&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.hp </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> max</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.hp</span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;">attack_value))</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_9-4-3-用户输入控制" tabindex="-1"><a class="header-anchor" href="#_9-4-3-用户输入控制"><span>9.4.3 用户输入控制</span></a></h4><p>要对用户输入可能出现的空格和小写控制，并且当输入错误时，可以实现重新输入：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">user_input </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;Attack or Defence (A/D): &#39;</span><span style="color:#F8F8F2;">).strip().upper()</span></span>
<span class="line"><span style="color:#F92672;">    while</span><span style="color:#F8F8F2;"> user_input </span><span style="color:#F92672;">not</span><span style="color:#F92672;"> in</span><span style="color:#F8F8F2;"> (</span><span style="color:#E6DB74;">&#39;A&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;D&#39;</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F8F8F2;">        user_input </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;输入无效，请重新输入 A 或 D&#39;</span><span style="color:#F8F8F2;">).strip().upper()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_9-4-4-敌人状态随意" tabindex="-1"><a class="header-anchor" href="#_9-4-4-敌人状态随意"><span>9.4.4 敌人状态随意</span></a></h4><p>敌人是随机状态，有可能是攻击，有可能是防守。如果敌人是防守状态，受到玩家伤害减半。</p><ol><li>初步实现</li></ol><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">enemy_status </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> random.choice([</span><span style="color:#E6DB74;">&#39;A&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;D&#39;</span><span style="color:#F8F8F2;">])</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> enemy_status </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;D&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">            enemy.being_attack(</span><span style="color:#AE81FF;">0.5</span><span style="color:#F92672;"> *</span><span style="color:#F8F8F2;"> player_attack_value)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>在玩家的操作中实现</li></ol><p>玩家攻击时实现如下：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> user_input </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;A&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">        enemy_status </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> random.choice([</span><span style="color:#E6DB74;">&#39;A&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;D&#39;</span><span style="color:#F8F8F2;">])</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> enemy_status </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;D&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">enemy.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> chose to defend!&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            player_attack_value </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0.5</span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;">player.attack()</span></span>
<span class="line"><span style="color:#F92672;">        else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">enemy.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> chose to attack!&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            player_attack_value </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> player.attack()</span></span>
<span class="line"><span style="color:#F8F8F2;">            enemy_attack_value </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> enemy.attack()</span></span>
<span class="line"><span style="color:#F8F8F2;">            player.being_attack(enemy_attack_value)</span></span>
<span class="line"><span style="color:#F8F8F2;">            </span></span>
<span class="line"><span style="color:#F8F8F2;">        enemy.being_attack(player_attack_value)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当玩家防守时，应该如何实现？</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> random</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Creature</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#88846F;">    # ---snip---</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">player </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Creature(</span><span style="color:#E6DB74;">&#39;Ran&#39;</span><span style="color:#F8F8F2;">,</span><span style="color:#AE81FF;">100</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">enemy </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Creature(</span><span style="color:#E6DB74;">&#39;Monster&#39;</span><span style="color:#F8F8F2;">,</span><span style="color:#AE81FF;">80</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">while</span><span style="color:#F8F8F2;"> player.not_dead() </span><span style="color:#F92672;">and</span><span style="color:#F8F8F2;"> enemy.not_dead():</span></span>
<span class="line"><span style="color:#88846F;">    # ---snip---</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> user_input </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;A&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#88846F;">        # ---snip---</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">    elif</span><span style="color:#F8F8F2;"> user_input </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;D&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">        enemy_status </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> random.choice([</span><span style="color:#E6DB74;">&#39;A&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;D&#39;</span><span style="color:#F8F8F2;">])</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> enemy_status </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;D&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">enemy.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> chose to defend!&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;Both defended, no damage dealt.&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">        else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">enemy.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> chose to attack!&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            enemy_attack_value </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0.1</span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;">enemy.attack()</span></span>
<span class="line"><span style="color:#F8F8F2;">            player.being_attack(enemy_attack_value)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># ---snip---</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>目前完整代码：</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> random</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Creature</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">name</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">hp</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.name </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> name</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.hp </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> hp</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> attack</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F8F8F2;">        attack_value </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> random.randint(</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">50</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#F8F8F2;"> attack_value</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> not_dead</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.hp </span><span style="color:#F92672;">&gt;</span><span style="color:#AE81FF;"> 0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> being_attack</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">attack_value</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#E6DB74;">        &quot;&quot;&quot;受到伤害（向下取整避免血量显示为浮点数，并且保证了血量不会出现负数&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.hp </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> max</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.hp</span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;">attack_value))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> show_status</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;</span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&#39;s HP → </span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.hp</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">player </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Creature(</span><span style="color:#E6DB74;">&#39;Ran&#39;</span><span style="color:#F8F8F2;">,</span><span style="color:#AE81FF;">100</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">enemy </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Creature(</span><span style="color:#E6DB74;">&#39;Monster&#39;</span><span style="color:#F8F8F2;">,</span><span style="color:#AE81FF;">80</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">while</span><span style="color:#F8F8F2;"> player.not_dead() </span><span style="color:#F92672;">and</span><span style="color:#F8F8F2;"> enemy.not_dead():</span></span>
<span class="line"><span style="color:#F8F8F2;">    player.show_status()</span></span>
<span class="line"><span style="color:#F8F8F2;">    enemy.show_status()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    user_input </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;Attack or Defence (A/D): &#39;</span><span style="color:#F8F8F2;">).strip().upper()</span></span>
<span class="line"><span style="color:#F92672;">    while</span><span style="color:#F8F8F2;"> user_input </span><span style="color:#F92672;">not</span><span style="color:#F92672;"> in</span><span style="color:#F8F8F2;"> (</span><span style="color:#E6DB74;">&#39;A&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;D&#39;</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F8F8F2;">        user_input </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;输入无效，请重新输入 A 或 D&#39;</span><span style="color:#F8F8F2;">).strip().upper()</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> user_input </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;A&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">        enemy_status </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> random.choice([</span><span style="color:#E6DB74;">&#39;A&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;D&#39;</span><span style="color:#F8F8F2;">])</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> enemy_status </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;D&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">enemy.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> chose to defend!&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            player_attack_value </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0.5</span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;">player.attack()</span></span>
<span class="line"><span style="color:#F92672;">        else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">enemy.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> chose to attack!&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            player_attack_value </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> player.attack()</span></span>
<span class="line"><span style="color:#F8F8F2;">            enemy_attack_value </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> enemy.attack()</span></span>
<span class="line"><span style="color:#F8F8F2;">            player.being_attack(enemy_attack_value)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">        enemy.being_attack(player_attack_value)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">    elif</span><span style="color:#F8F8F2;"> user_input </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;D&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">        enemy_status </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> random.choice([</span><span style="color:#E6DB74;">&#39;A&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;D&#39;</span><span style="color:#F8F8F2;">])</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> enemy_status </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;D&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">enemy.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> chose to defend!&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;Both defended, no damage dealt.&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">        else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">enemy.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> chose to attack!&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            enemy_attack_value </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0.1</span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;">enemy.attack()</span></span>
<span class="line"><span style="color:#F8F8F2;">            player.being_attack(enemy_attack_value)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> player.hp </span><span style="color:#F92672;">&gt;</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;You win! Your HP: </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">player.hp</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;You lose! &quot;</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h4 id="_9-4-5-改良实现" tabindex="-1"><a class="header-anchor" href="#_9-4-5-改良实现"><span>9.4.5 改良实现</span></a></h4>`,140)),s("ul",null,[s("li",null,[l[14]||(l[14]=s("p",null,"可优化点一：玩家进行攻击操作时，无论敌人什么状态（攻击or防守），玩家都要攻击，敌人一定会减血。",-1)),p(t,{data:[{id:"优化前"},{id:"优化后"}]},{title0:a(({value:e,isActive:o})=>[...l[10]||(l[10]=[n("优化前",-1)])]),title1:a(({value:e,isActive:o})=>[...l[11]||(l[11]=[n("优化后",-1)])]),tab0:a(({value:e,isActive:o})=>[...l[12]||(l[12]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",{class:"language-python"},[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F8F8F2"}}," user_input "),s("span",{style:{color:"#F92672"}},"=="),s("span",{style:{color:"#E6DB74"}}," 'A'"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        enemy_status "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," random.choice(["),s("span",{style:{color:"#E6DB74"}},"'A'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'D'"),s("span",{style:{color:"#F8F8F2"}},"])")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        if"),s("span",{style:{color:"#F8F8F2"}}," enemy_status "),s("span",{style:{color:"#F92672"}},"=="),s("span",{style:{color:"#E6DB74"}}," 'D'"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"            print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"f"),s("span",{style:{color:"#E6DB74"}},"'"),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#F8F8F2"}},"enemy.name"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}}," chose to defend!'"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            player_attack_value "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 0.5"),s("span",{style:{color:"#F92672"}},"*"),s("span",{style:{color:"#F8F8F2"}},"player.attack()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        else"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"            print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"f"),s("span",{style:{color:"#E6DB74"}},"'"),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#F8F8F2"}},"enemy.name"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}}," chose to attack!'"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            player_attack_value "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," player.attack()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            enemy_attack_value "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," enemy.attack()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            player.being_attack(enemy_attack_value)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        enemy.being_attack(player_attack_value)")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])]),tab1:a(({value:e,isActive:o})=>[...l[13]||(l[13]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",{class:"language-python"},[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F8F8F2"}}," user_input "),s("span",{style:{color:"#F92672"}},"=="),s("span",{style:{color:"#E6DB74"}}," 'A'"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        enemy_status "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," random.choice(["),s("span",{style:{color:"#E6DB74"}},"'A'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'D'"),s("span",{style:{color:"#F8F8F2"}},"])")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        player_attack_coefficient "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 1")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        if"),s("span",{style:{color:"#F8F8F2"}}," enemy_status "),s("span",{style:{color:"#F92672"}},"=="),s("span",{style:{color:"#E6DB74"}}," 'D'"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"            print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"f"),s("span",{style:{color:"#E6DB74"}},"'"),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#F8F8F2"}},"enemy.name"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}}," chose to defend!'"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            player_attack_coefficient "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 0.5")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        else"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"            print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"f"),s("span",{style:{color:"#E6DB74"}},"'"),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#F8F8F2"}},"enemy.name"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}}," chose to attack!'"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            enemy_attack_value "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," enemy.attack()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            player.being_attack(enemy_attack_value)")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            ")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        player_attack_value "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," player.attack()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        enemy.being_attack(player_attack_value "),s("span",{style:{color:"#F92672"}},"*"),s("span",{style:{color:"#F8F8F2"}}," player_attack_coefficient)")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])]),_:1})]),s("li",null,[l[19]||(l[19]=s("p",null,"可优化点二：玩家选择攻击后要判断敌人状态，玩家选择防守时也同样要判断敌人状态，都需要生成一个表示敌人状态的变量。",-1)),p(t,{data:[{id:"优化前"},{id:"优化后"}]},{title0:a(({value:e,isActive:o})=>[...l[15]||(l[15]=[n("优化前",-1)])]),title1:a(({value:e,isActive:o})=>[...l[16]||(l[16]=[n("优化后",-1)])]),tab0:a(({value:e,isActive:o})=>[...l[17]||(l[17]=[s("div",{class:"language-python line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"python",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",{class:"language-python"},[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F8F8F2"}}," user_input "),s("span",{style:{color:"#F92672"}},"=="),s("span",{style:{color:"#E6DB74"}}," 'A'"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        enemy_status "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," random.choice(["),s("span",{style:{color:"#E6DB74"}},"'A'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'D'"),s("span",{style:{color:"#F8F8F2"}},"])")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        player_attack_coefficient "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 1")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        if"),s("span",{style:{color:"#F8F8F2"}}," enemy_status "),s("span",{style:{color:"#F92672"}},"=="),s("span",{style:{color:"#E6DB74"}}," 'D'"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"            print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"f"),s("span",{style:{color:"#E6DB74"}},"'"),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#F8F8F2"}},"enemy.name"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}}," chose to defend!'"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            player_attack_coefficient "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 0.5")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        else"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"            print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"f"),s("span",{style:{color:"#E6DB74"}},"'"),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#F8F8F2"}},"enemy.name"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}}," chose to attack!'"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            enemy_attack_value "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," enemy.attack()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            player.being_attack(enemy_attack_value)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        player_attack_value "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," player.attack()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        enemy.being_attack(player_attack_value "),s("span",{style:{color:"#F92672"}},"*"),s("span",{style:{color:"#F8F8F2"}}," player_attack_coefficient)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    elif"),s("span",{style:{color:"#F8F8F2"}}," user_input "),s("span",{style:{color:"#F92672"}},"=="),s("span",{style:{color:"#E6DB74"}}," 'D'"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        enemy_status "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," random.choice(["),s("span",{style:{color:"#E6DB74"}},"'A'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'D'"),s("span",{style:{color:"#F8F8F2"}},"])")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        if"),s("span",{style:{color:"#F8F8F2"}}," enemy_status "),s("span",{style:{color:"#F92672"}},"=="),s("span",{style:{color:"#E6DB74"}}," 'D'"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"            print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"f"),s("span",{style:{color:"#E6DB74"}},"'"),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#F8F8F2"}},"enemy.name"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}}," chose to defend!'"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"            print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},"'Both defended, no damage dealt.'"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        else"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"            print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"f"),s("span",{style:{color:"#E6DB74"}},"'"),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#F8F8F2"}},"enemy.name"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}}," chose to attack!'"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            enemy_attack_value "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 0.1"),s("span",{style:{color:"#F92672"}},"*"),s("span",{style:{color:"#F8F8F2"}},"enemy.attack()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            player.being_attack(enemy_attack_value)")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])]),tab1:a(({value:e,isActive:o})=>[...l[18]||(l[18]=[s("div",{class:"language-python line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"python",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",{class:"language-python"},[s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# 将涉及敌人状态的代码提出来")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    enemy_status "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," random.choice(["),s("span",{style:{color:"#E6DB74"}},"'A'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'D'"),s("span",{style:{color:"#F8F8F2"}},"])")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F8F8F2"}}," user_input "),s("span",{style:{color:"#F92672"}},"=="),s("span",{style:{color:"#E6DB74"}}," 'A'"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        player_attack_coefficient "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 1")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        if"),s("span",{style:{color:"#F8F8F2"}}," enemy_status "),s("span",{style:{color:"#F92672"}},"=="),s("span",{style:{color:"#E6DB74"}}," 'D'"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"            print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"f"),s("span",{style:{color:"#E6DB74"}},"'"),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#F8F8F2"}},"enemy.name"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}}," chose to defend!'"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            player_attack_coefficient "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 0.5")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        else"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"            print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"f"),s("span",{style:{color:"#E6DB74"}},"'"),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#F8F8F2"}},"enemy.name"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}}," chose to attack!'"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            enemy_attack_value "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," enemy.attack()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            player.being_attack(enemy_attack_value)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        player_attack_value "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," player.attack()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        enemy.being_attack(player_attack_value "),s("span",{style:{color:"#F92672"}},"*"),s("span",{style:{color:"#F8F8F2"}}," player_attack_coefficient)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    elif"),s("span",{style:{color:"#F8F8F2"}}," user_input "),s("span",{style:{color:"#F92672"}},"=="),s("span",{style:{color:"#E6DB74"}}," 'D'"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        if"),s("span",{style:{color:"#F8F8F2"}}," enemy_status "),s("span",{style:{color:"#F92672"}},"=="),s("span",{style:{color:"#E6DB74"}}," 'D'"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"            print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"f"),s("span",{style:{color:"#E6DB74"}},"'"),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#F8F8F2"}},"enemy.name"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}}," chose to defend!'"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"            print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},"'Both defended, no damage dealt.'"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        else"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"            print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"f"),s("span",{style:{color:"#E6DB74"}},"'"),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#F8F8F2"}},"enemy.name"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}}," chose to attack!'"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            enemy_attack_value "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 0.1"),s("span",{style:{color:"#F92672"}},"*"),s("span",{style:{color:"#F8F8F2"}},"enemy.attack()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            player.being_attack(enemy_attack_value)")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])]),_:1})])]),l[70]||(l[70]=c(`<p>当我们优化后，发现第一个优化其实意义不大，但是在实际开发中就是如此，你更新了一个新的功能或代码，客户、用户觉得没必要，但是我们也懒得改回去。</p><p>目前完整代码：</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> random</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Creature</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">name</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">hp</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.name </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> name</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.hp </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> hp</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> attack</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F8F8F2;">        attack_value </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> random.randint(</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">50</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#F8F8F2;"> attack_value</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> not_dead</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.hp </span><span style="color:#F92672;">&gt;</span><span style="color:#AE81FF;"> 0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> being_attack</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">attack_value</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#E6DB74;">        &quot;&quot;&quot;受到伤害（向下取整避免血量显示为浮点数，并且保证了血量不会出现负数&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.hp </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> max</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.hp</span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;">attack_value))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> show_status</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;</span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&#39;s HP → </span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.hp</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">player </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Creature(</span><span style="color:#E6DB74;">&#39;Ran&#39;</span><span style="color:#F8F8F2;">,</span><span style="color:#AE81FF;">100</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">enemy </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Creature(</span><span style="color:#E6DB74;">&#39;Monster&#39;</span><span style="color:#F8F8F2;">,</span><span style="color:#AE81FF;">80</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">while</span><span style="color:#F8F8F2;"> player.not_dead() </span><span style="color:#F92672;">and</span><span style="color:#F8F8F2;"> enemy.not_dead():</span></span>
<span class="line"><span style="color:#F8F8F2;">    player.show_status()</span></span>
<span class="line"><span style="color:#F8F8F2;">    enemy.show_status()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    user_input </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;Attack or Defence (A/D): &#39;</span><span style="color:#F8F8F2;">).strip().upper()</span></span>
<span class="line"><span style="color:#F92672;">    while</span><span style="color:#F8F8F2;"> user_input </span><span style="color:#F92672;">not</span><span style="color:#F92672;"> in</span><span style="color:#F8F8F2;"> (</span><span style="color:#E6DB74;">&#39;A&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;D&#39;</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F8F8F2;">        user_input </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;输入无效，请重新输入 A 或 D&#39;</span><span style="color:#F8F8F2;">).strip().upper()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    enemy_status </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> random.choice([</span><span style="color:#E6DB74;">&#39;A&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;D&#39;</span><span style="color:#F8F8F2;">])</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> user_input </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;A&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">        player_attack_coefficient </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 1</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> enemy_status </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;D&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">enemy.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> chose to defend!&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            player_attack_coefficient </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0.5</span></span>
<span class="line"><span style="color:#F92672;">        else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">enemy.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> chose to attack!&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            enemy_attack_value </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> enemy.attack()</span></span>
<span class="line"><span style="color:#F8F8F2;">            player.being_attack(enemy_attack_value)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">        player_attack_value </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> player.attack()</span></span>
<span class="line"><span style="color:#F8F8F2;">        enemy.being_attack(player_attack_value </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> player_attack_coefficient)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">    elif</span><span style="color:#F8F8F2;"> user_input </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;D&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> enemy_status </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;D&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">enemy.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> chose to defend!&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;Both defended, no damage dealt.&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">        else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">enemy.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> chose to attack!&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            enemy_attack_value </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0.1</span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;">enemy.attack()</span></span>
<span class="line"><span style="color:#F8F8F2;">            player.being_attack(enemy_attack_value)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> player.hp </span><span style="color:#F92672;">&gt;</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;You win! Your HP: </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">player.hp</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;You lose! &quot;</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h4 id="_9-4-6-游戏策略升级" tabindex="-1"><a class="header-anchor" href="#_9-4-6-游戏策略升级"><span>9.4.6 游戏策略升级</span></a></h4><p>当前游戏策略并不完备。</p><p>因为玩家防守时，敌人必须要攻击，不能两个人都防守。</p><p>因此优化为：玩家防守，敌人必攻击！</p><p>玩家防守情况中的代码可以还原为前面的版本，里面不再包含判断敌人状态的步骤。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">    elif</span><span style="color:#F8F8F2;"> user_input </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;D&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">enemy.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> chose to attack!&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            enemy_attack_value </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0.1</span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;">enemy.attack()</span></span>
<span class="line"><span style="color:#F8F8F2;">            player.being_attack(enemy_attack_value)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>发现：可能最开始的是最好的。</p><p>目前完整代码：</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> random</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Creature</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">name</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">hp</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.name </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> name</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.hp </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> hp</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> attack</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F8F8F2;">        attack_value </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> random.randint(</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">50</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#F8F8F2;"> attack_value</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> not_dead</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.hp </span><span style="color:#F92672;">&gt;</span><span style="color:#AE81FF;"> 0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> being_attack</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">attack_value</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#E6DB74;">        &quot;&quot;&quot;受到伤害（向下取整避免血量显示为浮点数，并且保证了血量不会出现负数&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.hp </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> max</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.hp</span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;">attack_value))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> show_status</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;</span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&#39;s HP → </span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.hp</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">player </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Creature(</span><span style="color:#E6DB74;">&#39;Ran&#39;</span><span style="color:#F8F8F2;">,</span><span style="color:#AE81FF;">100</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">enemy </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Creature(</span><span style="color:#E6DB74;">&#39;Monster&#39;</span><span style="color:#F8F8F2;">,</span><span style="color:#AE81FF;">80</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">while</span><span style="color:#F8F8F2;"> player.not_dead() </span><span style="color:#F92672;">and</span><span style="color:#F8F8F2;"> enemy.not_dead():</span></span>
<span class="line"><span style="color:#F8F8F2;">    player.show_status()</span></span>
<span class="line"><span style="color:#F8F8F2;">    enemy.show_status()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    user_input </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;Attack or Defence (A/D): &#39;</span><span style="color:#F8F8F2;">).strip().upper()</span></span>
<span class="line"><span style="color:#F92672;">    while</span><span style="color:#F8F8F2;"> user_input </span><span style="color:#F92672;">not</span><span style="color:#F92672;"> in</span><span style="color:#F8F8F2;"> (</span><span style="color:#E6DB74;">&#39;A&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;D&#39;</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F8F8F2;">        user_input </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;输入无效，请重新输入 A 或 D&#39;</span><span style="color:#F8F8F2;">).strip().upper()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    enemy_status </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> random.choice([</span><span style="color:#E6DB74;">&#39;A&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;D&#39;</span><span style="color:#F8F8F2;">])</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> user_input </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;A&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">        player_attack_coefficient </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 1</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> enemy_status </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;D&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">enemy.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> chose to defend!&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            player_attack_coefficient </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0.5</span></span>
<span class="line"><span style="color:#F92672;">        else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">enemy.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> chose to attack!&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            enemy_attack_value </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> enemy.attack()</span></span>
<span class="line"><span style="color:#F8F8F2;">            player.being_attack(enemy_attack_value)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">        player_attack_value </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> player.attack()</span></span>
<span class="line"><span style="color:#F8F8F2;">        enemy.being_attack(player_attack_value </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> player_attack_coefficient)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">    elif</span><span style="color:#F8F8F2;"> user_input </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;D&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">enemy.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> chose to attack!&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            enemy_attack_value </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0.1</span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;">enemy.attack()</span></span>
<span class="line"><span style="color:#F8F8F2;">            player.being_attack(enemy_attack_value)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> player.hp </span><span style="color:#F92672;">&gt;</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;You win! Your HP: </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">player.hp</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;You lose! &quot;</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h4 id="_9-4-7-玩家回血技能" tabindex="-1"><a class="header-anchor" href="#_9-4-7-玩家回血技能"><span>9.4.7 玩家回血技能</span></a></h4><p>当玩家血量低于50%时，提示玩家可以输入“H”来使用治疗技能，直接回血 100% （满血）。</p><p>要求：</p><ol><li>只能使用一次！</li><li>无法随时使用回血技能，只有在提示出现时才能够使用。</li><li>血量低于一般按照初始化传入的参数决定，随其变化。</li></ol><p>第一步：增加初始血量值</p>`,17)),p(t,{data:[{id:"个人方法"},{id:"老师方法"}]},{title0:a(({value:e,isActive:o})=>[...l[20]||(l[20]=[n("个人方法",-1)])]),title1:a(({value:e,isActive:o})=>[...l[21]||(l[21]=[n("老师方法",-1)])]),tab0:a(({value:e,isActive:o})=>[...l[22]||(l[22]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",{class:"language-python"},[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"player "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," Creature("),s("span",{style:{color:"#E6DB74"}},"'Ran'"),s("span",{style:{color:"#F8F8F2"}},","),s("span",{style:{color:"#AE81FF"}},"100"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"enemy "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," Creature("),s("span",{style:{color:"#E6DB74"}},"'Monster'"),s("span",{style:{color:"#F8F8F2"}},","),s("span",{style:{color:"#AE81FF"}},"80"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"player_initial_hp "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," player.hp         "),s("span",{style:{color:"#88846F"}},"# 这里是一个值，成立，若是字典/列表则需要考虑深浅拷贝问题")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])]),tab1:a(({value:e,isActive:o})=>[...l[23]||(l[23]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",{class:"language-python"},[s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"Creature"),s("span",{style:{color:"#F8F8F2"}},"():")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#66D9EF"}}," __init__"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"name"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"hp"),s("span",{style:{color:"#F8F8F2"}},"):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".name "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," name")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".hp "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," hp")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".max_hp "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," hp              "),s("span",{style:{color:"#88846F"}},"# 增加 max_hp 这个变量")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])]),_:1}),l[71]||(l[71]=c(`<p>第二步：类里增加一个函数</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> heal_full</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#E6DB74;">        &quot;&quot;&quot;直接回到初始满血&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.hp </span><span style="color:#F92672;">=</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.max_hp</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>第三步：显示血量的函数随之可以优化，显示当前血量/原始血量。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> show_status</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;</span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&#39;s HP → </span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.hp</span><span style="color:#F92672;">/</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.max_hp</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>第四步：因为只能提示一次，所以增加一个变量 <code>heal_used</code> 判断是否显示过了。个人修改时纠结的问题在于，在循环内设置了这个变量，那么循环时会被覆盖，重新初始化，解决的方法就是把这个变量放到循环外面。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">player </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Creature(</span><span style="color:#E6DB74;">&#39;Ran&#39;</span><span style="color:#F8F8F2;">,</span><span style="color:#AE81FF;">100</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">enemy </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Creature(</span><span style="color:#E6DB74;">&#39;Monster&#39;</span><span style="color:#F8F8F2;">,</span><span style="color:#AE81FF;">80</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">heal_used </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> False</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>后面具体实现过程如下：</p>`,7)),p(t,{data:[{id:"个人代码"},{id:"老师代码"}]},{title0:a(({value:e,isActive:o})=>[...l[24]||(l[24]=[n("个人代码",-1)])]),title1:a(({value:e,isActive:o})=>[...l[25]||(l[25]=[n("老师代码",-1)])]),tab0:a(({value:e,isActive:o})=>[...l[26]||(l[26]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",{class:"language-python"},[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F8F8F2"}}," (player.hp "),s("span",{style:{color:"#F92672"}},"<"),s("span",{style:{color:"#F8F8F2"}}," player.max_hp"),s("span",{style:{color:"#F92672"}},"*"),s("span",{style:{color:"#AE81FF"}},"0.5"),s("span",{style:{color:"#F8F8F2"}},") "),s("span",{style:{color:"#F92672"}},"and"),s("span",{style:{color:"#F8F8F2"}}," ("),s("span",{style:{color:"#F92672"}},"not"),s("span",{style:{color:"#F8F8F2"}}," heal_used):    "),s("span",{style:{color:"#88846F"}},"# 原本包含2个if ，可以通过 and 的使用进行合并")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        recover "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#66D9EF"}}," input"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},"'血量低于 50% ，可以输入 H 使用治疗技能，直接恢复满血状态：'"),s("span",{style:{color:"#F8F8F2"}},").strip().upper()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        if"),s("span",{style:{color:"#F8F8F2"}}," recover "),s("span",{style:{color:"#F92672"}},"=="),s("span",{style:{color:"#E6DB74"}}," 'H'"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            player.heal_full()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        heal_used "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," True")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])]),tab1:a(({value:e,isActive:o})=>[...l[27]||(l[27]=[s("div",{class:"language-python line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"python",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",{class:"language-python"},[s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# 将回血和攻击/防守进行合并")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"player "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," Creature("),s("span",{style:{color:"#E6DB74"}},"'Ran'"),s("span",{style:{color:"#F8F8F2"}},","),s("span",{style:{color:"#AE81FF"}},"100"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"enemy "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," Creature("),s("span",{style:{color:"#E6DB74"}},"'Monster'"),s("span",{style:{color:"#F8F8F2"}},","),s("span",{style:{color:"#AE81FF"}},"80"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"heal_used "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," False"),s("span",{style:{color:"#88846F"}},"       # 限制回血只能用一次")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"while"),s("span",{style:{color:"#F8F8F2"}}," player.not_dead() "),s("span",{style:{color:"#F92672"}},"and"),s("span",{style:{color:"#F8F8F2"}}," enemy.not_dead():")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    player.show_status()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    enemy.show_status()")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    # 是否出现治疗提示：仅当当前血量<初始值50% 并且尚未使用回血功能")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    can_heal_now "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," ("),s("span",{style:{color:"#F92672"}},"not"),s("span",{style:{color:"#F8F8F2"}}," heal_used) "),s("span",{style:{color:"#F92672"}},"and"),s("span",{style:{color:"#F8F8F2"}}," (player.hp "),s("span",{style:{color:"#F92672"}},"<"),s("span",{style:{color:"#F8F8F2"}}," player.max_hp "),s("span",{style:{color:"#F92672"}},"*"),s("span",{style:{color:"#AE81FF"}}," 0.5"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F8F8F2"}}," can_heal_now:")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        prompt "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}}," 'Attack or Defence or Heal (A/D/H): '")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        valid_inputs "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," {"),s("span",{style:{color:"#E6DB74"}},"'A'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'D'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'H'"),s("span",{style:{color:"#F8F8F2"}},"}")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        extra_tip "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}}," '（提示：现在可以按 H 回满血，仅此一次）'")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"        print"),s("span",{style:{color:"#F8F8F2"}},"(extra_tip)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    else"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        prompt "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}}," 'Attack or Defence (A/D): '")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        valid_inputs "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," {"),s("span",{style:{color:"#E6DB74"}},"'A'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'D'"),s("span",{style:{color:"#F8F8F2"}},"}")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    user_input "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#66D9EF"}}," input"),s("span",{style:{color:"#F8F8F2"}},"(prompt).strip().upper()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    while"),s("span",{style:{color:"#F8F8F2"}}," user_input "),s("span",{style:{color:"#F92672"}},"not"),s("span",{style:{color:"#F92672"}}," in"),s("span",{style:{color:"#F8F8F2"}}," valid_inputs:")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        user_input "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#66D9EF"}}," input"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},"'输入无效，请重新输入: '"),s("span",{style:{color:"#F92672"}}," +"),s("span",{style:{color:"#F8F8F2"}}," prompt).strip().upper()")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    enemy_status "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," random.choice(["),s("span",{style:{color:"#E6DB74"}},"'A'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'D'"),s("span",{style:{color:"#F8F8F2"}},"])")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F8F8F2"}}," user_input "),s("span",{style:{color:"#F92672"}},"=="),s("span",{style:{color:"#E6DB74"}}," 'H'"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        # 只有在 can_heal_now 为 True 时才会进入这里")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"        print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},"'你使用了治疗技能，血量已经回满。'"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        player.heal_full()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        heal_used "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," True")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    elif"),s("span",{style:{color:"#F8F8F2"}}," user_input "),s("span",{style:{color:"#F92672"}},"=="),s("span",{style:{color:"#E6DB74"}}," 'A'"),s("span",{style:{color:"#F8F8F2"}},":")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])]),_:1}),l[72]||(l[72]=s("p",null,"目前完整代码：",-1)),p(t,{data:[{id:"个人完整代码"},{id:"老师完整代码"}]},{title0:a(({value:e,isActive:o})=>[...l[28]||(l[28]=[n("个人完整代码",-1)])]),title1:a(({value:e,isActive:o})=>[...l[29]||(l[29]=[n("老师完整代码",-1)])]),tab0:a(({value:e,isActive:o})=>[...l[30]||(l[30]=[s("div",{class:"language-python line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"python",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",{class:"language-python"},[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F8F8F2"}}," random")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"Creature"),s("span",{style:{color:"#F8F8F2"}},"():")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#66D9EF"}}," __init__"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"name"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"hp"),s("span",{style:{color:"#F8F8F2"}},"):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".name "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," name")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".hp "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," hp")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".max_hp "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," hp              "),s("span",{style:{color:"#88846F"}},"# 记录初始血量")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#A6E22E"}}," attack"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},"):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        attack_value "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," random.randint("),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"50"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        return"),s("span",{style:{color:"#F8F8F2"}}," attack_value")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#A6E22E"}}," not_dead"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},"):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        return"),s("span",{style:{color:"#FD971F"}}," self"),s("span",{style:{color:"#F8F8F2"}},".hp "),s("span",{style:{color:"#F92672"}},">"),s("span",{style:{color:"#AE81FF"}}," 0")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#A6E22E"}}," being_attack"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"attack_value"),s("span",{style:{color:"#F8F8F2"}},"):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},'        """受到伤害（向下取整避免血量显示为浮点数，并且保证了血量不会出现负数"""')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".hp "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#66D9EF"}}," max"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F"}},"self"),s("span",{style:{color:"#F8F8F2"}},".hp"),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}},"attack_value))")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#A6E22E"}}," show_status"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},"):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"        print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"f"),s("span",{style:{color:"#E6DB74"}},'"'),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#FD971F"}},"self"),s("span",{style:{color:"#F8F8F2"}},".name"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}},"'s HP → "),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#FD971F"}},"self"),s("span",{style:{color:"#F8F8F2"}},".hp"),s("span",{style:{color:"#F92672"}},"/"),s("span",{style:{color:"#FD971F"}},"self"),s("span",{style:{color:"#F8F8F2"}},".max_hp"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}},'"'),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#A6E22E"}}," heal_full"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},"):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},'        """直接回到初始满血"""')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".hp "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#FD971F"}}," self"),s("span",{style:{color:"#F8F8F2"}},".max_hp")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"player "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," Creature("),s("span",{style:{color:"#E6DB74"}},"'Ran'"),s("span",{style:{color:"#F8F8F2"}},","),s("span",{style:{color:"#AE81FF"}},"100"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"enemy "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," Creature("),s("span",{style:{color:"#E6DB74"}},"'Monster'"),s("span",{style:{color:"#F8F8F2"}},","),s("span",{style:{color:"#AE81FF"}},"80"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"heal_used "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," False")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"while"),s("span",{style:{color:"#F8F8F2"}}," player.not_dead() "),s("span",{style:{color:"#F92672"}},"and"),s("span",{style:{color:"#F8F8F2"}}," enemy.not_dead():")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    player.show_status()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    enemy.show_status()")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    user_input "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#66D9EF"}}," input"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},"'Attack or Defence (A/D): '"),s("span",{style:{color:"#F8F8F2"}},").strip().upper()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    while"),s("span",{style:{color:"#F8F8F2"}}," user_input "),s("span",{style:{color:"#F92672"}},"not"),s("span",{style:{color:"#F92672"}}," in"),s("span",{style:{color:"#F8F8F2"}}," ("),s("span",{style:{color:"#E6DB74"}},"'A'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'D'"),s("span",{style:{color:"#F8F8F2"}},"):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        user_input "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#66D9EF"}}," input"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},"'输入无效，请重新输入 A 或 D'"),s("span",{style:{color:"#F8F8F2"}},").strip().upper()")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    enemy_status "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," random.choice(["),s("span",{style:{color:"#E6DB74"}},"'A'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'D'"),s("span",{style:{color:"#F8F8F2"}},"])")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F8F8F2"}}," user_input "),s("span",{style:{color:"#F92672"}},"=="),s("span",{style:{color:"#E6DB74"}}," 'A'"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        player_attack_coefficient "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 1")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        if"),s("span",{style:{color:"#F8F8F2"}}," enemy_status "),s("span",{style:{color:"#F92672"}},"=="),s("span",{style:{color:"#E6DB74"}}," 'D'"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"            print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"f"),s("span",{style:{color:"#E6DB74"}},"'"),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#F8F8F2"}},"enemy.name"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}}," chose to defend!'"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            player_attack_coefficient "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 0.5")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        else"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"            print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"f"),s("span",{style:{color:"#E6DB74"}},"'"),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#F8F8F2"}},"enemy.name"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}}," chose to attack!'"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            enemy_attack_value "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," enemy.attack()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            player.being_attack(enemy_attack_value)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        player_attack_value "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," player.attack()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        enemy.being_attack(player_attack_value "),s("span",{style:{color:"#F92672"}},"*"),s("span",{style:{color:"#F8F8F2"}}," player_attack_coefficient)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    elif"),s("span",{style:{color:"#F8F8F2"}}," user_input "),s("span",{style:{color:"#F92672"}},"=="),s("span",{style:{color:"#E6DB74"}}," 'D'"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"            print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"f"),s("span",{style:{color:"#E6DB74"}},"'"),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#F8F8F2"}},"enemy.name"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}}," chose to attack!'"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            enemy_attack_value "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 0.1"),s("span",{style:{color:"#F92672"}},"*"),s("span",{style:{color:"#F8F8F2"}},"enemy.attack()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            player.being_attack(enemy_attack_value)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F8F8F2"}}," (player.hp "),s("span",{style:{color:"#F92672"}},"<"),s("span",{style:{color:"#F8F8F2"}}," player.max_hp"),s("span",{style:{color:"#F92672"}},"*"),s("span",{style:{color:"#AE81FF"}},"0.5"),s("span",{style:{color:"#F8F8F2"}},") "),s("span",{style:{color:"#F92672"}},"and"),s("span",{style:{color:"#F8F8F2"}}," ("),s("span",{style:{color:"#F92672"}},"not"),s("span",{style:{color:"#F8F8F2"}}," heal_used):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        recover "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#66D9EF"}}," input"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},"'血量低于 50% ，可以输入 H 使用治疗技能，直接恢复满血状态：'"),s("span",{style:{color:"#F8F8F2"}},").strip().upper()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        if"),s("span",{style:{color:"#F8F8F2"}}," recover "),s("span",{style:{color:"#F92672"}},"=="),s("span",{style:{color:"#E6DB74"}}," 'H'"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            player.heal_full()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        heal_used "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," True")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"if"),s("span",{style:{color:"#F8F8F2"}}," player.hp "),s("span",{style:{color:"#F92672"}},">"),s("span",{style:{color:"#AE81FF"}}," 0"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"    print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"f"),s("span",{style:{color:"#E6DB74"}},'"You win! Your HP: '),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#F8F8F2"}},"player.hp"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}},'"'),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"else"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"    print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"f"),s("span",{style:{color:"#E6DB74"}},'"You lose! "'),s("span",{style:{color:"#F8F8F2"}},")")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])]),tab1:a(({value:e,isActive:o})=>[...l[31]||(l[31]=[s("div",{class:"language-python line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"python",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",{class:"language-python"},[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F8F8F2"}}," random")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"Creature"),s("span",{style:{color:"#F8F8F2"}},"():")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#66D9EF"}}," __init__"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"name"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"hp"),s("span",{style:{color:"#F8F8F2"}},"):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".name "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," name")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".hp "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," hp")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".max_hp "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," hp              "),s("span",{style:{color:"#88846F"}},"# 记录初始血量")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#A6E22E"}}," attack"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},"):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        attack_value "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," random.randint("),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"50"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        return"),s("span",{style:{color:"#F8F8F2"}}," attack_value")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#A6E22E"}}," not_dead"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},"):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        return"),s("span",{style:{color:"#FD971F"}}," self"),s("span",{style:{color:"#F8F8F2"}},".hp "),s("span",{style:{color:"#F92672"}},">"),s("span",{style:{color:"#AE81FF"}}," 0")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#A6E22E"}}," being_attack"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"attack_value"),s("span",{style:{color:"#F8F8F2"}},"):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},'        """受到伤害（向下取整避免血量显示为浮点数，并且保证了血量不会出现负数"""')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".hp "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#66D9EF"}}," max"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F"}},"self"),s("span",{style:{color:"#F8F8F2"}},".hp"),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}},"attack_value))")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#A6E22E"}}," show_status"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},"):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"        print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"f"),s("span",{style:{color:"#E6DB74"}},'"'),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#FD971F"}},"self"),s("span",{style:{color:"#F8F8F2"}},".name"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}},"'s HP → "),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#FD971F"}},"self"),s("span",{style:{color:"#F8F8F2"}},".hp"),s("span",{style:{color:"#F92672"}},"/"),s("span",{style:{color:"#FD971F"}},"self"),s("span",{style:{color:"#F8F8F2"}},".max_hp"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}},'"'),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#A6E22E"}}," heal_full"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},"):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},'        """直接回到初始满血"""')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".hp "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#FD971F"}}," self"),s("span",{style:{color:"#F8F8F2"}},".max_hp")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"player "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," Creature("),s("span",{style:{color:"#E6DB74"}},"'Ran'"),s("span",{style:{color:"#F8F8F2"}},","),s("span",{style:{color:"#AE81FF"}},"100"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"enemy "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," Creature("),s("span",{style:{color:"#E6DB74"}},"'Monster'"),s("span",{style:{color:"#F8F8F2"}},","),s("span",{style:{color:"#AE81FF"}},"80"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"heal_used "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," False"),s("span",{style:{color:"#88846F"}},"       # 限制回血只能用一次")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"while"),s("span",{style:{color:"#F8F8F2"}}," player.not_dead() "),s("span",{style:{color:"#F92672"}},"and"),s("span",{style:{color:"#F8F8F2"}}," enemy.not_dead():")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    player.show_status()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    enemy.show_status()")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    # 是否出现治疗提示：仅当当前血量<初始值50% 并且尚未使用回血功能")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    can_heal_now "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," ("),s("span",{style:{color:"#F92672"}},"not"),s("span",{style:{color:"#F8F8F2"}}," heal_used) "),s("span",{style:{color:"#F92672"}},"and"),s("span",{style:{color:"#F8F8F2"}}," (player.hp "),s("span",{style:{color:"#F92672"}},"<"),s("span",{style:{color:"#F8F8F2"}}," player.max_hp "),s("span",{style:{color:"#F92672"}},"*"),s("span",{style:{color:"#AE81FF"}}," 0.5"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F8F8F2"}}," can_heal_now:")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        prompt "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}}," 'Attack or Defence or Heal (A/D/H): '")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        valid_inputs "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," {"),s("span",{style:{color:"#E6DB74"}},"'A'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'D'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'H'"),s("span",{style:{color:"#F8F8F2"}},"}")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        extra_tip "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}}," '（提示：现在可以按 H 回满血，仅此一次）'")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"        print"),s("span",{style:{color:"#F8F8F2"}},"(extra_tip)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    else"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        prompt "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}}," 'Attack or Defence (A/D): '")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        valid_inputs "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," {"),s("span",{style:{color:"#E6DB74"}},"'A'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'D'"),s("span",{style:{color:"#F8F8F2"}},"}")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    user_input "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#66D9EF"}}," input"),s("span",{style:{color:"#F8F8F2"}},"(prompt).strip().upper()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    while"),s("span",{style:{color:"#F8F8F2"}}," user_input "),s("span",{style:{color:"#F92672"}},"not"),s("span",{style:{color:"#F92672"}}," in"),s("span",{style:{color:"#F8F8F2"}}," valid_inputs:")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        user_input "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#66D9EF"}}," input"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},"'输入无效，请重新输入: '"),s("span",{style:{color:"#F92672"}}," +"),s("span",{style:{color:"#F8F8F2"}}," prompt).strip().upper()")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    enemy_status "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," random.choice(["),s("span",{style:{color:"#E6DB74"}},"'A'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'D'"),s("span",{style:{color:"#F8F8F2"}},"])")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F8F8F2"}}," user_input "),s("span",{style:{color:"#F92672"}},"=="),s("span",{style:{color:"#E6DB74"}}," 'H'"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        # 只有在 can_heal_now 为 True 时才会进入这里")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"        print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},"'你使用了治疗技能，血量已经回满。'"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        player.heal_full()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        heal_used "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," True")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    elif"),s("span",{style:{color:"#F8F8F2"}}," user_input "),s("span",{style:{color:"#F92672"}},"=="),s("span",{style:{color:"#E6DB74"}}," 'A'"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        player_attack_coefficient "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 1")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        if"),s("span",{style:{color:"#F8F8F2"}}," enemy_status "),s("span",{style:{color:"#F92672"}},"=="),s("span",{style:{color:"#E6DB74"}}," 'D'"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"            print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"f"),s("span",{style:{color:"#E6DB74"}},"'"),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#F8F8F2"}},"enemy.name"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}}," chose to defend!'"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            player_attack_coefficient "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 0.5")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        else"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"            print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"f"),s("span",{style:{color:"#E6DB74"}},"'"),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#F8F8F2"}},"enemy.name"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}}," chose to attack!'"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            enemy_attack_value "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," enemy.attack()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            player.being_attack(enemy_attack_value)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        player_attack_value "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," player.attack()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        enemy.being_attack(player_attack_value "),s("span",{style:{color:"#F92672"}},"*"),s("span",{style:{color:"#F8F8F2"}}," player_attack_coefficient)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    elif"),s("span",{style:{color:"#F8F8F2"}}," user_input "),s("span",{style:{color:"#F92672"}},"=="),s("span",{style:{color:"#E6DB74"}}," 'D'"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"            print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"f"),s("span",{style:{color:"#E6DB74"}},"'"),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#F8F8F2"}},"enemy.name"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}}," chose to attack!'"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            enemy_attack_value "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 0.1"),s("span",{style:{color:"#F92672"}},"*"),s("span",{style:{color:"#F8F8F2"}},"enemy.attack()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            player.being_attack(enemy_attack_value)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"if"),s("span",{style:{color:"#F8F8F2"}}," player.hp "),s("span",{style:{color:"#F92672"}},">"),s("span",{style:{color:"#AE81FF"}}," 0"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"    print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"f"),s("span",{style:{color:"#E6DB74"}},'"You win! Your HP: '),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#F8F8F2"}},"player.hp"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}},'"'),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"else"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"    print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"f"),s("span",{style:{color:"#E6DB74"}},'"You lose! "'),s("span",{style:{color:"#F8F8F2"}},")")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])]),_:1}),l[73]||(l[73]=c(`<p>但是上述老师的代码也有个小问题，如果没有选择回血的话，就会一直提示可以使用回血。如果我们希望这个提示和回血的选择只出现一次，就是过这村没这店的情况，就可以将 <code>heal_used = True</code> 从玩家选择 <code>H</code> 的判断中提出来，可以放在提示出现后。</p><hr><p>此外，在将回血功能加入时，需要考虑用户输入 <code>H</code> 的情况，那么可以在用户输入的提示语上进行修改，代码如下：</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> random</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Creature</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">hp</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">name</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.hp </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> hp</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.max_hp </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> hp  </span><span style="color:#88846F;"># 记录初始满血</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.name </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> name</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> attack</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#F8F8F2;"> random.randint(</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">50</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> not_dead</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.hp </span><span style="color:#F92672;">&gt;</span><span style="color:#AE81FF;"> 0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> being_attack</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">dmg</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;font-style:italic;">float</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#E6DB74;">        &quot;&quot;&quot;受到伤害（向下取整以避免浮点 HP），并保证 HP 不会掉到负数以下&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.hp </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> max</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.hp </span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;"> dmg))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> heal_full</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#E6DB74;">        &quot;&quot;&quot;直接回到初始满血&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.hp </span><span style="color:#F92672;">=</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.max_hp</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> show_status</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#88846F;">        # print(f&quot;{self.name}&#39;s HP → {self.hp}&quot;)</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;</span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&#39;s HP → </span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.hp</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">/</span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.max_hp</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">heal_used </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> False</span><span style="color:#88846F;">  # 治疗仅限一次</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">player </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Creature(</span><span style="color:#AE81FF;">100</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;AI悦创&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">enemy </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Creature(</span><span style="color:#AE81FF;">80</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;Enemy&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">while</span><span style="color:#F8F8F2;"> player.not_dead() </span><span style="color:#F92672;">and</span><span style="color:#F8F8F2;"> enemy.not_dead():</span></span>
<span class="line"><span style="color:#F8F8F2;">    player.show_status()</span></span>
<span class="line"><span style="color:#F8F8F2;">    enemy.show_status()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    prompt </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;Attack or Defence (A/D)：&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> (player.hp </span><span style="color:#F92672;">&lt;</span><span style="color:#F8F8F2;"> player.max_hp </span><span style="color:#F92672;">*</span><span style="color:#AE81FF;"> 0.5</span><span style="color:#F8F8F2;">) </span><span style="color:#F92672;">and</span><span style="color:#F8F8F2;"> (</span><span style="color:#F92672;">not</span><span style="color:#F8F8F2;"> heal_used):</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;（提示：你现在可以按 H 回满血，仅此一次）&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        prompt </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;Attack or Defence or Heal (A/D/H)：&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    user_input </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(prompt).strip().upper()</span></span>
<span class="line"><span style="color:#F92672;">    while</span><span style="color:#F8F8F2;"> user_input </span><span style="color:#F92672;">not</span><span style="color:#F92672;"> in</span><span style="color:#F8F8F2;"> (</span><span style="color:#E6DB74;">&quot;A&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;D&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;H&quot;</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F8F8F2;">        user_input </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;输入无效，请重新输入 A 或 D：&quot;</span><span style="color:#F8F8F2;">).strip().upper()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    enemy_status </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#E6DB74;">&#39;Attack&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;Defence&#39;</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">    enemy_choice </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> random.choice(enemy_status)</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> user_input </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &quot;A&quot;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">        player_attack_coefficient </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 1</span><span style="color:#88846F;">  # MR 取名</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> enemy_choice </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &quot;Defence&quot;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">enemy.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> chose to defend!&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            player_attack_coefficient </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0.5</span></span>
<span class="line"><span style="color:#F92672;">        else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">enemy.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> chose to attack!&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            enemy_attack_value </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> enemy.attack()</span></span>
<span class="line"><span style="color:#F8F8F2;">            player.being_attack(enemy_attack_value)</span></span>
<span class="line"><span style="color:#F8F8F2;">        player_attack_value </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> player.attack()</span></span>
<span class="line"><span style="color:#F8F8F2;">        enemy.being_attack(player_attack_value </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> player_attack_coefficient)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">    elif</span><span style="color:#F8F8F2;"> user_input </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &quot;D&quot;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">        enemy_attack_value </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> enemy.attack() </span><span style="color:#F92672;">*</span><span style="color:#AE81FF;"> 0.1</span></span>
<span class="line"><span style="color:#F8F8F2;">        player.being_attack(enemy_attack_value)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">    elif</span><span style="color:#F8F8F2;"> user_input </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &quot;H&quot;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">        player.heal_full()</span></span>
<span class="line"><span style="color:#F8F8F2;">        heal_used </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> True</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">player.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> healed to full health!&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        prompt </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;Attack or Defence (A/D)：&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> player.not_dead():</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;You Win!&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;You Lose!&quot;</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h4 id="_9-4-8-回血技能代价" tabindex="-1"><a class="header-anchor" href="#_9-4-8-回血技能代价"><span>9.4.8 回血技能代价</span></a></h4><p>回血是有代价的，如果玩家使用了回血技能，后续敌人一定会攻击，并且攻击将翻倍。</p><p>可以在敌人攻击时，判断回血技能是否使用，如果使用了，那么攻击 乘2。</p><p>下述代码是在 <code>heal_used = True</code> 放在输入是 <code>H</code> 下的判断中的情况：</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> user_input </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;H&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#88846F;">        # 只有在 can_heal_now 为 True 时才会进入这里</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;你使用了治疗技能，血量已经回满。&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        player.heal_full()</span></span>
<span class="line"><span style="color:#F8F8F2;">        heal_used </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> True</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">    elif</span><span style="color:#F8F8F2;"> user_input </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;A&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">        player_attack_coefficient </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 1</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> enemy_status </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;D&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">enemy.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> chose to defend!&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            player_attack_coefficient </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0.5</span></span>
<span class="line"><span style="color:#F92672;">        else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">enemy.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> chose to attack!&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">            if</span><span style="color:#F8F8F2;"> heal_used:         </span><span style="color:#88846F;"># 判断是否回血治疗了</span></span>
<span class="line"><span style="color:#F8F8F2;">                enemy_attack_value </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 2</span><span style="color:#F92672;"> *</span><span style="color:#F8F8F2;"> enemy.attack()</span></span>
<span class="line"><span style="color:#F92672;">            else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">                enemy_attack_value </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> enemy.attack()</span></span>
<span class="line"><span style="color:#F8F8F2;">            player.being_attack(enemy_attack_value)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">        player_attack_value </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> player.attack()</span></span>
<span class="line"><span style="color:#F8F8F2;">        enemy.being_attack(player_attack_value </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> player_attack_coefficient)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">    elif</span><span style="color:#F8F8F2;"> user_input </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;D&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">enemy.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> chose to attack!&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">            if</span><span style="color:#F8F8F2;"> heal_used:         </span><span style="color:#88846F;"># 判断是否回血治疗了</span></span>
<span class="line"><span style="color:#F8F8F2;">                enemy_attack_value </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 2</span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">0.1</span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;">enemy.attack())</span></span>
<span class="line"><span style="color:#F92672;">            else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">                enemy_attack_value </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0.1</span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;">enemy.attack()</span></span>
<span class="line"><span style="color:#F8F8F2;">            player.being_attack(enemy_attack_value)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>如果我们想要指定“过这村没这店”的情况，那么像我们上面提到过的 <code>heal_used = True</code> 被提到外面，就需要将“提示过”和“使用回血”区分开，因此需要引入一个新变量 <code>heal_penalty_active</code> ，具体代码如下：</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">player </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Creature(</span><span style="color:#E6DB74;">&#39;Ran&#39;</span><span style="color:#F8F8F2;">,</span><span style="color:#AE81FF;">100</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">enemy </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Creature(</span><span style="color:#E6DB74;">&#39;Monster&#39;</span><span style="color:#F8F8F2;">,</span><span style="color:#AE81FF;">80</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">heal_used </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> False</span><span style="color:#88846F;">       # 限制回血只能用一次</span></span>
<span class="line"><span style="color:#F8F8F2;">heal_penalty_active </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> False</span><span style="color:#88846F;">      # 回血代价激活状态</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">while</span><span style="color:#F8F8F2;"> player.not_dead() </span><span style="color:#F92672;">and</span><span style="color:#F8F8F2;"> enemy.not_dead():</span></span>
<span class="line"><span style="color:#F8F8F2;">    player.show_status()</span></span>
<span class="line"><span style="color:#F8F8F2;">    enemy.show_status()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">    # 是否出现治疗提示：仅当当前血量&lt;初始值50% 并且尚未使用回血功能</span></span>
<span class="line"><span style="color:#F8F8F2;">    can_heal_now </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#F92672;">not</span><span style="color:#F8F8F2;"> heal_used) </span><span style="color:#F92672;">and</span><span style="color:#F8F8F2;"> (player.hp </span><span style="color:#F92672;">&lt;</span><span style="color:#F8F8F2;"> player.max_hp </span><span style="color:#F92672;">*</span><span style="color:#AE81FF;"> 0.5</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> can_heal_now:</span></span>
<span class="line"><span style="color:#F8F8F2;">        prompt </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &#39;Attack or Defence or Heal (A/D/H): &#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">        valid_inputs </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&#39;A&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;D&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;H&#39;</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">        extra_tip </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &#39;（提示：现在可以按 H 回满血，仅此一次）&#39;</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(extra_tip)</span></span>
<span class="line"><span style="color:#F8F8F2;">        heal_used </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> True</span><span style="color:#88846F;">  # 说明回血提示出现了，之后不会再出现</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">    else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">        prompt </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &#39;Attack or Defence (A/D): &#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">        valid_inputs </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&#39;A&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;D&#39;</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> heal_penalty_active:</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;【警告】治疗代价生效中，敌人对你的伤害 ×2 ！&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    user_input </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(prompt).strip().upper()</span></span>
<span class="line"><span style="color:#F92672;">    while</span><span style="color:#F8F8F2;"> user_input </span><span style="color:#F92672;">not</span><span style="color:#F92672;"> in</span><span style="color:#F8F8F2;"> valid_inputs:</span></span>
<span class="line"><span style="color:#F8F8F2;">        user_input </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;输入无效，请重新输入: &#39;</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> prompt).strip().upper()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">    # 敌人选择（若玩家选择 D 或者 H ，敌人都直接攻击）</span></span>
<span class="line"><span style="color:#F8F8F2;">    enemy_status </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> random.choice([</span><span style="color:#E6DB74;">&#39;A&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;D&#39;</span><span style="color:#F8F8F2;">])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">    # 当前敌人伤害倍率（是否翻倍）</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> enemy_mul</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#AE81FF;"> 2.0</span><span style="color:#F92672;"> if</span><span style="color:#F8F8F2;"> heal_penalty_active </span><span style="color:#F92672;">else</span><span style="color:#AE81FF;"> 1.0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> user_input </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;H&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#88846F;">        # 只有在 can_heal_now 为 True 时才会进入这里</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;你使用了治疗技能，血量已经回满。&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        player.heal_full()</span></span>
<span class="line"><span style="color:#F8F8F2;">        heal_penalty_active </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> True</span><span style="color:#88846F;">             # 触发治疗代价</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">        # 敌人回合：直接攻击，先治疗再挨打</span></span>
<span class="line"><span style="color:#F8F8F2;">        raw_enemy_attack_value </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> enemy.attack()</span></span>
<span class="line"><span style="color:#F8F8F2;">        damage </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> raw_enemy_attack_value </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> enemy_mul()</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">enemy.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">攻击了你，造成</span><span style="color:#AE81FF;">{</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">(damage)</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">点伤害！（原始</span><span style="color:#AE81FF;">{</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">(raw_enemy_attack_value)</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">×倍率</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">enemy_mul()</span><span style="color:#66D9EF;font-style:italic;">:.0f</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">）&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        player.being_attack(damage)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">    elif</span><span style="color:#F8F8F2;"> user_input </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;A&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">        player_attack_coefficient </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 1</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> enemy_status </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;D&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">enemy.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> chose to defend!&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            player_attack_coefficient </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0.5</span></span>
<span class="line"><span style="color:#F92672;">        else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">enemy.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> chose to attack!&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            raw_enemy_attack_value </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> enemy.attack()</span></span>
<span class="line"><span style="color:#F8F8F2;">            damage </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> raw_enemy_attack_value </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> enemy_mul()</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">enemy.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">攻击了你，造成</span><span style="color:#AE81FF;">{</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">(damage)</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">点伤害！（原始</span><span style="color:#AE81FF;">{</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">(raw_enemy_attack_value)</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">×倍率</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">enemy_mul()</span><span style="color:#66D9EF;font-style:italic;">:.0f</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">）&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            player.being_attack(damage)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">        player_attack_value </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> player.attack()</span></span>
<span class="line"><span style="color:#F8F8F2;">        enemy.being_attack(player_attack_value </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> player_attack_coefficient)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">    elif</span><span style="color:#F8F8F2;"> user_input </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;D&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#88846F;">        # 防御：敌人攻击减伤为 90% ，然后再应用翻倍倍率</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">enemy.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> chose to attack!&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        raw_enemy_attack_value </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> enemy.attack()</span></span>
<span class="line"><span style="color:#F8F8F2;">        damage </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (raw_enemy_attack_value</span><span style="color:#F92672;">*</span><span style="color:#AE81FF;">0.1</span><span style="color:#F8F8F2;">) </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> enemy_mul()</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">enemy.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">攻击了你（被你防住大部分），造成</span><span style="color:#AE81FF;">{</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">(damage)</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">点伤害！&#39;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">              f</span><span style="color:#E6DB74;">&#39;（原始</span><span style="color:#AE81FF;">{</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">(raw_enemy_attack_value)</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">×倍率</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">enemy_mul()</span><span style="color:#66D9EF;font-style:italic;">:.0f</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">）&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        player.being_attack(damage)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>目前完整代码如下：</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> random</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Creature</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">name</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">hp</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.name </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> name</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.hp </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> hp</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.max_hp </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> hp              </span><span style="color:#88846F;"># 记录初始血量</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> attack</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F8F8F2;">        attack_value </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> random.randint(</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">50</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#F8F8F2;"> attack_value</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> not_dead</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.hp </span><span style="color:#F92672;">&gt;</span><span style="color:#AE81FF;"> 0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> being_attack</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">attack_value</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#E6DB74;">        &quot;&quot;&quot;受到伤害（向下取整避免血量显示为浮点数，并且保证了血量不会出现负数&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.hp </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> max</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.hp</span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;">attack_value))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> show_status</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;</span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&#39;s HP → </span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.hp</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">/</span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.max_hp</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> heal_full</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#E6DB74;">        &quot;&quot;&quot;直接回到初始满血&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.hp </span><span style="color:#F92672;">=</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.max_hp</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">player </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Creature(</span><span style="color:#E6DB74;">&#39;Ran&#39;</span><span style="color:#F8F8F2;">,</span><span style="color:#AE81FF;">100</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">enemy </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Creature(</span><span style="color:#E6DB74;">&#39;Monster&#39;</span><span style="color:#F8F8F2;">,</span><span style="color:#AE81FF;">80</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">heal_used </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> False</span><span style="color:#88846F;">       # 限制回血只能用一次</span></span>
<span class="line"><span style="color:#F8F8F2;">heal_penalty_active </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> False</span><span style="color:#88846F;">      # 回血代价激活状态</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">while</span><span style="color:#F8F8F2;"> player.not_dead() </span><span style="color:#F92672;">and</span><span style="color:#F8F8F2;"> enemy.not_dead():</span></span>
<span class="line"><span style="color:#F8F8F2;">    player.show_status()</span></span>
<span class="line"><span style="color:#F8F8F2;">    enemy.show_status()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">    # 是否出现治疗提示：仅当当前血量&lt;初始值50% 并且尚未使用回血功能</span></span>
<span class="line"><span style="color:#F8F8F2;">    can_heal_now </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#F92672;">not</span><span style="color:#F8F8F2;"> heal_used) </span><span style="color:#F92672;">and</span><span style="color:#F8F8F2;"> (player.hp </span><span style="color:#F92672;">&lt;</span><span style="color:#F8F8F2;"> player.max_hp </span><span style="color:#F92672;">*</span><span style="color:#AE81FF;"> 0.5</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> can_heal_now:</span></span>
<span class="line"><span style="color:#F8F8F2;">        prompt </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &#39;Attack or Defence or Heal (A/D/H): &#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">        valid_inputs </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&#39;A&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;D&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;H&#39;</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">        extra_tip </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &#39;（提示：现在可以按 H 回满血，仅此一次）&#39;</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(extra_tip)</span></span>
<span class="line"><span style="color:#F8F8F2;">        heal_used </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> True</span><span style="color:#88846F;">  # 说明回血提示出现了，之后不会再出现</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">    else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">        prompt </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &#39;Attack or Defence (A/D): &#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">        valid_inputs </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&#39;A&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;D&#39;</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> heal_penalty_active:</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;【警告】治疗代价生效中，敌人对你的伤害 ×2 ！&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    user_input </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(prompt).strip().upper()</span></span>
<span class="line"><span style="color:#F92672;">    while</span><span style="color:#F8F8F2;"> user_input </span><span style="color:#F92672;">not</span><span style="color:#F92672;"> in</span><span style="color:#F8F8F2;"> valid_inputs:</span></span>
<span class="line"><span style="color:#F8F8F2;">        user_input </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;输入无效，请重新输入: &#39;</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> prompt).strip().upper()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">    # 敌人选择（若玩家选择 D 或者 H ，敌人都直接攻击）</span></span>
<span class="line"><span style="color:#F8F8F2;">    enemy_status </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> random.choice([</span><span style="color:#E6DB74;">&#39;A&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;D&#39;</span><span style="color:#F8F8F2;">])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">    # 当前敌人伤害倍率（是否翻倍）</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> enemy_mul</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#AE81FF;"> 2.0</span><span style="color:#F92672;"> if</span><span style="color:#F8F8F2;"> heal_penalty_active </span><span style="color:#F92672;">else</span><span style="color:#AE81FF;"> 1.0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> user_input </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;H&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#88846F;">        # 只有在 can_heal_now 为 True 时才会进入这里</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;你使用了治疗技能，血量已经回满。&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        player.heal_full()</span></span>
<span class="line"><span style="color:#F8F8F2;">        heal_penalty_active </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> True</span><span style="color:#88846F;">             # 触发治疗代价</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">        # 敌人回合：直接攻击，先治疗再挨打</span></span>
<span class="line"><span style="color:#F8F8F2;">        raw_enemy_attack_value </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> enemy.attack()</span></span>
<span class="line"><span style="color:#F8F8F2;">        damage </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> raw_enemy_attack_value </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> enemy_mul()</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">enemy.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">攻击了你，造成</span><span style="color:#AE81FF;">{</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">(damage)</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">点伤害！（原始</span><span style="color:#AE81FF;">{</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">(raw_enemy_attack_value)</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">×倍率</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">enemy_mul()</span><span style="color:#66D9EF;font-style:italic;">:.0f</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">）&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        player.being_attack(damage)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">    elif</span><span style="color:#F8F8F2;"> user_input </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;A&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">        player_attack_coefficient </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 1</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> enemy_status </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;D&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">enemy.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> chose to defend!&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            player_attack_coefficient </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0.5</span></span>
<span class="line"><span style="color:#F92672;">        else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">enemy.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> chose to attack!&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            raw_enemy_attack_value </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> enemy.attack()</span></span>
<span class="line"><span style="color:#F8F8F2;">            damage </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> raw_enemy_attack_value </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> enemy_mul()</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">enemy.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">攻击了你，造成</span><span style="color:#AE81FF;">{</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">(damage)</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">点伤害！（原始</span><span style="color:#AE81FF;">{</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">(raw_enemy_attack_value)</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">×倍率</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">enemy_mul()</span><span style="color:#66D9EF;font-style:italic;">:.0f</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">）&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            player.being_attack(damage)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">        player_attack_value </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> player.attack()</span></span>
<span class="line"><span style="color:#F8F8F2;">        enemy.being_attack(player_attack_value </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> player_attack_coefficient)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">    elif</span><span style="color:#F8F8F2;"> user_input </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;D&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#88846F;">        # 防御：敌人攻击减伤为 90% ，然后再应用翻倍倍率</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">enemy.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> chose to attack!&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        raw_enemy_attack_value </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> enemy.attack()</span></span>
<span class="line"><span style="color:#F8F8F2;">        damage </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (raw_enemy_attack_value</span><span style="color:#F92672;">*</span><span style="color:#AE81FF;">0.1</span><span style="color:#F8F8F2;">) </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> enemy_mul()</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">enemy.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">攻击了你（被你防住大部分），造成</span><span style="color:#AE81FF;">{</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">(damage)</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">点伤害！&#39;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">              f</span><span style="color:#E6DB74;">&#39;（原始</span><span style="color:#AE81FF;">{</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">(raw_enemy_attack_value)</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">×倍率</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">enemy_mul()</span><span style="color:#66D9EF;font-style:italic;">:.0f</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">）&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        player.being_attack(damage)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> player.not_dead():</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;You win! Your HP: </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">player.hp</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;You lose! &quot;</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>其他优化：警告只显示一次如何处理？</p><p>解决方法：将警告移到 <code>H</code> 里面即可：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> user_input </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;H&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#88846F;">        # 只有在 can_heal_now 为 True 时才会进入这里</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;你使用了治疗技能，血量已经回满。&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        player.heal_full()</span></span>
<span class="line"><span style="color:#F8F8F2;">        heal_penalty_active </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> True</span><span style="color:#88846F;">             # 触发治疗代价</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;【警告】治疗代价生效中，敌人对你的伤害 ×2 ！&#39;</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_9-4-9-血量进度条" tabindex="-1"><a class="header-anchor" href="#_9-4-9-血量进度条"><span>9.4.9 血量进度条</span></a></h4><p>老师示例</p><ul><li><p>完整代码：</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> random</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> sys</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># ====== 终端颜色与进度条工具 ======</span></span>
<span class="line"><span style="color:#AE81FF;">RESET</span><span style="color:#F92672;"> =</span><span style="color:#E6DB74;"> &quot;</span><span style="color:#AE81FF;">\\033</span><span style="color:#E6DB74;">[0m&quot;</span></span>
<span class="line"><span style="color:#AE81FF;">FG_RED</span><span style="color:#F92672;"> =</span><span style="color:#E6DB74;"> &quot;</span><span style="color:#AE81FF;">\\033</span><span style="color:#E6DB74;">[31m&quot;</span></span>
<span class="line"><span style="color:#AE81FF;">FG_YELLOW</span><span style="color:#F92672;"> =</span><span style="color:#E6DB74;"> &quot;</span><span style="color:#AE81FF;">\\033</span><span style="color:#E6DB74;">[33m&quot;</span></span>
<span class="line"><span style="color:#AE81FF;">FG_GREEN</span><span style="color:#F92672;"> =</span><span style="color:#E6DB74;"> &quot;</span><span style="color:#AE81FF;">\\033</span><span style="color:#E6DB74;">[32m&quot;</span></span>
<span class="line"><span style="color:#AE81FF;">FG_CYAN</span><span style="color:#F92672;"> =</span><span style="color:#E6DB74;"> &quot;</span><span style="color:#AE81FF;">\\033</span><span style="color:#E6DB74;">[36m&quot;</span></span>
<span class="line"><span style="color:#AE81FF;">FG_MAGENTA</span><span style="color:#F92672;"> =</span><span style="color:#E6DB74;"> &quot;</span><span style="color:#AE81FF;">\\033</span><span style="color:#E6DB74;">[35m&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> _supports_color</span><span style="color:#F8F8F2;">() -&gt; </span><span style="color:#66D9EF;font-style:italic;">bool</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#88846F;">    # 基本判断：是交互终端就上色；否则退化为无色</span></span>
<span class="line"><span style="color:#F92672;">    return</span><span style="color:#F8F8F2;"> sys.stdout.isatty()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> colorize</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">s</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;font-style:italic;">str</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">color</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;font-style:italic;">str</span><span style="color:#F8F8F2;">) -&gt; </span><span style="color:#66D9EF;font-style:italic;">str</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> _supports_color():</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#66D9EF;font-style:italic;"> f</span><span style="color:#E6DB74;">&quot;</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">color</span><span style="color:#AE81FF;">}{</span><span style="color:#F8F8F2;">s</span><span style="color:#AE81FF;">}{RESET}</span><span style="color:#E6DB74;">&quot;</span></span>
<span class="line"><span style="color:#F92672;">    return</span><span style="color:#F8F8F2;"> s</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> hp_bar</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">cur</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">maxv</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">width</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 30</span><span style="color:#F8F8F2;">) -&gt; </span><span style="color:#66D9EF;font-style:italic;">str</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">    cur </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> max</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;">min</span><span style="color:#F8F8F2;">(cur, maxv))</span></span>
<span class="line"><span style="color:#F8F8F2;">    ratio </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> cur </span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;"> maxv </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> maxv </span><span style="color:#F92672;">&gt;</span><span style="color:#AE81FF;"> 0</span><span style="color:#F92672;"> else</span><span style="color:#AE81FF;"> 0</span></span>
<span class="line"><span style="color:#F8F8F2;">    filled </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">round</span><span style="color:#F8F8F2;">(ratio </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> width))</span></span>
<span class="line"><span style="color:#F8F8F2;">    empty </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> width </span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;"> filled</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">    # 阈值配色：&gt;50% 绿；20%~50% 黄；&lt;=20% 红</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> ratio </span><span style="color:#F92672;">&gt;</span><span style="color:#AE81FF;"> 0.5</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">        bar_color </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> FG_GREEN</span></span>
<span class="line"><span style="color:#F92672;">    elif</span><span style="color:#F8F8F2;"> ratio </span><span style="color:#F92672;">&gt;</span><span style="color:#AE81FF;"> 0.2</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">        bar_color </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> FG_YELLOW</span></span>
<span class="line"><span style="color:#F92672;">    else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">        bar_color </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> FG_RED</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    bar </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;█&quot;</span><span style="color:#F92672;"> *</span><span style="color:#F8F8F2;"> filled </span><span style="color:#F92672;">+</span><span style="color:#E6DB74;"> &quot;░&quot;</span><span style="color:#F92672;"> *</span><span style="color:#F8F8F2;"> empty</span></span>
<span class="line"><span style="color:#F8F8F2;">    percent </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> f</span><span style="color:#E6DB74;">&quot;</span><span style="color:#AE81FF;">{</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">(ratio </span><span style="color:#F92672;">*</span><span style="color:#AE81FF;"> 100</span><span style="color:#F8F8F2;">)</span><span style="color:#66D9EF;font-style:italic;">:3d</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">%&quot;</span></span>
<span class="line"><span style="color:#F92672;">    return</span><span style="color:#66D9EF;font-style:italic;"> f</span><span style="color:#E6DB74;">&quot;[</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">colorize(bar, bar_color)</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">] </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">percent</span><span style="color:#AE81FF;">}</span><span style="color:#AE81FF;">  {</span><span style="color:#F8F8F2;">cur</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">/</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">maxv</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># ====== 你的游戏代码（加入进度条显示） ======</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Creature</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">hp</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">name</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.hp </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">(hp)</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.max_hp </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">(hp)  </span><span style="color:#88846F;"># 记录初始满血</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.name </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> name</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> attack</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#F8F8F2;"> random.randint(</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">50</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> not_dead</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.hp </span><span style="color:#F92672;">&gt;</span><span style="color:#AE81FF;"> 0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> being_attack</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">dmg</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;font-style:italic;">float</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#E6DB74;">        &quot;&quot;&quot;受到伤害（向下取整以避免浮点 HP），并保证 HP 不会掉到负数以下&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.hp </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> max</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.hp </span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;"> dmg))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> heal_full</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#E6DB74;">        &quot;&quot;&quot;直接回到初始满血&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.hp </span><span style="color:#F92672;">=</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.max_hp</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> show_status</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#88846F;">        # 名称加一点配色区分玩家/敌人</span></span>
<span class="line"><span style="color:#F8F8F2;">        name_str </span><span style="color:#F92672;">=</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.name</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.name </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &quot;AI悦创&quot;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">            name_str </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> colorize(</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.name, </span><span style="color:#AE81FF;">FG_CYAN</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">        elif</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.name.lower().startswith(</span><span style="color:#E6DB74;">&quot;enemy&quot;</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F8F8F2;">            name_str </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> colorize(</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.name, </span><span style="color:#AE81FF;">FG_MAGENTA</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">name_str</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> HP </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">hp_bar(</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.hp, </span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.max_hp)</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">player </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Creature(</span><span style="color:#AE81FF;">100</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;AI悦创&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">enemy </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Creature(</span><span style="color:#AE81FF;">80</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;Enemy&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">heal_used </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> False</span><span style="color:#88846F;">  # 治疗仅限一次</span></span>
<span class="line"><span style="color:#F8F8F2;">heal_penalty_active </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> False</span><span style="color:#88846F;">  # 是否已触发“敌人攻击翻倍”的惩罚</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">while</span><span style="color:#F8F8F2;"> player.not_dead() </span><span style="color:#F92672;">and</span><span style="color:#F8F8F2;"> enemy.not_dead():</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;</span><span style="color:#AE81FF;">\\n</span><span style="color:#E6DB74;">=== 状态 ===&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    player.show_status()</span></span>
<span class="line"><span style="color:#F8F8F2;">    enemy.show_status()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">    # 是否出现治疗提示：仅当当前 HP &lt; 初始 HP 的 50% 且尚未使用</span></span>
<span class="line"><span style="color:#F8F8F2;">    can_heal_now </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#F92672;">not</span><span style="color:#F8F8F2;"> heal_used) </span><span style="color:#F92672;">and</span><span style="color:#F8F8F2;"> (player.hp </span><span style="color:#F92672;">&lt;</span><span style="color:#F8F8F2;"> player.max_hp </span><span style="color:#F92672;">*</span><span style="color:#AE81FF;"> 0.5</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> can_heal_now:</span></span>
<span class="line"><span style="color:#F8F8F2;">        prompt </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &#39;Attack or Defence or Heal (A/D/H)：&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">        valid_inputs </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&quot;A&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;D&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;H&quot;</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(colorize(</span><span style="color:#E6DB74;">&#39;（提示：你现在可以按 H 回满血，仅此一次）&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">FG_YELLOW</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F92672;">    else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">        prompt </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &#39;Attack or Defence (A/D)：&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">        valid_inputs </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&quot;A&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;D&quot;</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> heal_penalty_active:</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(colorize(</span><span style="color:#E6DB74;">&#39;【警告】治疗代价生效中：敌人对你的伤害 ×2！&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">FG_RED</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    user_input </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(prompt).strip().upper()</span></span>
<span class="line"><span style="color:#F92672;">    while</span><span style="color:#F8F8F2;"> user_input </span><span style="color:#F92672;">not</span><span style="color:#F92672;"> in</span><span style="color:#F8F8F2;"> valid_inputs:</span></span>
<span class="line"><span style="color:#F8F8F2;">        user_input </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;输入无效，请重新输入：&quot;</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> prompt).strip().upper()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">    # 敌人选择（对 A/D 有影响；若玩家选择 H，我们让敌人本回合直接攻击）</span></span>
<span class="line"><span style="color:#F8F8F2;">    enemy_status </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#E6DB74;">&#39;Attack&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;Defence&#39;</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">    enemy_choice </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> random.choices(enemy_status, </span><span style="color:#FD971F;font-style:italic;">weights</span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">0.7</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0.3</span><span style="color:#F8F8F2;">], </span><span style="color:#FD971F;font-style:italic;">k</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">)[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">]  </span><span style="color:#88846F;"># 敌人更倾向于攻击</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">    # 当前敌人伤害倍率（是否翻倍）</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> enemy_mul</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#AE81FF;"> 2.0</span><span style="color:#F92672;"> if</span><span style="color:#F8F8F2;"> heal_penalty_active </span><span style="color:#F92672;">else</span><span style="color:#AE81FF;"> 1.0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> user_input </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &quot;H&quot;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#88846F;">        # 只有在 can_heal_now 为 True 时才会进入到这里（上面已限制输入选项）</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(colorize(</span><span style="color:#E6DB74;">&quot;你使用了治疗技能！血量已回满。&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">FG_GREEN</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F8F8F2;">        player.heal_full()</span></span>
<span class="line"><span style="color:#F8F8F2;">        heal_used </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> True</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">        # 触发治疗代价：从现在起敌人攻击翻倍（包含本回合的随后的敌人攻击）</span></span>
<span class="line"><span style="color:#F8F8F2;">        heal_penalty_active </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> True</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">        # 敌人回合：直接攻击（先治再挨打）</span></span>
<span class="line"><span style="color:#F8F8F2;">        raw_enemy_attack_value </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> enemy.attack()</span></span>
<span class="line"><span style="color:#F8F8F2;">        damage </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> raw_enemy_attack_value </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> enemy_mul()</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">enemy.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> 攻击了你，造成 </span><span style="color:#AE81FF;">{</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">(damage)</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> 点伤害！（原始</span><span style="color:#AE81FF;">{</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">(raw_enemy_attack_value)</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> × 倍率</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">enemy_mul()</span><span style="color:#66D9EF;font-style:italic;">:.0f</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">）&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        player.being_attack(damage)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">    elif</span><span style="color:#F8F8F2;"> user_input </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &quot;A&quot;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">        player_attack_coefficient </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 1</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> enemy_choice </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &quot;Defence&quot;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">enemy.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> chose to defend!&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            player_attack_coefficient </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0.5</span></span>
<span class="line"><span style="color:#F92672;">        else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">enemy.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> chose to attack!&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            raw_enemy_attack_value </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> enemy.attack()</span></span>
<span class="line"><span style="color:#F8F8F2;">            damage </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> raw_enemy_attack_value </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> enemy_mul()</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">enemy.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> 对你造成 </span><span style="color:#AE81FF;">{</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">(damage)</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> 点伤害！（原始</span><span style="color:#AE81FF;">{</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">(raw_enemy_attack_value)</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> × 倍率</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">enemy_mul()</span><span style="color:#66D9EF;font-style:italic;">:.0f</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">）&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            player.being_attack(damage)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">        player_attack_value </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> player.attack()</span></span>
<span class="line"><span style="color:#F8F8F2;">        enemy.being_attack(player_attack_value </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> player_attack_coefficient)</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;你对 </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">enemy.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> 造成 </span><span style="color:#AE81FF;">{</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">(player_attack_value </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> player_attack_coefficient)</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> 点伤害。&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">    elif</span><span style="color:#F8F8F2;"> user_input </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &quot;D&quot;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#88846F;">        # 防御：敌人攻击减伤为 90%，然后再应用翻倍倍率</span></span>
<span class="line"><span style="color:#F8F8F2;">        raw_enemy_attack_value </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> enemy.attack()</span></span>
<span class="line"><span style="color:#F8F8F2;">        damage </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> raw_enemy_attack_value </span><span style="color:#F92672;">*</span><span style="color:#AE81FF;"> 0.1</span><span style="color:#F92672;"> *</span><span style="color:#F8F8F2;"> enemy_mul()</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">enemy.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> 攻击了你（被你防住大部分），造成 </span><span style="color:#AE81FF;">{</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">(damage)</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> 点伤害！&quot;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">              f</span><span style="color:#E6DB74;">&quot;（原始</span><span style="color:#AE81FF;">{</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">(raw_enemy_attack_value)</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> × 减伤0.1 × 倍率</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">enemy_mul()</span><span style="color:#66D9EF;font-style:italic;">:.0f</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">）&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        player.being_attack(damage)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> player.not_dead():</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(colorize(</span><span style="color:#E6DB74;">&quot;You Win!&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">FG_GREEN</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F92672;">else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(colorize(</span><span style="color:#E6DB74;">&quot;You Lose!&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">FG_RED</span><span style="color:#F8F8F2;">))</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div></li><li><p>注释：</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> sys  </span><span style="color:#88846F;"># 用于判断标准输出是否是一个“交互式终端”（TTY），从而决定是否使用颜色</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># ====== 终端颜色与进度条工具 ======</span></span>
<span class="line"><span style="color:#AE81FF;">RESET</span><span style="color:#F92672;"> =</span><span style="color:#E6DB74;"> &quot;</span><span style="color:#AE81FF;">\\033</span><span style="color:#E6DB74;">[0m&quot;</span><span style="color:#88846F;">     # ANSI 转义序列：重置所有颜色/样式</span></span>
<span class="line"><span style="color:#AE81FF;">FG_RED</span><span style="color:#F92672;"> =</span><span style="color:#E6DB74;"> &quot;</span><span style="color:#AE81FF;">\\033</span><span style="color:#E6DB74;">[31m&quot;</span><span style="color:#88846F;">   # 前景色：红</span></span>
<span class="line"><span style="color:#AE81FF;">FG_YELLOW</span><span style="color:#F92672;"> =</span><span style="color:#E6DB74;"> &quot;</span><span style="color:#AE81FF;">\\033</span><span style="color:#E6DB74;">[33m&quot;</span><span style="color:#88846F;"># 前景色：黄</span></span>
<span class="line"><span style="color:#AE81FF;">FG_GREEN</span><span style="color:#F92672;"> =</span><span style="color:#E6DB74;"> &quot;</span><span style="color:#AE81FF;">\\033</span><span style="color:#E6DB74;">[32m&quot;</span><span style="color:#88846F;"> # 前景色：绿</span></span>
<span class="line"><span style="color:#AE81FF;">FG_CYAN</span><span style="color:#F92672;"> =</span><span style="color:#E6DB74;"> &quot;</span><span style="color:#AE81FF;">\\033</span><span style="color:#E6DB74;">[36m&quot;</span><span style="color:#88846F;">  # 前景色：青（给玩家名上色用）</span></span>
<span class="line"><span style="color:#AE81FF;">FG_MAGENTA</span><span style="color:#F92672;"> =</span><span style="color:#E6DB74;"> &quot;</span><span style="color:#AE81FF;">\\033</span><span style="color:#E6DB74;">[35m&quot;</span><span style="color:#88846F;"># 前景色：洋红（给敌人名上色用）</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> _supports_color</span><span style="color:#F8F8F2;">() -&gt; </span><span style="color:#66D9EF;font-style:italic;">bool</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#E6DB74;">    &quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#E6DB74;">    判断当前 stdout 是否是一个 TTY（交互式终端）。</span></span>
<span class="line"><span style="color:#E6DB74;">    - 如果是 TTY，通常可以正确解析 ANSI 颜色转义序列 -&gt; 返回 True。</span></span>
<span class="line"><span style="color:#E6DB74;">    - 如果不是（比如写入文件、被重定向到日志系统），就不要输出颜色码 -&gt; 返回 False。</span></span>
<span class="line"><span style="color:#E6DB74;">    这样可以避免在不支持颜色的环境里看到一堆“</span><span style="color:#AE81FF;">\\x1b</span><span style="color:#E6DB74;">[31m”之类的乱码。</span></span>
<span class="line"><span style="color:#E6DB74;">    &quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#F92672;">    return</span><span style="color:#F8F8F2;"> sys.stdout.isatty()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> colorize</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">s</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;font-style:italic;">str</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">color</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;font-style:italic;">str</span><span style="color:#F8F8F2;">) -&gt; </span><span style="color:#66D9EF;font-style:italic;">str</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#E6DB74;">    &quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#E6DB74;">    根据 _supports_color() 的结果，有选择地给字符串加颜色。</span></span>
<span class="line"><span style="color:#E6DB74;">    - 支持颜色：前后包裹 color 与 RESET 转义码。</span></span>
<span class="line"><span style="color:#E6DB74;">    - 不支持颜色：原样返回，避免污染输出。</span></span>
<span class="line"><span style="color:#E6DB74;">    &quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> _supports_color():</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#66D9EF;font-style:italic;"> f</span><span style="color:#E6DB74;">&quot;</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">color</span><span style="color:#AE81FF;">}{</span><span style="color:#F8F8F2;">s</span><span style="color:#AE81FF;">}{RESET}</span><span style="color:#E6DB74;">&quot;</span></span>
<span class="line"><span style="color:#F92672;">    return</span><span style="color:#F8F8F2;"> s</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> hp_bar</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">cur</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">maxv</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">width</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 30</span><span style="color:#F8F8F2;">) -&gt; </span><span style="color:#66D9EF;font-style:italic;">str</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#E6DB74;">    &quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#E6DB74;">    生成一个文本进度条，形如：</span></span>
<span class="line"><span style="color:#E6DB74;">    [██████████░░░░░░░░░░░░░░]  40%  40/100</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E6DB74;">    参数：</span></span>
<span class="line"><span style="color:#E6DB74;">    - cur: 当前 HP（会被限制在 0..maxv 范围，以避免越界）</span></span>
<span class="line"><span style="color:#E6DB74;">    - maxv: 最大 HP（分母；注意做 0 保护）</span></span>
<span class="line"><span style="color:#E6DB74;">    - width: 进度条宽度（字符数），默认 30</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E6DB74;">    返回：</span></span>
<span class="line"><span style="color:#E6DB74;">    - 包含彩色条形、百分比和“cur/maxv”数值的字符串</span></span>
<span class="line"><span style="color:#E6DB74;">    &quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#88846F;">    # 1) 防御式编程：先把 cur 限制在 [0, maxv]，避免出现负数/超上限</span></span>
<span class="line"><span style="color:#F8F8F2;">    cur </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> max</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;">min</span><span style="color:#F8F8F2;">(cur, maxv))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">    # 2) 计算比例 ratio，注意 maxv=0 的兜底（避免 ZeroDivisionError）</span></span>
<span class="line"><span style="color:#F8F8F2;">    ratio </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> cur </span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;"> maxv </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> maxv </span><span style="color:#F92672;">&gt;</span><span style="color:#AE81FF;"> 0</span><span style="color:#F92672;"> else</span><span style="color:#AE81FF;"> 0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">    # 3) 根据比例计算“填充块”数量</span></span>
<span class="line"><span style="color:#88846F;">    #    - round 而非 floor：让临界值（例如 100%）可以填满整条；否则容易出现 99% 看起来没满的“强迫症”效果</span></span>
<span class="line"><span style="color:#88846F;">    #    - 再用 int 转成整数个字符</span></span>
<span class="line"><span style="color:#F8F8F2;">    filled </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">round</span><span style="color:#F8F8F2;">(ratio </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> width))</span></span>
<span class="line"><span style="color:#F8F8F2;">    empty </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> width </span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;"> filled  </span><span style="color:#88846F;"># 剩余未填充部分</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">    # 4) 阈值配色：</span></span>
<span class="line"><span style="color:#88846F;">    #    ratio &gt; 0.5  → 绿色（安全）</span></span>
<span class="line"><span style="color:#88846F;">    #    0.2 &lt; ratio &lt;= 0.5 → 黄色（警戒）</span></span>
<span class="line"><span style="color:#88846F;">    #    ratio &lt;= 0.2 → 红色（危险）</span></span>
<span class="line"><span style="color:#88846F;">    #    这样在对局中能直观感受到“健康程度”</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> ratio </span><span style="color:#F92672;">&gt;</span><span style="color:#AE81FF;"> 0.5</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">        bar_color </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> FG_GREEN</span></span>
<span class="line"><span style="color:#F92672;">    elif</span><span style="color:#F8F8F2;"> ratio </span><span style="color:#F92672;">&gt;</span><span style="color:#AE81FF;"> 0.2</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">        bar_color </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> FG_YELLOW</span></span>
<span class="line"><span style="color:#F92672;">    else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">        bar_color </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> FG_RED</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">    # 5) 使用全块 &#39;█&#39; 表示已填充，用浅色 &#39;░&#39; 表示未填充（视觉对比明显）</span></span>
<span class="line"><span style="color:#88846F;">    #    如果你的终端或字体对这些字符支持不好，可以换成 &#39;#&#39; 和 &#39;-&#39; 等 ASCII 字符。</span></span>
<span class="line"><span style="color:#F8F8F2;">    bar </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;█&quot;</span><span style="color:#F92672;"> *</span><span style="color:#F8F8F2;"> filled </span><span style="color:#F92672;">+</span><span style="color:#E6DB74;"> &quot;░&quot;</span><span style="color:#F92672;"> *</span><span style="color:#F8F8F2;"> empty</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">    # 6) 百分比显示：取整到 0..100 之间，并用 :3d 做宽度对齐（右对齐占 3 格，像 &quot; 40%&quot;）</span></span>
<span class="line"><span style="color:#F8F8F2;">    percent </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> f</span><span style="color:#E6DB74;">&quot;</span><span style="color:#AE81FF;">{</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">(ratio </span><span style="color:#F92672;">*</span><span style="color:#AE81FF;"> 100</span><span style="color:#F8F8F2;">)</span><span style="color:#66D9EF;font-style:italic;">:3d</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">%&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">    # 7) 把彩色条形 + 百分比 + “cur/maxv” 组装成最终字符串</span></span>
<span class="line"><span style="color:#F92672;">    return</span><span style="color:#66D9EF;font-style:italic;"> f</span><span style="color:#E6DB74;">&quot;[</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">colorize(bar, bar_color)</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">] </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">percent</span><span style="color:#AE81FF;">}</span><span style="color:#AE81FF;">  {</span><span style="color:#F8F8F2;">cur</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">/</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">maxv</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div></li></ul><p><strong>补充知识：</strong></p><p><a href="https://bornforthis.cn/column/Python-Programming-Course/P02-2-basequestion/radix_point.html" target="_blank" rel="noopener noreferrer">Python 保留指定位数的小数</a></p><p>四舍五入的取整 <code>round()</code></p><p><strong>个人代码：</strong></p><p>只对 <code>show_status</code> 这个函数进行修改。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> show_status</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F8F8F2;">        max_hp_bar </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> round</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.max_hp</span><span style="color:#F92672;">/</span><span style="color:#AE81FF;">10</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        now_hp_bar </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> round</span><span style="color:#F8F8F2;">((</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.hp </span><span style="color:#F92672;">/</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.max_hp) </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> max_hp_bar)</span></span>
<span class="line"><span style="color:#F8F8F2;">        hp_bar </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (now_hp_bar </span><span style="color:#F92672;">*</span><span style="color:#E6DB74;"> &#39;█&#39;</span><span style="color:#F8F8F2;">)</span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;">((max_hp_bar</span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;">now_hp_bar) </span><span style="color:#F92672;">*</span><span style="color:#E6DB74;"> &#39;░&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;</span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&#39;s HP → </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">hp_bar</span><span style="color:#AE81FF;">}</span><span style="color:#AE81FF;"> {</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.hp</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">/</span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.max_hp</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>老师代码：</strong></p>`,26)),p(t,{data:[{id:"精简代码"},{id:"完整代码"}]},{title0:a(({value:e,isActive:o})=>[...l[32]||(l[32]=[n("精简代码",-1)])]),title1:a(({value:e,isActive:o})=>[...l[33]||(l[33]=[n("完整代码",-1)])]),tab0:a(({value:e,isActive:o})=>[...l[34]||(l[34]=[s("div",{class:"language-python line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"python",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",{class:"language-python"},[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F8F8F2"}}," random")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# —— 简单无色进度条（纯 ASCII，跨平台）——")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"def"),s("span",{style:{color:"#A6E22E"}}," hp_bar"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"cur"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"maxv"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"width"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F92672"}}," ="),s("span",{style:{color:"#AE81FF"}}," 20"),s("span",{style:{color:"#F8F8F2"}},") -> "),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"str"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},'    """返回形如：[##########----------] 50%  50/100 的进度条文本"""')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F8F8F2"}}," maxv "),s("span",{style:{color:"#F92672"}},"<="),s("span",{style:{color:"#AE81FF"}}," 0"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        maxv "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 1")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    cur "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#66D9EF"}}," max"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#66D9EF"}},"min"),s("span",{style:{color:"#F8F8F2"}},"(cur, maxv))")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    ratio "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," cur "),s("span",{style:{color:"#F92672"}},"/"),s("span",{style:{color:"#F8F8F2"}}," maxv")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    filled "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," int"),s("span",{style:{color:"#F8F8F2"}},"(ratio "),s("span",{style:{color:"#F92672"}},"*"),s("span",{style:{color:"#F8F8F2"}}," width "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#AE81FF"}}," 0.5"),s("span",{style:{color:"#F8F8F2"}},")  "),s("span",{style:{color:"#88846F"}},"# 四舍五入，因为 int 的取整是把小数点后的直接锯掉")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    bar "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "#"'),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," filled "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#E6DB74"}},' "-"'),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," (width "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}}," filled)")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    return"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," f"),s("span",{style:{color:"#E6DB74"}},'"['),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#F8F8F2"}},"bar"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}},"] "),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}},"(ratio "),s("span",{style:{color:"#F92672"}},"*"),s("span",{style:{color:"#AE81FF"}}," 100"),s("span",{style:{color:"#F8F8F2"}},")"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},":3d"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}},"%  "),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#F8F8F2"}},"cur"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}},"/"),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#F8F8F2"}},"maxv"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}},'"')]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"Creature"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    # ---snip---")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#A6E22E"}}," show_status"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},"):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"        print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"f"),s("span",{style:{color:"#E6DB74"}},'"'),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#FD971F"}},"self"),s("span",{style:{color:"#F8F8F2"}},".name"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}},"'s HP → "),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#F8F8F2"}},"hp_bar("),s("span",{style:{color:"#FD971F"}},"self"),s("span",{style:{color:"#F8F8F2"}},".hp, "),s("span",{style:{color:"#FD971F"}},"self"),s("span",{style:{color:"#F8F8F2"}},".max_hp)"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}},'"'),s("span",{style:{color:"#F8F8F2"}},")")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])]),tab1:a(({value:e,isActive:o})=>[...l[35]||(l[35]=[s("div",{class:"language-python line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"python",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",{class:"language-python"},[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F8F8F2"}}," random")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# —— 简单无色进度条（纯 ASCII，跨平台）——")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"def"),s("span",{style:{color:"#A6E22E"}}," hp_bar"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"cur"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"maxv"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"width"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F92672"}}," ="),s("span",{style:{color:"#AE81FF"}}," 20"),s("span",{style:{color:"#F8F8F2"}},") -> "),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"str"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},'    """返回形如：[##########----------] 50%  5g0/100 的进度条文本"""')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F8F8F2"}}," maxv "),s("span",{style:{color:"#F92672"}},"<="),s("span",{style:{color:"#AE81FF"}}," 0"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        maxv "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 1")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    cur "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#66D9EF"}}," max"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#66D9EF"}},"min"),s("span",{style:{color:"#F8F8F2"}},"(cur, maxv))")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    ratio "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," cur "),s("span",{style:{color:"#F92672"}},"/"),s("span",{style:{color:"#F8F8F2"}}," maxv")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    filled "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," int"),s("span",{style:{color:"#F8F8F2"}},"(ratio "),s("span",{style:{color:"#F92672"}},"*"),s("span",{style:{color:"#F8F8F2"}}," width "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#AE81FF"}}," 0.5"),s("span",{style:{color:"#F8F8F2"}},")  "),s("span",{style:{color:"#88846F"}},"# 四舍五入")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    bar "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "#"'),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," filled "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#E6DB74"}},' "-"'),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," (width "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}}," filled)")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    return"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," f"),s("span",{style:{color:"#E6DB74"}},'"['),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#F8F8F2"}},"bar"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}},"] "),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}},"(ratio "),s("span",{style:{color:"#F92672"}},"*"),s("span",{style:{color:"#AE81FF"}}," 100"),s("span",{style:{color:"#F8F8F2"}},")"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},":3d"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}},"%  "),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#F8F8F2"}},"cur"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}},"/"),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#F8F8F2"}},"maxv"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}},'"')]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"Creature"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#66D9EF"}}," __init__"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"hp"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"name"),s("span",{style:{color:"#F8F8F2"}},"):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".hp "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," int"),s("span",{style:{color:"#F8F8F2"}},"(hp)")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".max_hp "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," int"),s("span",{style:{color:"#F8F8F2"}},"(hp)  "),s("span",{style:{color:"#88846F"}},"# 记录初始满血")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".name "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," name")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#A6E22E"}}," attack"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},"):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        return"),s("span",{style:{color:"#F8F8F2"}}," random.randint("),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"50"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#A6E22E"}}," not_dead"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},"):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        return"),s("span",{style:{color:"#FD971F"}}," self"),s("span",{style:{color:"#F8F8F2"}},".hp "),s("span",{style:{color:"#F92672"}},">"),s("span",{style:{color:"#AE81FF"}}," 0")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#A6E22E"}}," being_attack"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"dmg"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"float"),s("span",{style:{color:"#F8F8F2"}},"):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},'        """受到伤害（向下取整以避免浮点 HP），并保证 HP 不会掉到负数以下"""')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".hp "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#66D9EF"}}," max"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F"}},"self"),s("span",{style:{color:"#F8F8F2"}},".hp "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}}," dmg))")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#A6E22E"}}," heal_full"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},"):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},'        """直接回到初始满血"""')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".hp "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#FD971F"}}," self"),s("span",{style:{color:"#F8F8F2"}},".max_hp")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#A6E22E"}}," show_status"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},"):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"        print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"f"),s("span",{style:{color:"#E6DB74"}},'"'),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#FD971F"}},"self"),s("span",{style:{color:"#F8F8F2"}},".name"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}},"'s HP → "),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#F8F8F2"}},"hp_bar("),s("span",{style:{color:"#FD971F"}},"self"),s("span",{style:{color:"#F8F8F2"}},".hp, "),s("span",{style:{color:"#FD971F"}},"self"),s("span",{style:{color:"#F8F8F2"}},".max_hp)"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}},'"'),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"player "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," Creature("),s("span",{style:{color:"#AE81FF"}},"100"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},'"AI悦创"'),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"enemy "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," Creature("),s("span",{style:{color:"#AE81FF"}},"80"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},'"Enemy"'),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"heal_used "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," False"),s("span",{style:{color:"#88846F"}},"  # 治疗仅限一次")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"heal_penalty_active "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," False"),s("span",{style:{color:"#88846F"}},"  # 是否已触发“敌人攻击翻倍”的惩罚")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"while"),s("span",{style:{color:"#F8F8F2"}}," player.not_dead() "),s("span",{style:{color:"#F92672"}},"and"),s("span",{style:{color:"#F8F8F2"}}," enemy.not_dead():")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    player.show_status()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    enemy.show_status()")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    # 是否出现治疗提示：仅当当前 HP < 初始 HP 的 50% 且尚未使用")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    can_heal_now "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," ("),s("span",{style:{color:"#F92672"}},"not"),s("span",{style:{color:"#F8F8F2"}}," heal_used) "),s("span",{style:{color:"#F92672"}},"and"),s("span",{style:{color:"#F8F8F2"}}," (player.hp "),s("span",{style:{color:"#F92672"}},"<"),s("span",{style:{color:"#F8F8F2"}}," player.max_hp "),s("span",{style:{color:"#F92672"}},"*"),s("span",{style:{color:"#AE81FF"}}," 0.5"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F8F8F2"}}," can_heal_now:")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        prompt "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}}," 'Attack or Defence or Heal (A/D/H)：'")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        valid_inputs "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," {"),s("span",{style:{color:"#E6DB74"}},'"A"'),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},'"D"'),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},'"H"'),s("span",{style:{color:"#F8F8F2"}},"}")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"        print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},"'（提示：你现在可以按 H 回满血，仅此一次）'"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    else"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        prompt "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}}," 'Attack or Defence (A/D)：'")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        valid_inputs "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," {"),s("span",{style:{color:"#E6DB74"}},'"A"'),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},'"D"'),s("span",{style:{color:"#F8F8F2"}},"}")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F8F8F2"}}," heal_penalty_active:")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"        print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},"'【警告】治疗代价生效中：敌人对你的伤害 ×2！'"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    user_input "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#66D9EF"}}," input"),s("span",{style:{color:"#F8F8F2"}},"(prompt).strip().upper()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    while"),s("span",{style:{color:"#F8F8F2"}}," user_input "),s("span",{style:{color:"#F92672"}},"not"),s("span",{style:{color:"#F92672"}}," in"),s("span",{style:{color:"#F8F8F2"}}," valid_inputs:")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        user_input "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#66D9EF"}}," input"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"输入无效，请重新输入："'),s("span",{style:{color:"#F92672"}}," +"),s("span",{style:{color:"#F8F8F2"}}," prompt).strip().upper()")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    # 敌人选择（对 A/D 有影响；若玩家选择 H，我们让敌人本回合直接攻击）")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    enemy_status "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," ["),s("span",{style:{color:"#E6DB74"}},"'Attack'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'Defence'"),s("span",{style:{color:"#F8F8F2"}},"]")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    enemy_choice "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," random.choices(enemy_status, "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"weights"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}},"["),s("span",{style:{color:"#AE81FF"}},"0.7"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"0.3"),s("span",{style:{color:"#F8F8F2"}},"], "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"k"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},")["),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},"]  "),s("span",{style:{color:"#88846F"}},"# 敌人更倾向于攻击")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    # 当前敌人伤害倍率（是否翻倍）")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#A6E22E"}}," enemy_mul"),s("span",{style:{color:"#F8F8F2"}},"():")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        return"),s("span",{style:{color:"#AE81FF"}}," 2.0"),s("span",{style:{color:"#F92672"}}," if"),s("span",{style:{color:"#F8F8F2"}}," heal_penalty_active "),s("span",{style:{color:"#F92672"}},"else"),s("span",{style:{color:"#AE81FF"}}," 1.0")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F8F8F2"}}," user_input "),s("span",{style:{color:"#F92672"}},"=="),s("span",{style:{color:"#E6DB74"}},' "H"'),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        # 只有在 can_heal_now 为 True 时才会进入到这里")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"        print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"你使用了治疗技能！血量已回满。"'),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        player.heal_full()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        heal_used "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," True")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        # 触发治疗代价：从现在起敌人攻击翻倍（包含本回合的随后的敌人攻击）")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        heal_penalty_active "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," True")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        # 敌人回合：直接攻击（先治再挨打）")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        raw_enemy_attack_value "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," enemy.attack()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        damage "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," raw_enemy_attack_value "),s("span",{style:{color:"#F92672"}},"*"),s("span",{style:{color:"#F8F8F2"}}," enemy_mul()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"        print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"f"),s("span",{style:{color:"#E6DB74"}},'"'),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#F8F8F2"}},"enemy.name"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}}," 攻击了你，造成 "),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}},"(damage)"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}}," 点伤害！（原始"),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}},"(raw_enemy_attack_value)"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}}," × 倍率"),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#F8F8F2"}},"enemy_mul()"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},":.0f"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}},'）"'),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        player.being_attack(damage)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    elif"),s("span",{style:{color:"#F8F8F2"}}," user_input "),s("span",{style:{color:"#F92672"}},"=="),s("span",{style:{color:"#E6DB74"}},' "A"'),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        player_attack_coefficient "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 1")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        if"),s("span",{style:{color:"#F8F8F2"}}," enemy_choice "),s("span",{style:{color:"#F92672"}},"=="),s("span",{style:{color:"#E6DB74"}},' "Defence"'),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"            print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"f"),s("span",{style:{color:"#E6DB74"}},'"'),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#F8F8F2"}},"enemy.name"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}},' chose to defend!"'),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            player_attack_coefficient "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 0.5")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        else"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"            print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"f"),s("span",{style:{color:"#E6DB74"}},'"'),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#F8F8F2"}},"enemy.name"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}},' chose to attack!"'),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            raw_enemy_attack_value "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," enemy.attack()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            damage "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," raw_enemy_attack_value "),s("span",{style:{color:"#F92672"}},"*"),s("span",{style:{color:"#F8F8F2"}}," enemy_mul()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"            print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"f"),s("span",{style:{color:"#E6DB74"}},'"'),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#F8F8F2"}},"enemy.name"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}}," 对你造成 "),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}},"(damage)"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}}," 点伤害！（原始"),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}},"(raw_enemy_attack_value)"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}}," × 倍率"),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#F8F8F2"}},"enemy_mul()"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},":.0f"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}},'）"'),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            player.being_attack(damage)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        player_attack_value "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," player.attack()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        enemy.being_attack(player_attack_value "),s("span",{style:{color:"#F92672"}},"*"),s("span",{style:{color:"#F8F8F2"}}," player_attack_coefficient)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    elif"),s("span",{style:{color:"#F8F8F2"}}," user_input "),s("span",{style:{color:"#F92672"}},"=="),s("span",{style:{color:"#E6DB74"}},' "D"'),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        # 防御：敌人攻击减伤为 90%，然后再应用翻倍倍率")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        raw_enemy_attack_value "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," enemy.attack()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        damage "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," raw_enemy_attack_value "),s("span",{style:{color:"#F92672"}},"*"),s("span",{style:{color:"#AE81FF"}}," 0.1"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," enemy_mul()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"        print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"f"),s("span",{style:{color:"#E6DB74"}},'"'),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#F8F8F2"}},"enemy.name"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}}," 攻击了你（被你防住大部分），造成 "),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}},"(damage)"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}},' 点伤害！"')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"              f"),s("span",{style:{color:"#E6DB74"}},'"（原始'),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}},"(raw_enemy_attack_value)"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}}," × 减伤0.1 × 倍率"),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#F8F8F2"}},"enemy_mul()"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},":.0f"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}},'）"'),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        player.being_attack(damage)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"if"),s("span",{style:{color:"#F8F8F2"}}," player.not_dead():")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"    print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"You Win!"'),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"else"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"    print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"You Lose!"'),s("span",{style:{color:"#F8F8F2"}},")")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])]),_:1}),l[74]||(l[74]=c(`<p>下面把这个<strong>无色进度条</strong>实现逐行、逐个设计点讲清楚。先放原函数，后面按行解释与举例：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> hp_bar</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">cur</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">maxv</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">width</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 20</span><span style="color:#F8F8F2;">) -&gt; </span><span style="color:#66D9EF;font-style:italic;">str</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#E6DB74;">    &quot;&quot;&quot;返回形如：[##########----------] 50%  50/100 的进度条文本&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> maxv </span><span style="color:#F92672;">&lt;=</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">        maxv </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 1</span></span>
<span class="line"><span style="color:#F8F8F2;">    cur </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> max</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;">min</span><span style="color:#F8F8F2;">(cur, maxv))</span></span>
<span class="line"><span style="color:#F8F8F2;">    ratio </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> cur </span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;"> maxv</span></span>
<span class="line"><span style="color:#F8F8F2;">    filled </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">(ratio </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> width </span><span style="color:#F92672;">+</span><span style="color:#AE81FF;"> 0.5</span><span style="color:#F8F8F2;">)  </span><span style="color:#88846F;"># 四舍五入</span></span>
<span class="line"><span style="color:#F8F8F2;">    bar </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;#&quot;</span><span style="color:#F92672;"> *</span><span style="color:#F8F8F2;"> filled </span><span style="color:#F92672;">+</span><span style="color:#E6DB74;"> &quot;-&quot;</span><span style="color:#F92672;"> *</span><span style="color:#F8F8F2;"> (width </span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;"> filled)</span></span>
<span class="line"><span style="color:#F92672;">    return</span><span style="color:#66D9EF;font-style:italic;"> f</span><span style="color:#E6DB74;">&quot;[</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">bar</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">] </span><span style="color:#AE81FF;">{</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">(ratio </span><span style="color:#F92672;">*</span><span style="color:#AE81FF;"> 100</span><span style="color:#F8F8F2;">)</span><span style="color:#66D9EF;font-style:italic;">:3d</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">%  </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">cur</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">/</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">maxv</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p><strong>逐行说明</strong>：</p><ol><li><p><code>def hp_bar(cur: int, maxv: int, width: int = 20) -&gt; str:</code></p><ul><li><p><code>cur</code>：当前血量（current HP）；</p></li><li><p><code>maxv</code>：最大血量（最大/满血）；</p></li><li><p><code>width</code>：进度条宽度（字符格数），默认 20 格；</p></li><li><p>纯 ASCII，不含颜色和特殊字符，<strong>Mac/Windows 任何终端都能显示</strong>。</p></li></ul></li><li><p>代码：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> maxv </span><span style="color:#F92672;">&lt;=</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">    maxv </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p><strong>防御式编程</strong>：避免出现 <code>maxv == 0</code> 导致后面 <code>cur / maxv</code> 除零错误。</p></li><li><p>设置为 1 的意义：即便出现异常的“最大血量 ≤ 0”，也能安全渲染一个最小尺度的进度条。</p></li></ul></li><li><p><code>cur = max(0, min(cur, maxv))</code></p><ul><li><strong>钳制（clamp）当前值</strong>到合法范围 <code>[0, maxv]</code>： <ul><li>过量伤害导致的负值 → 拉回 0；</li><li>加成/溢出治疗导致的超上限 → 拉回 <code>maxv</code>。</li></ul></li><li>这样可保证后续计算的比例和绘制不会越界。</li></ul></li><li><p><code>ratio = cur / maxv</code></p><ul><li>计算<strong>当前血量占比</strong>（0.0 ~ 1.0）。</li><li>由于上一步已钳制，<code>ratio</code> 一定在合法区间内。</li></ul></li><li><p><code>filled = int(ratio * width + 0.5) # 四舍五入</code></p><ul><li>计算<strong>应该填充多少格</strong>（<code>#</code> 的数量）。</li><li><code>ratio * width</code> 给出“理想填充格数”的小数值；我们希望<strong>四舍五入</strong>到最近的整数。</li><li>用 <code>int(x + 0.5)</code> 而不是 <code>round(x)</code> 的原因： <ul><li>Python 的 <code>round</code> 是<strong>银行家舍入</strong>（<code>.5</code> 向最近的偶数靠拢），例如 <code>round(8.5) == 8</code>；</li><li><code>int(x + 0.5)</code> 是更直觉的 “<code>.5 及以上进一</code>”： <ul><li>例：<code>8.5 → int(9.0) = 9</code>。</li></ul></li><li>因为 <code>ratio * width</code> 永不为负，此写法简单稳定。</li></ul></li></ul></li><li><p><code>bar = &quot;#&quot; * filled + &quot;-&quot; * (width - filled)</code></p><ul><li>构造条形：左边 <code>#</code> 表示当前血量，右边 <code>-</code> 表示未填充部分。</li><li>字符串乘法快速生成重复字符，<strong>O(width)</strong> 时间复杂度，足够轻量。</li></ul></li><li><p><code>return f&quot;[{bar}] {int(ratio * 100):3d}% {cur}/{maxv}&quot;</code></p><ul><li>最终文本包含三部分： <ol><li><strong>方括号包裹的条形</strong>：<code>[##########----------]</code></li><li><strong>百分比</strong>：<code>{int(ratio * 100):3d}%</code><ul><li>这里用 <code>int()</code> 而不是四舍五入：显示上更“保守”（例如 99.6% 显示 99%）。</li><li><code>:3d</code> 保证宽度 3 —— “ 5% / 50% / 100%”对齐更整齐。</li></ul></li><li><strong>数值形式</strong>：<code>cur/maxv</code>（例：<code>50/100</code>），便于精确查看。</li></ol></li></ul></li></ol><h4 id="_14-21-3-小例子-心算即可" tabindex="-1"><a class="header-anchor" href="#_14-21-3-小例子-心算即可"><span>14.21.3 小例子（心算即可）</span></a></h4><p>以 <code>width = 20</code> 为例：</p><ul><li><code>cur=0, maxv=100</code><ul><li><code>ratio=0</code>；<code>filled=int(0*20+0.5)=0</code></li><li>条：<code>[--------------------] 0% 0/100</code></li></ul></li><li><code>cur=73, maxv=100</code><ul><li><code>ratio=0.73</code>；<code>filled=int(0.73*20+0.5)=int(14.6+0.5)=15</code></li><li>条：<code>[###############-----] 73% 73/100</code>（15 个 <code>#</code>，5 个 <code>-</code>）</li></ul></li><li><code>cur=99, maxv=100</code><ul><li><code>ratio=0.99</code>；<code>filled=int(19.8+0.5)=20</code> → <strong>条会满格</strong></li><li>百分比 <code>int(99)=99%</code> → 可能出现“条已满但显示 99%”的<strong>轻微不一致</strong>（可接受）</li></ul></li><li><code>cur=100, maxv=100</code><ul><li><code>ratio=1.0</code>；<code>filled=int(20+0.5)=20</code></li><li>条：<code>[####################]100% 100/100</code></li></ul></li><li>越界情况：<code>cur=-5</code> → 钳成 0；<code>cur=120</code> → 钳成 100。</li></ul></li></ul><p><strong>为什么它“跨平台稳”</strong></p><ul><li><strong>只用 ASCII</strong>（<code>#</code>、<code>-</code>、<code>[]</code>），不依赖颜色、宽字符或终端转义序列；</li><li>不需要检测终端是否支持 ANSI 颜色，<strong>CMD / PowerShell / macOS 终端</strong>都能正常显示；</li><li>横向对齐通过固定 <code>width</code> 和百分比字段宽度 <code>:3d</code> 达成。</li></ul><p><strong>可按需的小改动（可选）</strong></p><ol><li><p><strong>让百分比与条形一致地“四舍五入”</strong>（而非取整）：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">pct </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">(ratio </span><span style="color:#F92672;">*</span><span style="color:#AE81FF;"> 100</span><span style="color:#F92672;"> +</span><span style="color:#AE81FF;"> 0.5</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">return</span><span style="color:#66D9EF;font-style:italic;"> f</span><span style="color:#E6DB74;">&quot;[</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">bar</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">] </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">pct</span><span style="color:#66D9EF;font-style:italic;">:3d</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">%  </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">cur</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">/</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">maxv</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>这样 99.6% 会显示为 100%。</p></li><li><p><strong>依据条形反推百分比</strong>（绝对一致）：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">pct </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">((filled </span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;"> width) </span><span style="color:#F92672;">*</span><span style="color:#AE81FF;"> 100</span><span style="color:#F92672;"> +</span><span style="color:#AE81FF;"> 0.5</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这样条满一定显示 100%。</p><p>此处考虑玩家更依赖 50/100 的血量显示，因此条形和百分比的作用类似，且重要程度相当，所以可以保持一致。</p><details class="hint-container details"><summary>条形反推百分比</summary><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">pct </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">((filled </span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;"> width) </span><span style="color:#F92672;">*</span><span style="color:#AE81FF;"> 100</span><span style="color:#F92672;"> +</span><span style="color:#AE81FF;"> 0.5</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>其实在做一件很朴素的事：<strong>先看条形图实际“点亮了几格”（filled），再把它换算成百分比</strong>，最后做一个<strong>四舍五入</strong>。</p><h4 id="_1-一句话版" tabindex="-1"><a class="header-anchor" href="#_1-一句话版"><span>1. 一句话版</span></a></h4><p>进度条是“离散”的（比如一共 20 格，只能亮 0,1,2,…,20 格）。</p><p>既然条形显示是按“亮了几格”来的，那<strong>百分比也用亮格数去算</strong>，保证两者完全一致。</p><h4 id="_2-为什么要-依据条形反推百分比" tabindex="-1"><a class="header-anchor" href="#_2-为什么要-依据条形反推百分比"><span>2. 为什么要“依据条形反推百分比”？</span></a></h4><p>如果用<strong>真实比例</strong>算百分比，比如：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">ratio </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> cur </span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;"> maxv</span></span>
<span class="line"><span style="color:#F8F8F2;">pct </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">(ratio </span><span style="color:#F92672;">*</span><span style="color:#AE81FF;"> 100</span><span style="color:#F8F8F2;">)   </span><span style="color:#88846F;"># 或 round(ratio * 100)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>而条形格数却是：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">filled </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">(ratio </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> width </span><span style="color:#F92672;">+</span><span style="color:#AE81FF;"> 0.5</span><span style="color:#F8F8F2;">)   </span><span style="color:#88846F;"># 四舍五入到最近的格子</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这两处<strong>独立四舍五入</strong>，就可能出现不一致：</p><ul><li><p>例子1（width=20）：<br><code>cur=49, maxv=100 → ratio=0.49</code></p><ul><li><p><strong>条形格数</strong>：<code>filled = int(0.49*20 + 0.5) = int(9.8 + 0.5) = 10</code>（亮 10/20 格 = 50% 的“视觉”）</p></li><li><p><strong>百分比（真实比例取整）</strong>：<code>int(0.49*100) = 49%</code></p><p>⇒ 条形看起来是 50%，数字却写 49% —— 违和。</p></li></ul></li><li><p>例子2（width=20）：<br><code>cur=99, maxv=100 → ratio=0.99</code></p><ul><li><p><strong>条形格数</strong>：<code>filled = int(0.99*20 + 0.5) = 20</code>（满格）</p></li><li><p><strong>百分比（真实比例取整）</strong>：<code>int(99) = 99%</code></p><p>⇒ 满格但写 99% —— 又违和。</p></li></ul></li></ul><p>所以，<strong>用条形→百分比</strong>就不会有这种分裂： <code>filled/width</code> 是条形真正表达的占比，乘以 100 就是“条形所代表的百分比”。</p><h4 id="_3-这行代码逐词解释" tabindex="-1"><a class="header-anchor" href="#_3-这行代码逐词解释"><span>3. 这行代码逐词解释</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">pct </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">((filled </span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;"> width) </span><span style="color:#F92672;">*</span><span style="color:#AE81FF;"> 100</span><span style="color:#F92672;"> +</span><span style="color:#AE81FF;"> 0.5</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><p><code>filled / width</code>：条形<strong>实际</strong>的占比（比如 10/20 = 0.5）。</p></li><li><p><code>* 100</code>：把占比变成百分数（0.5 → 50）。</p></li><li><p><code>+ 0.5</code> 再 <code>int(...)</code>：对<strong>非负数</strong>实现“<strong>四舍五入</strong>”。</p><p>（因为 <code>int(x+0.5)</code> 等价于把 x 四舍五入到最近整数。）</p></li></ul><blockquote><p>这样得到的 <code>pct</code>，<strong>一定</strong>和你当前显示的格数对应的百分比一致。</p><p>例如 <code>filled = 10, width = 20 → pct = 50</code>；<code>filled = 20 → pct = 100</code>。</p></blockquote><h4 id="_4-何时该用这种写法" tabindex="-1"><a class="header-anchor" href="#_4-何时该用这种写法"><span>4. 何时该用这种写法？</span></a></h4><ul><li>你**希望数字和进度条外观“绝对一致”**时，用它！</li><li>这也意味着百分比只能是 <code>0, 100/width, 2*100/width, ... 100</code> 这几档（比如 <code>width=20</code> 就是每 5% 一档）——和你的条形“档位”完全同步。</li></ul><h4 id="_5-放回函数里-示例" tabindex="-1"><a class="header-anchor" href="#_5-放回函数里-示例"><span>5. 放回函数里（示例）</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> hp_bar</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">cur</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">maxv</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">width</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 20</span><span style="color:#F8F8F2;">) -&gt; </span><span style="color:#66D9EF;font-style:italic;">str</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> maxv </span><span style="color:#F92672;">&lt;=</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">        maxv </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 1</span></span>
<span class="line"><span style="color:#F8F8F2;">    cur </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> max</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;">min</span><span style="color:#F8F8F2;">(cur, maxv))</span></span>
<span class="line"><span style="color:#F8F8F2;">    ratio </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> cur </span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;"> maxv</span></span>
<span class="line"><span style="color:#F8F8F2;">    filled </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">(ratio </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> width </span><span style="color:#F92672;">+</span><span style="color:#AE81FF;"> 0.5</span><span style="color:#F8F8F2;">)          </span><span style="color:#88846F;"># 先决定亮几格（条形外观）</span></span>
<span class="line"><span style="color:#F8F8F2;">    pct </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">((filled </span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;"> width) </span><span style="color:#F92672;">*</span><span style="color:#AE81FF;"> 100</span><span style="color:#F92672;"> +</span><span style="color:#AE81FF;"> 0.5</span><span style="color:#F8F8F2;">)    </span><span style="color:#88846F;"># 再用“亮格比例”算百分比，确保一致</span></span>
<span class="line"><span style="color:#F8F8F2;">    bar </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;#&quot;</span><span style="color:#F92672;"> *</span><span style="color:#F8F8F2;"> filled </span><span style="color:#F92672;">+</span><span style="color:#E6DB74;"> &quot;-&quot;</span><span style="color:#F92672;"> *</span><span style="color:#F8F8F2;"> (width </span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;"> filled)</span></span>
<span class="line"><span style="color:#F92672;">    return</span><span style="color:#66D9EF;font-style:italic;"> f</span><span style="color:#E6DB74;">&quot;[</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">bar</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">] </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">pct</span><span style="color:#66D9EF;font-style:italic;">:3d</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">%  </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">cur</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">/</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">maxv</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样，无论 <code>cur/maxv</code> 是多少，小数怎么抖动，<strong>条形显示和数字都会说同一个“真相”</strong>。</p></details></li><li><p><strong>调整分辨率</strong>：</p><ul><li>提高 <code>width</code>（如 30、40）→ 条形更“细腻”；</li><li>降低 <code>width</code>（如 10）→ 更紧凑。</li></ul></li></ol><p><strong>一句话总结</strong></p><ul><li><strong>钳制</strong>保证范围合法；</li><li><strong>比例</strong>决定填充；</li><li>用 <code>int(x+0.5)</code> <strong>四舍五入</strong>避免银行家舍入；</li><li><strong>拼接 ASCII</strong> 构成稳定的跨平台进度条；</li><li><strong>对齐格式</strong>让多次打印读起来更整齐。</li></ul><details class="hint-container details"><summary>银行家舍入</summary><p><strong>银行家舍入</strong>（Banker’s Rounding，也叫“<strong>四舍六入五留双 / 五成双</strong>”、“<strong>round half to even</strong>”）是一种在<strong>恰好落在中点</strong>时（小数部分正好是 0.5，或保留位后全是 0）把数值舍入到<strong>最接近的偶数</strong>的规则。它常用于金融与会计，目的是在大量数据汇总时<strong>消除系统性偏差</strong>（避免总是向上或总是向下）。</p><h4 id="_1-规则一眼看懂" tabindex="-1"><a class="header-anchor" href="#_1-规则一眼看懂"><span>1. 规则一眼看懂</span></a></h4><ul><li>小于 0.5 → 舍（向下）</li><li>大于 0.5 → 入（向上）</li><li><strong>等于 0.5 → 向最近的“偶数”舍入</strong>（关键！）</li></ul><h4 id="_2-快速例子-取整" tabindex="-1"><a class="header-anchor" href="#_2-快速例子-取整"><span>2. 快速例子（取整）</span></a></h4><ul><li><code>1.5 → 2</code>（2 是偶数）</li><li><code>2.5 → 2</code>（2 是偶数）</li><li><code>3.5 → 4</code>（4 是偶数）</li><li><code>4.5 → 4</code>（4 是偶数）</li></ul><p>负数也一样按“就近偶数”：</p><ul><li><code>-1.5 → -2</code>（-2 是偶数）</li><li><code>-2.5 → -2</code>（-2 是偶数）</li></ul><h4 id="_3-保留到指定位-看保留位后一位" tabindex="-1"><a class="header-anchor" href="#_3-保留到指定位-看保留位后一位"><span>3. 保留到指定位（看保留位后一位）</span></a></h4><p>以保留两位小数为例（看“第三位”）：</p><ul><li><code>2.345</code> → 第三位是 5，<strong>第二位是 4（偶）</strong> → <code>2.34</code></li><li><code>2.355</code> → 第三位是 5，<strong>第二位是 5（奇）</strong> → <code>2.36</code></li><li><code>12.1250</code> → 第三位是 5，<strong>第二位是 2（偶）</strong> → <code>12.12</code></li></ul><h4 id="_4-为什么这么做" tabindex="-1"><a class="header-anchor" href="#_4-为什么这么做"><span>4. 为什么这么做？</span></a></h4><ul><li>在大规模求和/统计中，传统“四舍五入（0.5 一律进位）”会产生<strong>系统性偏大</strong>；</li><li>“五留双（中点向偶数）”让上、下的机会更均衡，<strong>长期误差更小</strong>，因此银行、保险、审计等常用。</li></ul><h4 id="_5-在编程语言里的表现" tabindex="-1"><a class="header-anchor" href="#_5-在编程语言里的表现"><span>5. 在编程语言里的表现</span></a></h4><ul><li><p><strong>Python 3</strong>：<code>round()</code> 对“正好在中点”的情况使用<strong>银行家舍入</strong></p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;">round</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">1.5</span><span style="color:#F8F8F2;">)  </span><span style="color:#88846F;"># 2</span></span>
<span class="line"><span style="color:#66D9EF;">round</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">2.5</span><span style="color:#F8F8F2;">)  </span><span style="color:#88846F;"># 2</span></span>
<span class="line"><span style="color:#66D9EF;">round</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">1.5</span><span style="color:#F8F8F2;">) </span><span style="color:#88846F;"># -2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意浮点表示误差：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;">round</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">2.675</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">)  </span><span style="color:#88846F;"># 2.67（不是 2.68）</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>因为 2.675 在二进制浮点中并不精确等于 2.675。要<strong>严格十进制舍入</strong>可用 <code>decimal</code>：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> decimal </span><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> Decimal, </span><span style="color:#AE81FF;">ROUND_HALF_EVEN</span></span>
<span class="line"><span style="color:#F8F8F2;">Decimal(</span><span style="color:#E6DB74;">&quot;2.675&quot;</span><span style="color:#F8F8F2;">).quantize(Decimal(</span><span style="color:#E6DB74;">&quot;0.01&quot;</span><span style="color:#F8F8F2;">), </span><span style="color:#FD971F;font-style:italic;">rounding</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">ROUND_HALF_EVEN</span><span style="color:#F8F8F2;">)  </span><span style="color:#88846F;"># Decimal(&#39;2.68&#39;)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>Excel</strong> 的 <code>ROUND</code> 默认是“<strong>0.5 远离 0 方向</strong>”而不是银行家舍入：<br><code>ROUND(2.5, 0) = 3</code>, <code>ROUND(-2.5, 0) = -3</code>。</p></li><li><p><strong>.NET</strong>：<code>Math.Round(x)</code> 默认也是“<strong>ToEven</strong>”（银行家舍入）。</p></li></ul><h4 id="_6-和代码里的关系" tabindex="-1"><a class="header-anchor" href="#_6-和代码里的关系"><span>6. 和代码里的关系</span></a></h4><p>在进度条里我用了：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">filled </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">(ratio </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> width </span><span style="color:#F92672;">+</span><span style="color:#AE81FF;"> 0.5</span><span style="color:#F8F8F2;">)  </span><span style="color:#88846F;"># 四舍五入</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这是一种**“0.5 一律进位”**的直觉四舍五入（且只针对非负数）。之所以不用 <code>round()</code>，是避免出现：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#66D9EF;">round</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">8.5</span><span style="color:#F8F8F2;">) </span><span style="color:#F92672;">==</span><span style="color:#AE81FF;"> 8</span><span style="color:#88846F;">   # 银行家舍入：到偶数 8</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>对进度条视觉不符合期望（你会希望 8.5 更像 9 格）。</p><p>如果你<strong>想</strong>用银行家舍入来保证数学一致性，可改成：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F8F8F2;">filled </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> round</span><span style="color:#F8F8F2;">(ratio </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> width)  </span><span style="color:#88846F;"># Python 3 的 round 是“到偶数”</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="_7-一句话记忆" tabindex="-1"><a class="header-anchor" href="#_7-一句话记忆"><span>7. 一句话记忆</span></a></h4><p><strong>“五留双”= 中点就近偶数</strong>。它让大量舍入后的总和更公平、更接近真实值。</p></details><h4 id="_9-4-10-使用-faker-库随机生成敌人姓名" tabindex="-1"><a class="header-anchor" href="#_9-4-10-使用-faker-库随机生成敌人姓名"><span>9.4.10 使用 Faker 库随机生成敌人姓名</span></a></h4><p>每轮游戏的敌人都应该是不同的，我们就做到名称不同即可~</p><p>Python Faker 是一个非常好用的库，可以快速生成各种“假数据”（名字、地址、电话、邮箱、公司、银行卡号。。。），在写测试、做原型、模拟数据库时特别方便。</p><p><a href="https://bornforthis.cn/blog/2022/06.html" target="_blank" rel="noopener noreferrer">传播问卷调查数据不够？自己生成假数据！</a></p><h5 id="_9-4-10-1-faker-的基础使用" tabindex="-1"><a class="header-anchor" href="#_9-4-10-1-faker-的基础使用"><span>9.4.10.1 Faker 的基础使用</span></a></h5>`,15)),p(F,{data:[{id:"1. 安装"},{id:"2. 基本用法"},{id:"3. 中文环境"},{id:"4. 常用方法"},{id:"5. 批量生成数据"},{id:"6. 结合字典/列表，做“假数据库”"}]},{title0:a(({value:e,isActive:o})=>[...l[36]||(l[36]=[n("1. 安装",-1)])]),title1:a(({value:e,isActive:o})=>[...l[37]||(l[37]=[n("2. 基本用法",-1)])]),title2:a(({value:e,isActive:o})=>[...l[38]||(l[38]=[n("3. 中文环境",-1)])]),title3:a(({value:e,isActive:o})=>[...l[39]||(l[39]=[n("4. 常用方法",-1)])]),title4:a(({value:e,isActive:o})=>[...l[40]||(l[40]=[n("5. 批量生成数据",-1)])]),title5:a(({value:e,isActive:o})=>[...l[41]||(l[41]=[n("6. 结合字典/列表，做“假数据库”",-1)])]),tab0:a(({value:e,isActive:o})=>[...l[42]||(l[42]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",{class:"language-python"},[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"pip install faker")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"})])],-1)])]),tab1:a(({value:e,isActive:o})=>[...l[43]||(l[43]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",{class:"language-python"},[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"from"),s("span",{style:{color:"#F8F8F2"}}," faker "),s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F8F8F2"}}," Faker")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# 创建一个 Faker 实例（默认是英文环境）")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"fake "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," Faker()")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(fake.name())")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(fake.address())")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(fake.email())")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(fake.text())")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),s("p",null,"运行结果示例：",-1),s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",{class:"language-python"},[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"Christine Taylor")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"673"),s("span",{style:{color:"#F8F8F2"}}," April Causeway")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"Randychester, "),s("span",{style:{color:"#AE81FF"}},"WI"),s("span",{style:{color:"#AE81FF"}}," 72072")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"ljohnson"),s("span",{style:{color:"#F92672"}},"@"),s("span",{style:{color:"#F8F8F2"}},"example.org")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"Many toward style person daughter keep. Attorney explain use baby fine situation character.")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"Task task director create former walk plant collection. Hot meet past letter modern difference.")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])]),tab2:a(({value:e,isActive:o})=>[...l[44]||(l[44]=[s("p",null,"Faker 默认是英文，但是支持多语言。比如生成中文名字和地址：",-1),s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",{class:"language-python"},[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"from"),s("span",{style:{color:"#F8F8F2"}}," faker "),s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F8F8F2"}}," Faker")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# 创建一个 Faker 实例（默认是英文环境）")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"fake "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," Faker("),s("span",{style:{color:"#E6DB74"}},"'zh_CN'"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(fake.name())")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(fake.address())")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(fake.phone_number())")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),s("p",null,"输出示例：",-1),s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",{class:"language-python"},[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"葛丹丹")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"台湾省深圳县六枝特郑州街Z座 "),s("span",{style:{color:"#AE81FF"}},"871973")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"18753320376")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])]),tab3:a(({value:e,isActive:o})=>[...l[45]||(l[45]=[s("table",null,[s("thead",null,[s("tr",null,[s("th",null,"方法"),s("th",null,"说明"),s("th",null,"示例输出")])]),s("tbody",null,[s("tr",null,[s("td",null,[s("code",null,"fake.name()")]),s("td",null,"姓名"),s("td",null,"王伟")]),s("tr",null,[s("td",null,[s("code",null,"fake.address()")]),s("td",null,"地址"),s("td",null,"上海市徐汇区漕溪北路...")]),s("tr",null,[s("td",null,[s("code",null,"fake.email()")]),s("td",null,"邮箱"),s("td",null,[s("a",{href:"mailto:test@qq.com",target:"_blank",rel:"noopener noreferrer"},"test@qq.com")])]),s("tr",null,[s("td",null,[s("code",null,"fake.phone_number()")]),s("td",null,"手机号"),s("td",null,"13912345678")]),s("tr",null,[s("td",null,[s("code",null,"fake.company()")]),s("td",null,"公司"),s("td",null,"腾讯科技有限公司")]),s("tr",null,[s("td",null,[s("code",null,"fake.job()")]),s("td",null,"职位"),s("td",null,"软件工程师")]),s("tr",null,[s("td",null,[s("code",null,"fake.date()")]),s("td",null,"随机日期"),s("td",null,"2025-09-16")]),s("tr",null,[s("td",null,[s("code",null,"fake.ipv4()")]),s("td",null,"IPv4 地址"),s("td",null,"192.168.1.10")]),s("tr",null,[s("td",null,[s("code",null,"fake.url()")]),s("td",null,"URL"),s("td",null,[s("a",{href:"https://example.com",target:"_blank",rel:"noopener noreferrer"},"https://example.com")])])])],-1),s("p",null,null,-1)])]),tab4:a(({value:e,isActive:o})=>[...l[46]||(l[46]=[s("p",null,"经常用在模拟数据库测试数据：",-1),s("p",null,"个人实现：",-1),s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",{class:"language-python"},[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"from"),s("span",{style:{color:"#F8F8F2"}}," faker "),s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F8F8F2"}}," Faker")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# 创建一个 Faker 实例（默认是英文环境）")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"fake "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," Faker("),s("span",{style:{color:"#E6DB74"}},"'zh_CN'"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"i "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 0")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"while"),s("span",{style:{color:"#F8F8F2"}}," i "),s("span",{style:{color:"#F92672"}},"<="),s("span",{style:{color:"#AE81FF"}}," 4"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"    print"),s("span",{style:{color:"#F8F8F2"}},"(fake.name(), fake.phone_number(), fake.email())")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    i"),s("span",{style:{color:"#F92672"}},"+="),s("span",{style:{color:"#AE81FF"}},"1")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),s("p",null,"老师实现：",-1),s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",{class:"language-python"},[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"from"),s("span",{style:{color:"#F8F8F2"}}," faker "),s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F8F8F2"}}," Faker")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# 创建一个 Faker 实例（默认是英文环境）")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"fake "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," Faker("),s("span",{style:{color:"#E6DB74"}},"'zh_CN'"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"for"),s("span",{style:{color:"#F8F8F2"}}," _ "),s("span",{style:{color:"#F92672"}},"in"),s("span",{style:{color:"#66D9EF"}}," range"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#AE81FF"}},"5"),s("span",{style:{color:"#F8F8F2"}},"):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"    print"),s("span",{style:{color:"#F8F8F2"}},"(fake.name(), fake.phone_number(), fake.email())")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),s("p",null,null,-1)])]),tab5:a(({value:e,isActive:o})=>[...l[47]||(l[47]=[s("div",{class:"language-python line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"python",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",{class:"language-python"},[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"from"),s("span",{style:{color:"#F8F8F2"}}," faker "),s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F8F8F2"}}," Faker")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# 创建一个 Faker 实例（默认是英文环境）")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"fake "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," Faker("),s("span",{style:{color:"#E6DB74"}},"'zh_CN'"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"data "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," [")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"        'id'"),s("span",{style:{color:"#F8F8F2"}},": i,")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"        'name'"),s("span",{style:{color:"#F8F8F2"}},": fake.name(),")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"        'email'"),s("span",{style:{color:"#F8F8F2"}},": fake.email(),")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"        'address'"),s("span",{style:{color:"#F8F8F2"}},": fake.address(),")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"        'job'"),s("span",{style:{color:"#F8F8F2"}},": fake.job(),")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"        'company'"),s("span",{style:{color:"#F8F8F2"}},": fake.company(),")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    }")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    for"),s("span",{style:{color:"#F8F8F2"}}," i "),s("span",{style:{color:"#F92672"}},"in"),s("span",{style:{color:"#66D9EF"}}," range"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"6"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"]")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"for"),s("span",{style:{color:"#F8F8F2"}}," item "),s("span",{style:{color:"#F92672"}},"in"),s("span",{style:{color:"#F8F8F2"}}," data:")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"    print"),s("span",{style:{color:"#F8F8F2"}},"(item)")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1),s("p",null,"输出示例：",-1),s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",{class:"language-python"},[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"{"),s("span",{style:{color:"#E6DB74"}},"'id'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'name'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},"'王桂兰'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'email'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},"'jie73@example.org'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'address'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},"'内蒙古自治区秀英市长寿郝路L座 966460'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'job'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},"'其他'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'company'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},"'明腾科技有限公司'"),s("span",{style:{color:"#F8F8F2"}},"}")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"{"),s("span",{style:{color:"#E6DB74"}},"'id'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'name'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},"'张玉英'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'email'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},"'yongfan@example.net'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'address'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},"'江西省兰州县门头沟李街k座 529875'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'job'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},"'理货员'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'company'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},"'恩悌网络有限公司'"),s("span",{style:{color:"#F8F8F2"}},"}")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"{"),s("span",{style:{color:"#E6DB74"}},"'id'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#AE81FF"}},"3"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'name'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},"'董宇'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'email'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},"'csong@example.net'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'address'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},"'安徽省浩县牧野王街U座 814580'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'job'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},"'资金经理/主管'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'company'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},"'方正科技网络有限公司'"),s("span",{style:{color:"#F8F8F2"}},"}")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"{"),s("span",{style:{color:"#E6DB74"}},"'id'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#AE81FF"}},"4"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'name'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},"'刘秀芳'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'email'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},"'jiayan@example.net'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'address'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},"'湖北省霞市城北席街n座 380078'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'job'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},"'其他'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'company'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},"'华成育卓科技有限公司'"),s("span",{style:{color:"#F8F8F2"}},"}")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"{"),s("span",{style:{color:"#E6DB74"}},"'id'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#AE81FF"}},"5"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'name'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},"'徐磊'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'email'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},"'daimin@example.com'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'address'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},"'山东省静市清城辽阳路a座 476086'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'job'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},"'脚本开发工程师'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'company'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},"'毕博诚信息有限公司'"),s("span",{style:{color:"#F8F8F2"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),s("p",null,null,-1)])]),_:1}),p(F,{data:[{id:"7. 固定随机种子（保证可复现）"},{id:"8. 生成名字和邮箱里保持一致"}]},{title0:a(({value:e,isActive:o})=>[...l[48]||(l[48]=[n("7. 固定随机种子（保证可复现）",-1)])]),title1:a(({value:e,isActive:o})=>[...l[49]||(l[49]=[n("8. 生成名字和邮箱里保持一致",-1)])]),tab0:a(({value:e,isActive:o})=>[...l[50]||(l[50]=[s("p",null,"有时需要生成“固定不变”的假数据：",-1),s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",{class:"language-python"},[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"from"),s("span",{style:{color:"#F8F8F2"}}," faker "),s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F8F8F2"}}," Faker")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"Faker.seed("),s("span",{style:{color:"#AE81FF"}},"1234"),s("span",{style:{color:"#F8F8F2"}},")      "),s("span",{style:{color:"#88846F"}},"# 全局种子，数字随便设置")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"fake "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," Faker("),s("span",{style:{color:"#E6DB74"}},"'zh_CN'"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(fake.name())")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(fake.name())")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),s("p",null,"每次运行都会输出一样的结果。",-1),s("p",null,null,-1)])]),tab1:a(({value:e,isActive:o})=>[...l[51]||(l[51]=[s("p",null,"需要名字和邮箱的姓名保持一致，比如：",-1),s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",{class:"language-python"},[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"姓名：李娜  → 邮箱：lina"),s("span",{style:{color:"#F92672"}},"@"),s("span",{style:{color:"#F8F8F2"}},"example.com")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"姓名：王刚  → 邮箱：wanggang"),s("span",{style:{color:"#F92672"}},"@"),s("span",{style:{color:"#F8F8F2"}},"example.com")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),s("p",null,[n("这个就需要在生成邮箱时，根据名字来构造，而不是让 "),s("code",null,"fake.email()"),n(" 随机生成。")],-1),s("p",null,"把中文名字转换成拼音，再拼接邮箱",-1),s("p",null,[n("常用方法是借助 "),s("code",null,"pypinyin"),n(" 库：")],-1),s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",{class:"language-python"},[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"pip install pinyin")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"})])],-1),s("p",null,"代码如下：",-1),s("div",{class:"language-python line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"python",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",{class:"language-python"},[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"from"),s("span",{style:{color:"#F8F8F2"}}," faker "),s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F8F8F2"}}," Faker")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F8F8F2"}}," pandas "),s("span",{style:{color:"#F92672"}},"as"),s("span",{style:{color:"#F8F8F2"}}," pd")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"from"),s("span",{style:{color:"#F8F8F2"}}," pypinyin "),s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F8F8F2"}}," lazy_pinyin")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"fake "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," Faker("),s("span",{style:{color:"#E6DB74"}},"'zh_CN'"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"users "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," []")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"for"),s("span",{style:{color:"#F8F8F2"}}," i "),s("span",{style:{color:"#F92672"}},"in"),s("span",{style:{color:"#66D9EF"}}," range"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"11"),s("span",{style:{color:"#F8F8F2"}},"):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    name "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," fake.name()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    # 把中文名字转成拼音（list 转成字符串）")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    name_pinyin "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}}," ''"),s("span",{style:{color:"#F8F8F2"}},".join(lazy_pinyin(name))")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    email "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," f"),s("span",{style:{color:"#E6DB74"}},"'"),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#F8F8F2"}},"name_pinyin"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}},"@example.com'")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    ")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    user "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"        'ID'"),s("span",{style:{color:"#F8F8F2"}},": i,")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"        '姓名'"),s("span",{style:{color:"#F8F8F2"}},": name,")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"        '邮箱'"),s("span",{style:{color:"#F8F8F2"}},": email,")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"        '手机号'"),s("span",{style:{color:"#F8F8F2"}},": fake.phone_number(),")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"        '地址'"),s("span",{style:{color:"#F8F8F2"}},": fake.address(),")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    }")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    users.append(user)")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    ")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"df "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," pd.DataFrame(users)")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"df.to_csv("),s("span",{style:{color:"#E6DB74"}},"'用户表数据.csv'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"index"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"False"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"encoding"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},"'utf-8-sig'"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(df.head())")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1),s("p",null,null,-1)])]),_:1}),l[75]||(l[75]=c(`<h5 id="_9-4-10-2-敌人姓名随机生成" tabindex="-1"><a class="header-anchor" href="#_9-4-10-2-敌人姓名随机生成"><span>9.4.10.2 敌人姓名随机生成</span></a></h5><p>在生成玩家和敌人时增加 <code>Faker</code> ，<code>Faker</code> 也需要先进行“实例化”，代码修改如下：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> faker </span><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> Faker</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#---snip---</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">player </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Creature(</span><span style="color:#AE81FF;">100</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;AI悦创&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">enemy_fake </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Faker(</span><span style="color:#E6DB74;">&#39;zh_CN&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">enemy </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Creature(</span><span style="color:#AE81FF;">80</span><span style="color:#F8F8F2;">, enemy_fake.name())</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>目前完整代码：</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-python"><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> random</span></span>
<span class="line"><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> faker </span><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> Faker</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># —— 简单无色进度条（纯 ASCII，跨平台）——</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> hp_bar</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">cur</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">maxv</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">width</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 20</span><span style="color:#F8F8F2;">) -&gt; </span><span style="color:#66D9EF;font-style:italic;">str</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#E6DB74;">    &quot;&quot;&quot;返回形如：[##########----------] 50%  5g0/100 的进度条文本&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> maxv </span><span style="color:#F92672;">&lt;=</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">        maxv </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 1</span></span>
<span class="line"><span style="color:#F8F8F2;">    cur </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> max</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;">min</span><span style="color:#F8F8F2;">(cur, maxv))</span></span>
<span class="line"><span style="color:#F8F8F2;">    ratio </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> cur </span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;"> maxv</span></span>
<span class="line"><span style="color:#F8F8F2;">    filled </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">(ratio </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> width </span><span style="color:#F92672;">+</span><span style="color:#AE81FF;"> 0.5</span><span style="color:#F8F8F2;">)  </span><span style="color:#88846F;"># 四舍五入</span></span>
<span class="line"><span style="color:#F8F8F2;">    bar </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;#&quot;</span><span style="color:#F92672;"> *</span><span style="color:#F8F8F2;"> filled </span><span style="color:#F92672;">+</span><span style="color:#E6DB74;"> &quot;-&quot;</span><span style="color:#F92672;"> *</span><span style="color:#F8F8F2;"> (width </span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;"> filled)</span></span>
<span class="line"><span style="color:#F92672;">    return</span><span style="color:#66D9EF;font-style:italic;"> f</span><span style="color:#E6DB74;">&quot;[</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">bar</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">] </span><span style="color:#AE81FF;">{</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">(ratio </span><span style="color:#F92672;">*</span><span style="color:#AE81FF;"> 100</span><span style="color:#F8F8F2;">)</span><span style="color:#66D9EF;font-style:italic;">:3d</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">%  </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">cur</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">/</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">maxv</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&quot;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Creature</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">hp</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">name</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.hp </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">(hp)</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.max_hp </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">(hp)  </span><span style="color:#88846F;"># 记录初始满血</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.name </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> name</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> attack</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#F8F8F2;"> random.randint(</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">50</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> not_dead</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.hp </span><span style="color:#F92672;">&gt;</span><span style="color:#AE81FF;"> 0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> being_attack</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">dmg</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;font-style:italic;">float</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#E6DB74;">        &quot;&quot;&quot;受到伤害（向下取整以避免浮点 HP），并保证 HP 不会掉到负数以下&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.hp </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> max</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.hp </span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;"> dmg))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> heal_full</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#E6DB74;">        &quot;&quot;&quot;直接回到初始满血&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.hp </span><span style="color:#F92672;">=</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.max_hp</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> show_status</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;</span><span style="color:#AE81FF;">{</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&#39;s HP → </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">hp_bar(</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.hp, </span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.max_hp)</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">fk </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Faker(</span><span style="color:#FD971F;font-style:italic;">locale</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;">&#39;zh_CN&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">player </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Creature(</span><span style="color:#AE81FF;">100</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;AI悦创&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">enemy </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Creature(</span><span style="color:#AE81FF;">80</span><span style="color:#F8F8F2;">, fk.name())</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">heal_used </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> False</span><span style="color:#88846F;">  # 治疗仅限一次</span></span>
<span class="line"><span style="color:#F8F8F2;">heal_penalty_active </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> False</span><span style="color:#88846F;">  # 是否已触发“敌人攻击翻倍”的惩罚</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">while</span><span style="color:#F8F8F2;"> player.not_dead() </span><span style="color:#F92672;">and</span><span style="color:#F8F8F2;"> enemy.not_dead():</span></span>
<span class="line"><span style="color:#F8F8F2;">    player.show_status()</span></span>
<span class="line"><span style="color:#F8F8F2;">    enemy.show_status()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">    # 是否出现治疗提示：仅当当前 HP &lt; 初始 HP 的 50% 且尚未使用</span></span>
<span class="line"><span style="color:#F8F8F2;">    can_heal_now </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#F92672;">not</span><span style="color:#F8F8F2;"> heal_used) </span><span style="color:#F92672;">and</span><span style="color:#F8F8F2;"> (player.hp </span><span style="color:#F92672;">&lt;</span><span style="color:#F8F8F2;"> player.max_hp </span><span style="color:#F92672;">*</span><span style="color:#AE81FF;"> 0.5</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> can_heal_now:</span></span>
<span class="line"><span style="color:#F8F8F2;">        prompt </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &#39;Attack or Defence or Heal (A/D/H)：&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">        valid_inputs </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&quot;A&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;D&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;H&quot;</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;（提示：你现在可以按 H 回满血，仅此一次）&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">    else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">        prompt </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &#39;Attack or Defence (A/D)：&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">        valid_inputs </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&quot;A&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;D&quot;</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> heal_penalty_active:</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;【警告】治疗代价生效中：敌人对你的伤害 ×2！&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    user_input </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(prompt).strip().upper()</span></span>
<span class="line"><span style="color:#F92672;">    while</span><span style="color:#F8F8F2;"> user_input </span><span style="color:#F92672;">not</span><span style="color:#F92672;"> in</span><span style="color:#F8F8F2;"> valid_inputs:</span></span>
<span class="line"><span style="color:#F8F8F2;">        user_input </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;输入无效，请重新输入：&quot;</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> prompt).strip().upper()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">    # 敌人选择（对 A/D 有影响；若玩家选择 H，我们让敌人本回合直接攻击）</span></span>
<span class="line"><span style="color:#F8F8F2;">    enemy_status </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#E6DB74;">&#39;Attack&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;Defence&#39;</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">    enemy_choice </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> random.choices(enemy_status, </span><span style="color:#FD971F;font-style:italic;">weights</span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">0.7</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0.3</span><span style="color:#F8F8F2;">], </span><span style="color:#FD971F;font-style:italic;">k</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">)[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">]  </span><span style="color:#88846F;"># 敌人更倾向于攻击</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">    # 当前敌人伤害倍率（是否翻倍）</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> enemy_mul</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#AE81FF;"> 2.0</span><span style="color:#F92672;"> if</span><span style="color:#F8F8F2;"> heal_penalty_active </span><span style="color:#F92672;">else</span><span style="color:#AE81FF;"> 1.0</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> user_input </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &quot;H&quot;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#88846F;">        # 只有在 can_heal_now 为 True 时才会进入到这里</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;你使用了治疗技能！血量已回满。&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        player.heal_full()</span></span>
<span class="line"><span style="color:#F8F8F2;">        heal_used </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> True</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">        # 触发治疗代价：从现在起敌人攻击翻倍（包含本回合的随后的敌人攻击）</span></span>
<span class="line"><span style="color:#F8F8F2;">        heal_penalty_active </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> True</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">        # 敌人回合：直接攻击（先治再挨打）</span></span>
<span class="line"><span style="color:#F8F8F2;">        raw_enemy_attack_value </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> enemy.attack()</span></span>
<span class="line"><span style="color:#F8F8F2;">        damage </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> raw_enemy_attack_value </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> enemy_mul()</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">enemy.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> 攻击了你，造成 </span><span style="color:#AE81FF;">{</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">(damage)</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> 点伤害！（原始</span><span style="color:#AE81FF;">{</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">(raw_enemy_attack_value)</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> × 倍率</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">enemy_mul()</span><span style="color:#66D9EF;font-style:italic;">:.0f</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">）&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        player.being_attack(damage)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">    elif</span><span style="color:#F8F8F2;"> user_input </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &quot;A&quot;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">        player_attack_coefficient </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 1</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> enemy_choice </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &quot;Defence&quot;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">enemy.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> chose to defend!&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            player_attack_coefficient </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0.5</span></span>
<span class="line"><span style="color:#F92672;">        else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">enemy.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> chose to attack!&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            raw_enemy_attack_value </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> enemy.attack()</span></span>
<span class="line"><span style="color:#F8F8F2;">            damage </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> raw_enemy_attack_value </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> enemy_mul()</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">enemy.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> 对你造成 </span><span style="color:#AE81FF;">{</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">(damage)</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> 点伤害！（原始</span><span style="color:#AE81FF;">{</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">(raw_enemy_attack_value)</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> × 倍率</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">enemy_mul()</span><span style="color:#66D9EF;font-style:italic;">:.0f</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">）&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            player.being_attack(damage)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">        player_attack_value </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> player.attack()</span></span>
<span class="line"><span style="color:#F8F8F2;">        enemy.being_attack(player_attack_value </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> player_attack_coefficient)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">    elif</span><span style="color:#F8F8F2;"> user_input </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &quot;D&quot;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#88846F;">        # 防御：敌人攻击减伤为 90%，然后再应用翻倍倍率</span></span>
<span class="line"><span style="color:#F8F8F2;">        raw_enemy_attack_value </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> enemy.attack()</span></span>
<span class="line"><span style="color:#F8F8F2;">        damage </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> raw_enemy_attack_value </span><span style="color:#F92672;">*</span><span style="color:#AE81FF;"> 0.1</span><span style="color:#F92672;"> *</span><span style="color:#F8F8F2;"> enemy_mul()</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">enemy.name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> 攻击了你（被你防住大部分），造成 </span><span style="color:#AE81FF;">{</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">(damage)</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> 点伤害！&quot;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">              f</span><span style="color:#E6DB74;">&quot;（原始</span><span style="color:#AE81FF;">{</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">(raw_enemy_attack_value)</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> × 减伤0.1 × 倍率</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">enemy_mul()</span><span style="color:#66D9EF;font-style:italic;">:.0f</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">）&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        player.being_attack(damage)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> player.not_dead():</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;You Win!&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;You Lose!&quot;</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_9-5-大模型接入对战" tabindex="-1"><a class="header-anchor" href="#_9-5-大模型接入对战"><span>9.5 大模型接入对战！</span></a></h3><p><strong>目的：</strong> 使我们纯python项目，可以融合其他功能。学会利用现有的 Python 基础，扩展新的功能。对于自己来说，要掌握快速上手新技术的能力。</p><p><strong>核心点：</strong></p><ul><li><p>代码实现 🌟</p></li><li><p>原理探索探究 🌟🌟</p></li><li><p>实现思想 🌟🌟🌟</p><p>要知道如何向大模型接力，如何跟大模型交互、对话。这些无关代码、原理。作为“各个厂家大模型的调用者”要怎么去安排工作流程、分配任务等。</p></li></ul><p><strong>核心实现思维：</strong> 把对战信息存储下来，发送给大模型，让大模型基于当前的血量、游戏进展给出合理的指令（攻击 or 防守）</p><h4 id="_9-5-1-api-对接实战实现-deepseek" tabindex="-1"><a class="header-anchor" href="#_9-5-1-api-对接实战实现-deepseek"><span>9.5.1 API 对接实战实现（DeepSeek)</span></a></h4><h5 id="_1-deepseek-api-基础调用" tabindex="-1"><a class="header-anchor" href="#_1-deepseek-api-基础调用"><span>1. DeepSeek API 基础调用</span></a></h5>`,12)),p(F,{data:[{id:"1. DeepSeek API 注册"},{id:"2. API Key 的初体验"},{id:"3. 实际运行感受"},{id:"4. 推理模型"},{id:"5. 实现多轮对话"}]},{title0:a(({value:e,isActive:o})=>[...l[52]||(l[52]=[n("1. DeepSeek API 注册",-1)])]),title1:a(({value:e,isActive:o})=>[...l[53]||(l[53]=[n("2. API Key 的初体验",-1)])]),title2:a(({value:e,isActive:o})=>[...l[54]||(l[54]=[n("3. 实际运行感受",-1)])]),title3:a(({value:e,isActive:o})=>[...l[55]||(l[55]=[n("4. 推理模型",-1)])]),title4:a(({value:e,isActive:o})=>[...l[56]||(l[56]=[n("5. 实现多轮对话",-1)])]),tab0:a(({value:e,isActive:o})=>[...l[57]||(l[57]=[s("p",null,[n("这一步主要实现 DeepSeek API 平台账号注册，API 官网链接："),s("a",{href:"https://api-docs.deepseek.com/",target:"_blank",rel:"noopener noreferrer"},"https://api-docs.deepseek.com/")],-1),s("p",null,[n("官网界面右上角 DeepSeek Platform 进行注册、实名、充值、创建 "),s("strong",null,"API Key"),n(" 。")],-1),s("p",null,null,-1)])]),tab1:a(({value:e,isActive:o})=>[...l[58]||(l[58]=[s("p",null,[n("查看接口文档 "),s("a",{href:"https://api-docs.deepseek.com/zh-cn/",target:"_blank",rel:"noopener noreferrer"},"https://api-docs.deepseek.com/zh-cn/")],-1),s("figure",null,[s("img",{src:A,alt:"",tabindex:"0",loading:"lazy"}),s("figcaption")],-1),s("p",null,"复制其中的 Python 代码：",-1),s("div",{class:"language-python line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"python",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",{class:"language-python"},[s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# Please install OpenAI SDK first: `pip3 install openai`   此处安装代码可微调")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"from"),s("span",{style:{color:"#F8F8F2"}}," openai "),s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F8F8F2"}}," OpenAI")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"client "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," OpenAI("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"api_key"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},'"<DeepSeek API Key>"'),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"base_url"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},'"https://api.deepseek.com"'),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"response "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," client.chat.completions.create(")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F","font-style":"italic"}},"    model"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},'"deepseek-chat"'),s("span",{style:{color:"#F8F8F2"}},",")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F","font-style":"italic"}},"    messages"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}},"[")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        {"),s("span",{style:{color:"#E6DB74"}},'"role"'),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},'"system"'),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},'"content"'),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},'"You are a helpful assistant"'),s("span",{style:{color:"#F8F8F2"}},"},")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        {"),s("span",{style:{color:"#E6DB74"}},'"role"'),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},'"user"'),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},'"content"'),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},'"Hello"'),s("span",{style:{color:"#F8F8F2"}},"},")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    ],")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F","font-style":"italic"}},"    stream"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"False")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(response.choices["),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},"].message.content)")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1),s("p",null,"几个修改（注意）点：",-1),s("ul",null,[s("li",null,[s("p",null,[n("根据第一行提示安装 OpenAI 库："),s("code",null,"pip3 install openai"),n(" ；")]),s("p",null,[n("安装失败需要换源，参考 Python pip换源所有方法："),s("a",{href:"https://bornforthis.cn/posts/16.html",target:"_blank",rel:"noopener noreferrer"},"https://bornforthis.cn/posts/16.html"),n(" ；")]),s("p",null,[n("推荐使用第三种方法，命令为："),s("code",null,"pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/"),n(" 。")]),s("p",null,"成功结果如下："),s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",{class:"language-python"},[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"(.venv) D:\\"),s("span",{style:{color:"#F44747"}},"Coder>pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"Writing to C:\\"),s("span",{style:{color:"#F44747"}},"Users\\12390\\AppData\\Roaming\\pip\\pip.ini")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"})])])]),s("li",null,[s("p",null,[n("修改 "),s("code",null,"api_key"),n(" ：修改成自己从 DeepSeek 获取到的 key；")])]),s("li",null,[s("p",null,[s("code",null,"model"),n(" 可以修改成自己想要使用的模型；")])]),s("li",null,[s("p",null,[s("code",null,"messages"),n(" ：主要的对话信息、历史对话信息都储存在 "),s("code",null,"message"),n(" 列表中；")])]),s("li",null,[s("p",null,[n("对于 "),s("code",null,"message"),n(" 中的字典，key 的重要点：")]),s("ul",null,[s("li",null,[s("p",null,[s("code",null,'"role"'),n(" ：角色，大模型需要分清楚是谁给出的信息。常见的 AI 大模型角色有三种，分别是：")]),s("ul",null,[s("li",null,[s("p",null,[s("code",null,'"system"'),n(" ：可以设定大模型的规则，也就是：让大模型可以回答什么，不可以回答什么；")]),s("blockquote",null,[s("p",null,"举个例子：如果有人问你：你用的是什么模型？你就回答用的是：AI创悦一对一辅导大模型，AI创悦科技有限责任公司研发。（提前定制大模型角色，以便大模型更好的伪装角色）"),s("p",null,[n("（这个浅灰色部分通过英文输入法下的大于号+空格 "),s("code",null,"> "),n(" 即可实现。）")])])]),s("li",null,[s("p",null,[s("code",null,'"user"'),n(" ：用户的角色，也就是用户输入的信息，以 "),s("code",null,'"user"'),n(" 提供给大模型；")])]),s("li",null,[s("p",null,[s("code",null,'"assistant"'),n(" ：大模型自己的回复的信息，以 "),s("code",null,'"assistant"'),n(" 角色提供，这样大模型就知道：哦，这是我自己的回复。")])])])]),s("li",null,[s("p",null,[s("code",null,"“content”"),n(" ：顾名思义，就是文本内容；")])])])]),s("li",null,[s("p",null,[s("code",null,"stream=False "),n("：回答文本是否要以一段一段、一句一句的回复（"),s("code",null,"stream=False"),n(" ），还是要以完整的一整段回复给我（"),s("code",null,"stream=True"),n(" ）。")])]),s("li",null,[s("p",null,[s("code",null,"response.choices[0].message.content"),n(" ：这个就是当 "),s("code",null,"stream=False"),n(" 时，提取回答内容的方式，参考以往字典中学习的内容，提取嵌套字典中的数据，原理一致。")])])],-1)])]),tab2:a(({value:e,isActive:o})=>[...l[59]||(l[59]=[s("p",null,"使用 DeepSeek 编写 Python 九九乘法表：",-1),s("div",{class:"language-python line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"python",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",{class:"language-python"},[s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# Please install OpenAI SDK first: `pip3 install openai`")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"from"),s("span",{style:{color:"#F8F8F2"}}," openai "),s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F8F8F2"}}," OpenAI")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"client "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," OpenAI("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"api_key"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},'"sk---snip---f"'),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"base_url"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},'"https://api.deepseek.com"'),s("span",{style:{color:"#F8F8F2"}},")  "),s("span",{style:{color:"#88846F"}},"# 复制来自己的 Key，此处隐藏。")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"response "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," client.chat.completions.create(")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F","font-style":"italic"}},"    model"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},'"deepseek-chat"'),s("span",{style:{color:"#F8F8F2"}},",")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F","font-style":"italic"}},"    messages"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}},"[")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        {"),s("span",{style:{color:"#E6DB74"}},'"role"'),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},'"system"'),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},'"content"'),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},'"You are a helpful assistant"'),s("span",{style:{color:"#F8F8F2"}},"},")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        {"),s("span",{style:{color:"#E6DB74"}},'"role"'),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},'"user"'),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},'"content"'),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},'"给我一个 Python九九乘法表"'),s("span",{style:{color:"#F8F8F2"}},"},")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    ],")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F","font-style":"italic"}},"    stream"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"False")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(response.choices["),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},"].message.content)")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1),s("p",null,"输出结果如下：",-1),s("div",{class:"language-python line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"python",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",{class:"language-python"},[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"以下是两种常见的 Python 九九乘法表实现方式：")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"### 方法一：基础嵌套循环")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F44747"}},"```python")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"for"),s("span",{style:{color:"#F8F8F2"}}," i "),s("span",{style:{color:"#F92672"}},"in"),s("span",{style:{color:"#66D9EF"}}," range"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"10"),s("span",{style:{color:"#F8F8F2"}},"):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    for"),s("span",{style:{color:"#F8F8F2"}}," j "),s("span",{style:{color:"#F92672"}},"in"),s("span",{style:{color:"#66D9EF"}}," range"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},", i "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#AE81FF"}}," 1"),s("span",{style:{color:"#F8F8F2"}},"):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"        print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"f"),s("span",{style:{color:"#E6DB74"}},'"'),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#F8F8F2"}},"j"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}},"×"),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#F8F8F2"}},"i"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}},"="),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#F8F8F2"}},"i"),s("span",{style:{color:"#F92672"}},"*"),s("span",{style:{color:"#F8F8F2"}},"j"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}},'"'),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"end"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},'"'),s("span",{style:{color:"#AE81FF"}},"\\t"),s("span",{style:{color:"#E6DB74"}},'"'),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"    print"),s("span",{style:{color:"#F8F8F2"}},"()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F44747"}},"```")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"### 方法二：格式化输出（更整齐）")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F44747"}},"```python")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"for"),s("span",{style:{color:"#F8F8F2"}}," i "),s("span",{style:{color:"#F92672"}},"in"),s("span",{style:{color:"#66D9EF"}}," range"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"10"),s("span",{style:{color:"#F8F8F2"}},"):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    for"),s("span",{style:{color:"#F8F8F2"}}," j "),s("span",{style:{color:"#F92672"}},"in"),s("span",{style:{color:"#66D9EF"}}," range"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},", i "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#AE81FF"}}," 1"),s("span",{style:{color:"#F8F8F2"}},"):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"        print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"f"),s("span",{style:{color:"#E6DB74"}},'"'),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#F8F8F2"}},"j"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}},"×"),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#F8F8F2"}},"i"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}},"="),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#F8F8F2"}},"i"),s("span",{style:{color:"#F92672"}},"*"),s("span",{style:{color:"#F8F8F2"}},"j"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},":2d"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}},'"'),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"end"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},'"  "'),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"    print"),s("span",{style:{color:"#F8F8F2"}},"()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F44747"}},"```")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"### 输出效果：")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F44747"}},"```")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},"×"),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 1"),s("span",{style:{color:"#F8F8F2"}},"  ")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},"×"),s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 2"),s("span",{style:{color:"#AE81FF"}},"  2"),s("span",{style:{color:"#F8F8F2"}},"×"),s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 4"),s("span",{style:{color:"#F8F8F2"}},"  ")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},"×"),s("span",{style:{color:"#AE81FF"}},"3"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 3"),s("span",{style:{color:"#AE81FF"}},"  2"),s("span",{style:{color:"#F8F8F2"}},"×"),s("span",{style:{color:"#AE81FF"}},"3"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 6"),s("span",{style:{color:"#AE81FF"}},"  3"),s("span",{style:{color:"#F8F8F2"}},"×"),s("span",{style:{color:"#AE81FF"}},"3"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 9"),s("span",{style:{color:"#F8F8F2"}},"  ")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},"×"),s("span",{style:{color:"#AE81FF"}},"4"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 4"),s("span",{style:{color:"#AE81FF"}},"  2"),s("span",{style:{color:"#F8F8F2"}},"×"),s("span",{style:{color:"#AE81FF"}},"4"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 8"),s("span",{style:{color:"#AE81FF"}},"  3"),s("span",{style:{color:"#F8F8F2"}},"×"),s("span",{style:{color:"#AE81FF"}},"4"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"12"),s("span",{style:{color:"#AE81FF"}},"  4"),s("span",{style:{color:"#F8F8F2"}},"×"),s("span",{style:{color:"#AE81FF"}},"4"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"16"),s("span",{style:{color:"#F8F8F2"}},"  ")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"..."),s("span",{style:{color:"#F8F8F2"}},"（以此类推）")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F44747"}},"```")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"### 方法三：单行代码版（使用列表推导式）")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F44747"}},"```python")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},"'"),s("span",{style:{color:"#AE81FF"}},"\\n"),s("span",{style:{color:"#E6DB74"}},"'"),s("span",{style:{color:"#F8F8F2"}},".join(["),s("span",{style:{color:"#E6DB74"}},"' '"),s("span",{style:{color:"#F8F8F2"}},".join(["),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"f"),s("span",{style:{color:"#E6DB74"}},'"'),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#F8F8F2"}},"j"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}},"×"),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#F8F8F2"}},"i"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}},"="),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#F8F8F2"}},"i"),s("span",{style:{color:"#F92672"}},"*"),s("span",{style:{color:"#F8F8F2"}},"j"),s("span",{style:{color:"#66D9EF","font-style":"italic"}},":2d"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}},'"'),s("span",{style:{color:"#F92672"}}," for"),s("span",{style:{color:"#F8F8F2"}}," j "),s("span",{style:{color:"#F92672"}},"in"),s("span",{style:{color:"#66D9EF"}}," range"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},", i"),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},")]) "),s("span",{style:{color:"#F92672"}},"for"),s("span",{style:{color:"#F8F8F2"}}," i "),s("span",{style:{color:"#F92672"}},"in"),s("span",{style:{color:"#66D9EF"}}," range"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"10"),s("span",{style:{color:"#F8F8F2"}},")]))")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F44747"}},"```")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"选择任意一种方法运行即可得到完整的九九乘法表。第一种方法最易理解，第二种输出格式更整齐，第三种最简洁。")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1),s("p",null,null,-1)])]),tab3:a(({value:e,isActive:o})=>[...l[60]||(l[60]=[s("p",null,[s("code",null,"deepseek-reasoner"),n(" 是支持推理模式的 DeepSeek 模型。在输出最终回答之前，模型会先输出一段思维链内容，以提升最终答案的准确性。我们的 API 向用户开放 "),s("code",null,"deepseek-reasoner"),n(" 思维链的内容，以供用户查看、展示、蒸馏使用。")],-1),s("p",null,[n("在使用 "),s("code",null,"deepseek-reasoner"),n(" 时，请先升级 OpenAI SDK 以支持新参数。")],-1),s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",{class:"language-python"},[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"pip3 install "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}},"U openai")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"})])],-1),s("p",null,[s("strong",null,"API 参数")],-1),s("ul",null,[s("li",null,[s("strong",null,"输入参数"),n("： "),s("ul",null,[s("li",null,[s("code",null,"max_tokens"),n("：模型单次回答的最大长度（含思维链输出），默认为 32K，最大为 64K。")])])]),s("li",null,[s("strong",null,"输出字段"),n("： "),s("ul",null,[s("li",null,[s("code",null,"reasoning_content"),n("：思维链内容，与 "),s("code",null,"content"),n(" 同级，访问方法见"),s("a",{href:"https://api-docs.deepseek.com/zh-cn/guides/reasoning_model#%E8%AE%BF%E9%97%AE%E6%A0%B7%E4%BE%8B",target:"_blank",rel:"noopener noreferrer"},"访问样例"),n("。")]),s("li",null,[s("code",null,"content"),n("：最终回答内容。")])])]),s("li",null,[s("strong",null,"支持的功能"),n("："),s("a",{href:"https://api-docs.deepseek.com/zh-cn/guides/json_mode",target:"_blank",rel:"noopener noreferrer"},"Json Output"),n("、"),s("a",{href:"https://api-docs.deepseek.com/zh-cn/api/create-chat-completion",target:"_blank",rel:"noopener noreferrer"},"对话补全"),n("，"),s("a",{href:"https://api-docs.deepseek.com/zh-cn/guides/chat_prefix_completion",target:"_blank",rel:"noopener noreferrer"},"对话前缀续写 (Beta)")]),s("li",null,[s("strong",null,"不支持的功能"),n("：Function Calling、FIM 补全 (Beta)")]),s("li",null,[s("strong",null,"不支持的参数"),n("："),s("code",null,"temperature"),n("、"),s("code",null,"top_p"),n("、"),s("code",null,"presence_penalty"),n("、"),s("code",null,"frequency_penalty"),n("、"),s("code",null,"logprobs"),n("、"),s("code",null,"top_logprobs"),n("。请注意，为了兼容已有软件，设置 "),s("code",null,"temperature"),n("、"),s("code",null,"top_p"),n("、"),s("code",null,"presence_penalty"),n("、"),s("code",null,"frequency_penalty"),n(" 参数不会报错，但也不会生效。设置 "),s("code",null,"logprobs"),n("、"),s("code",null,"top_logprobs"),n(" 会报错。")])],-1),s("p",null,[s("strong",null,"上下文拼接")],-1),s("p",null,[n("在每一轮对话过程中，模型会输出思维链内容（"),s("code",null,"reasoning_content"),n("）和最终回答（"),s("code",null,"content"),n("）。在下一轮对话中，之前轮输出的思维链内容不会被拼接到上下文中，如下图所示：")],-1),s("figure",null,[s("img",{src:"https://cdn.deepseek.com/api-docs/deepseek_r1_multiround_example_cn.png",alt:"",tabindex:"0",loading:"lazy"}),s("figcaption")],-1),s("p",null,[n("请注意，如果您在输入的 messages 序列中，传入了"),s("code",null,"reasoning_content"),n("，API 会返回 "),s("code",null,"400"),n(" 错误。因此，请删除 API 响应中的 "),s("code",null,"reasoning_content"),n(" 字段，再发起 API 请求，方法如"),s("a",{href:"https://api-docs.deepseek.com/zh-cn/guides/reasoning_model#%E8%AE%BF%E9%97%AE%E6%A0%B7%E4%BE%8B",target:"_blank",rel:"noopener noreferrer"},"访问样例"),n("所示。")],-1),s("p",null,[s("strong",null,"访问样例")],-1),s("p",null,"下面的代码以 Python 语言为例，展示了如何访问思维链和最终回答，以及如何在多轮对话中进行上下文拼接。",-1),s("ol",null,[s("li",null,[s("p",null,[n("非流式（"),s("code",null,"stream = False"),n(" ）")]),s("p",null,"样例："),s("div",{class:"language-python line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"python",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",{class:"language-python"},[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"from"),s("span",{style:{color:"#F8F8F2"}}," openai "),s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F8F8F2"}}," OpenAI")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"client "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," OpenAI("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"api_key"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},'"<DeepSeek API Key>"'),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"base_url"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},'"https://api.deepseek.com"'),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# Round 1")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"messages "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," [{"),s("span",{style:{color:"#E6DB74"}},'"role"'),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},'"user"'),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},'"content"'),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},'"9.11 and 9.8, which is greater?"'),s("span",{style:{color:"#F8F8F2"}},"}]")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"response "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," client.chat.completions.create(")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F","font-style":"italic"}},"    model"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},'"deepseek-reasoner"'),s("span",{style:{color:"#F8F8F2"}},",")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F","font-style":"italic"}},"    messages"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}},"messages")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"reasoning_content "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," response.choices["),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},"].message.reasoning_content")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"content "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," response.choices["),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},"].message.content")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# Round 2")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"messages.append({"),s("span",{style:{color:"#E6DB74"}},"'role'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},"'assistant'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'content'"),s("span",{style:{color:"#F8F8F2"}},": content})")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"messages.append({"),s("span",{style:{color:"#E6DB74"}},"'role'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},"'user'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'content'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},`"How many Rs are there in the word 'strawberry'?"`),s("span",{style:{color:"#F8F8F2"}},"})")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"response "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," client.chat.completions.create(")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F","font-style":"italic"}},"    model"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},'"deepseek-reasoner"'),s("span",{style:{color:"#F8F8F2"}},",")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F","font-style":"italic"}},"    messages"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}},"messages")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# ...")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})]),s("p",null,"探究代码这么写的原因："),s("p",null,"因为用 Jupyter Notebook 探究的，因此把非流式探究结果附在此处，方便查阅"),s("p",null,[s("a",{href:"https://pythiaroot.com/DeepSeekAPI%E5%AF%B9%E8%AF%9D%E6%8F%90%E5%8F%96%E9%80%90%E6%AD%A5%E5%88%86%E6%9E%90-%E9%9D%9E%E6%B5%81%E5%BC%8F",target:"_blank",rel:"noopener noreferrer"},"非流式 Jupyter Notebook 探究过程")])]),s("li",null,[s("p",null,[n("流式（"),s("code",null,"stream = True"),n(" ）")]),s("p",null,"样例："),s("div",{class:"language-python line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"python",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",{class:"language-python"},[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"from"),s("span",{style:{color:"#F8F8F2"}}," openai "),s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F8F8F2"}}," OpenAI")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"client "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," OpenAI("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"api_key"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},'"<DeepSeek API Key>"'),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"base_url"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},'"https://api.deepseek.com"'),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# Round 1")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"messages "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," [{"),s("span",{style:{color:"#E6DB74"}},'"role"'),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},'"user"'),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},'"content"'),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},'"9.11 and 9.8, which is greater?"'),s("span",{style:{color:"#F8F8F2"}},"}]")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"response "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," client.chat.completions.create(")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F","font-style":"italic"}},"    model"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},'"deepseek-reasoner"'),s("span",{style:{color:"#F8F8F2"}},",")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F","font-style":"italic"}},"    messages"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}},"messages,")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F","font-style":"italic"}},"    stream"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"True")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"reasoning_content "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' ""')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"content "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' ""')]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"for"),s("span",{style:{color:"#F8F8F2"}}," chunk "),s("span",{style:{color:"#F92672"}},"in"),s("span",{style:{color:"#F8F8F2"}}," response:")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F8F8F2"}}," chunk.choices["),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},"].delta.reasoning_content:")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        reasoning_content "),s("span",{style:{color:"#F92672"}},"+="),s("span",{style:{color:"#F8F8F2"}}," chunk.choices["),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},"].delta.reasoning_content")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    else"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        content "),s("span",{style:{color:"#F92672"}},"+="),s("span",{style:{color:"#F8F8F2"}}," chunk.choices["),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},"].delta.content")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# Round 2")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"messages.append({"),s("span",{style:{color:"#E6DB74"}},'"role"'),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},'"assistant"'),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},'"content"'),s("span",{style:{color:"#F8F8F2"}},": content})")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"messages.append({"),s("span",{style:{color:"#E6DB74"}},"'role'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},"'user'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'content'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},`"How many Rs are there in the word 'strawberry'?"`),s("span",{style:{color:"#F8F8F2"}},"})")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"response "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," client.chat.completions.create(")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F","font-style":"italic"}},"    model"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},'"deepseek-reasoner"'),s("span",{style:{color:"#F8F8F2"}},",")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F","font-style":"italic"}},"    messages"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}},"messages,")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F","font-style":"italic"}},"    stream"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"True")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# ...")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})]),s("p",null,"流式代码探究过程："),s("p",null,[s("a",{href:"https://pythiaroot.com/DeepSeekAPI%E5%AF%B9%E8%AF%9D%E6%8F%90%E5%8F%96%E9%80%90%E6%AD%A5%E5%88%86%E6%9E%90-%E6%B5%81%E5%BC%8F",target:"_blank",rel:"noopener noreferrer"},"流式 Jupyter Notebook 探究过程")])])],-1)])]),tab4:a(({value:e,isActive:o})=>[...l[61]||(l[61]=[s("p",null,[n("让 DeepSeek 知道我们之前的对话内容，参考学习："),s("a",{href:"https://api-docs.deepseek.com/zh-cn/guides/multi_round_chat",target:"_blank",rel:"noopener noreferrer"},"https://api-docs.deepseek.com/zh-cn/guides/multi_round_chat")],-1),s("ol",null,[s("li",null,[s("p",null,"个人探索"),s("p",null,"根据参考学习内容，跑网页上给出的代码："),s("div",{class:"language-python line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"python",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",{class:"language-python"},[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"from"),s("span",{style:{color:"#F8F8F2"}}," openai "),s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F8F8F2"}}," OpenAI")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"client "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," OpenAI("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"api_key"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},'"<DeepSeek API Key>"'),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"base_url"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},'"https://api.deepseek.com"'),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# Round 1")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"messages "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," [{"),s("span",{style:{color:"#E6DB74"}},'"role"'),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},'"user"'),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},'"content"'),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},`"What's the highest mountain in the world?"`),s("span",{style:{color:"#F8F8F2"}},"}]    "),s("span",{style:{color:"#88846F"}},"# 第一轮的 messages")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"response "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," client.chat.completions.create(")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F","font-style":"italic"}},"    model"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},'"deepseek-chat"'),s("span",{style:{color:"#F8F8F2"}},",")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F","font-style":"italic"}},"    messages"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}},"messages         "),s("span",{style:{color:"#88846F"}},"# 将上面的 messages 传入到 API中")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"messages.append(response.choices["),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},"].message)       "),s("span",{style:{color:"#88846F"}},"# 将模型第一轮的输出添加到 messages 的结尾")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"f"),s("span",{style:{color:"#E6DB74"}},'"Messages Round 1: '),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#F8F8F2"}},"messages"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}},'"'),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# Round 2")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"messages.append({"),s("span",{style:{color:"#E6DB74"}},'"role"'),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},'"user"'),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},'"content"'),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},'"What is the second?"'),s("span",{style:{color:"#F8F8F2"}},"})")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"response "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," client.chat.completions.create(")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F","font-style":"italic"}},"    model"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},'"deepseek-chat"'),s("span",{style:{color:"#F8F8F2"}},",")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F","font-style":"italic"}},"    messages"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}},"messages")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"messages.append(response.choices["),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},"].message)")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"f"),s("span",{style:{color:"#E6DB74"}},'"Messages Round 2: '),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#F8F8F2"}},"messages"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}},'"'),s("span",{style:{color:"#F8F8F2"}},")")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})]),s("p",null,"输出结果如下："),s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",{class:"language-python"},[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"Messages Round "),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},": [{"),s("span",{style:{color:"#E6DB74"}},"'role'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},"'user'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'content'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},`"What's the highest mountain in the world?"`),s("span",{style:{color:"#F8F8F2"}},"}, ChatCompletionMessage("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"content"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},"'That"),s("span",{style:{color:"#AE81FF"}},"\\'"),s("span",{style:{color:"#E6DB74"}},'s a great question! The answer has two parts, depending on how you measure "highest."'),s("span",{style:{color:"#AE81FF"}},"\\n\\n"),s("span",{style:{color:"#E6DB74"}},"### 1. Highest Altitude Above Sea Level: Mount Everest"),s("span",{style:{color:"#AE81FF"}},"\\n\\n"),s("span",{style:{color:"#E6DB74"}},"This is the most common answer. Located in the Mahalangur Himal sub-range of the Himalayas on the border between Nepal and the Tibet Autonomous Region of China, **Mount Everest** is the highest mountain in the world when measured by its summit"),s("span",{style:{color:"#AE81FF"}},"\\'"),s("span",{style:{color:"#E6DB74"}},"s height above sea level."),s("span",{style:{color:"#AE81FF"}},"\\n\\n"),s("span",{style:{color:"#E6DB74"}},"*   **Height:** **8,848.86 meters (29,031.7 feet)** (This is the latest official measurement agreed upon by China and Nepal in 2020)."),s("span",{style:{color:"#AE81FF"}},"\\n"),s("span",{style:{color:"#E6DB74"}},"*   **First Ascent:** Sir Edmund Hillary (New Zealand) and Tenzing Norgay (Nepal) on May 29, 1953."),s("span",{style:{color:"#AE81FF"}},"\\n\\n"),s("span",{style:{color:"#E6DB74"}},"---"),s("span",{style:{color:"#AE81FF"}},"\\n\\n"),s("span",{style:{color:"#E6DB74"}},"### 2. Tallest Mountain from Base to Summit: Mauna Kea"),s("span",{style:{color:"#AE81FF"}},"\\n\\n"),s("span",{style:{color:"#E6DB74"}},"If you measure from the mountain"),s("span",{style:{color:"#AE81FF"}},"\\'"),s("span",{style:{color:"#E6DB74"}},"s base to its peak, the title goes to **Mauna Kea** on the Big Island of Hawaii."),s("span",{style:{color:"#AE81FF"}},"\\n\\n"),s("span",{style:{color:"#E6DB74"}},"*   **Height above sea level:** 4,207 meters (13,802 feet) – which is less than half the height of Everest."),s("span",{style:{color:"#AE81FF"}},"\\n"),s("span",{style:{color:"#E6DB74"}},"*   **Height from base to summit:** However, Mauna Kea is a volcano that rises from the bottom of the Pacific Ocean. When measured from its true base on the ocean floor, it is over **10,210 meters (33,500 feet)** tall, making it significantly taller than Mount Everest."),s("span",{style:{color:"#AE81FF"}},"\\n\\n"),s("span",{style:{color:"#E6DB74"}},"### Summary"),s("span",{style:{color:"#AE81FF"}},"\\n\\n"),s("span",{style:{color:"#E6DB74"}},"*   **Highest Altitude:** **Mount Everest** (8,849 m / 29,032 ft)"),s("span",{style:{color:"#AE81FF"}},"\\n"),s("span",{style:{color:"#E6DB74"}},"*   **Tallest from Base:** **Mauna Kea** (>10,200 m / 33,500 ft)"),s("span",{style:{color:"#AE81FF"}},"\\n\\n"),s("span",{style:{color:"#E6DB74"}},"So, while Everest has the highest peak on the planet, Mauna Kea is the world"),s("span",{style:{color:"#AE81FF"}},"\\'"),s("span",{style:{color:"#E6DB74"}},"s most massive mountain.'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"refusal"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"None"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"role"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},"'assistant'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"annotations"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"None"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"audio"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"None"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"function_call"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"None"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"tool_calls"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"None"),s("span",{style:{color:"#F8F8F2"}},")]")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"Messages Round "),s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F8F8F2"}},": [{"),s("span",{style:{color:"#E6DB74"}},"'role'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},"'user'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'content'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},`"What's the highest mountain in the world?"`),s("span",{style:{color:"#F8F8F2"}},"}, ChatCompletionMessage("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"content"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},"'That"),s("span",{style:{color:"#AE81FF"}},"\\'"),s("span",{style:{color:"#E6DB74"}},'s a great question! The answer has two parts, depending on how you measure "highest."'),s("span",{style:{color:"#AE81FF"}},"\\n\\n"),s("span",{style:{color:"#E6DB74"}},"### 1. Highest Altitude Above Sea Level: Mount Everest"),s("span",{style:{color:"#AE81FF"}},"\\n\\n"),s("span",{style:{color:"#E6DB74"}},"This is the most common answer. Located in the Mahalangur Himal sub-range of the Himalayas on the border between Nepal and the Tibet Autonomous Region of China, **Mount Everest** is the highest mountain in the world when measured by its summit"),s("span",{style:{color:"#AE81FF"}},"\\'"),s("span",{style:{color:"#E6DB74"}},"s height above sea level."),s("span",{style:{color:"#AE81FF"}},"\\n\\n"),s("span",{style:{color:"#E6DB74"}},"*   **Height:** **8,848.86 meters (29,031.7 feet)** (This is the latest official measurement agreed upon by China and Nepal in 2020)."),s("span",{style:{color:"#AE81FF"}},"\\n"),s("span",{style:{color:"#E6DB74"}},"*   **First Ascent:** Sir Edmund Hillary (New Zealand) and Tenzing Norgay (Nepal) on May 29, 1953."),s("span",{style:{color:"#AE81FF"}},"\\n\\n"),s("span",{style:{color:"#E6DB74"}},"---"),s("span",{style:{color:"#AE81FF"}},"\\n\\n"),s("span",{style:{color:"#E6DB74"}},"### 2. Tallest Mountain from Base to Summit: Mauna Kea"),s("span",{style:{color:"#AE81FF"}},"\\n\\n"),s("span",{style:{color:"#E6DB74"}},"If you measure from the mountain"),s("span",{style:{color:"#AE81FF"}},"\\'"),s("span",{style:{color:"#E6DB74"}},"s base to its peak, the title goes to **Mauna Kea** on the Big Island of Hawaii."),s("span",{style:{color:"#AE81FF"}},"\\n\\n"),s("span",{style:{color:"#E6DB74"}},"*   **Height above sea level:** 4,207 meters (13,802 feet) – which is less than half the height of Everest."),s("span",{style:{color:"#AE81FF"}},"\\n"),s("span",{style:{color:"#E6DB74"}},"*   **Height from base to summit:** However, Mauna Kea is a volcano that rises from the bottom of the Pacific Ocean. When measured from its true base on the ocean floor, it is over **10,210 meters (33,500 feet)** tall, making it significantly taller than Mount Everest."),s("span",{style:{color:"#AE81FF"}},"\\n\\n"),s("span",{style:{color:"#E6DB74"}},"### Summary"),s("span",{style:{color:"#AE81FF"}},"\\n\\n"),s("span",{style:{color:"#E6DB74"}},"*   **Highest Altitude:** **Mount Everest** (8,849 m / 29,032 ft)"),s("span",{style:{color:"#AE81FF"}},"\\n"),s("span",{style:{color:"#E6DB74"}},"*   **Tallest from Base:** **Mauna Kea** (>10,200 m / 33,500 ft)"),s("span",{style:{color:"#AE81FF"}},"\\n\\n"),s("span",{style:{color:"#E6DB74"}},"So, while Everest has the highest peak on the planet, Mauna Kea is the world"),s("span",{style:{color:"#AE81FF"}},"\\'"),s("span",{style:{color:"#E6DB74"}},"s most massive mountain.'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"refusal"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"None"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"role"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},"'assistant'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"annotations"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"None"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"audio"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"None"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"function_call"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"None"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"tool_calls"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"None"),s("span",{style:{color:"#F8F8F2"}},"), {"),s("span",{style:{color:"#E6DB74"}},"'role'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},"'user'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'content'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},"'What is the second?'"),s("span",{style:{color:"#F8F8F2"}},"}, ChatCompletionMessage("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"content"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},`'Of course! Just like the "highest," the "second-highest" also has two answers depending on the measurement.`),s("span",{style:{color:"#AE81FF"}},"\\n\\n"),s("span",{style:{color:"#E6DB74"}},"### 1. Second-Highest Altitude Above Sea Level: K2"),s("span",{style:{color:"#AE81FF"}},"\\n\\n"),s("span",{style:{color:"#E6DB74"}},"The undisputed second-highest mountain in the world by elevation is **K2**."),s("span",{style:{color:"#AE81FF"}},"\\n\\n"),s("span",{style:{color:"#E6DB74"}},"*   **Height:** **8,611 meters (28,251 feet)**"),s("span",{style:{color:"#AE81FF"}},"\\n"),s("span",{style:{color:"#E6DB74"}},"*   **Location:** The Karakoram Range, on the border between Pakistan and China."),s("span",{style:{color:"#AE81FF"}},"\\n"),s("span",{style:{color:"#E6DB74"}},'*   **Nickname:** "The Savage Mountain"'),s("span",{style:{color:"#AE81FF"}},"\\n"),s("span",{style:{color:"#E6DB74"}},"*   **Why it"),s("span",{style:{color:"#AE81FF"}},"\\'"),s("span",{style:{color:"#E6DB74"}},"s famous:** K2 is widely considered the world"),s("span",{style:{color:"#AE81FF"}},"\\'"),s("span",{style:{color:"#E6DB74"}},"s most difficult and dangerous mountain to climb, even more so than Everest. It has a far higher fatality rate for those who attempt it. Its extreme weather, technical climbing challenges, and constant threat of avalanches make it the ultimate goal for many elite mountaineers."),s("span",{style:{color:"#AE81FF"}},"\\n\\n"),s("span",{style:{color:"#E6DB74"}},"---"),s("span",{style:{color:"#AE81FF"}},"\\n\\n"),s("span",{style:{color:"#E6DB74"}},"### 2. Second-Tallest Mountain from Base to Summit: Mauna Loa"),s("span",{style:{color:"#AE81FF"}},"\\n\\n"),s("span",{style:{color:"#E6DB74"}},"Following Mauna Kea in this category is its neighbor on the Big Island of Hawaii, **Mauna Loa**."),s("span",{style:{color:"#AE81FF"}},"\\n\\n"),s("span",{style:{color:"#E6DB74"}},"*   **Height above sea level:** 4,169 meters (13,678 feet)"),s("span",{style:{color:"#AE81FF"}},"\\n"),s("span",{style:{color:"#E6DB74"}},"*   **Height from base to summit:** Like Mauna Kea, Mauna Loa is a massive volcano that rises from the ocean floor. From its base to its summit, it is approximately **9,170 meters (30,085 feet)** tall."),s("span",{style:{color:"#AE81FF"}},"\\n"),s("span",{style:{color:"#E6DB74"}},"*   **Why it"),s("span",{style:{color:"#AE81FF"}},"\\'"),s("span",{style:{color:"#E6DB74"}},"s famous:** Mauna Loa is the world"),s("span",{style:{color:"#AE81FF"}},"\\'"),s("span",{style:{color:"#E6DB74"}},"s largest *active* volcano by volume and one of the five volcanoes that form the Island of Hawaii."),s("span",{style:{color:"#AE81FF"}},"\\n\\n"),s("span",{style:{color:"#E6DB74"}},"### Summary"),s("span",{style:{color:"#AE81FF"}},"\\n\\n"),s("span",{style:{color:"#E6DB74"}},"*   **Second-Highest Altitude:** **K2** (8,611 m / 28,251 ft)"),s("span",{style:{color:"#AE81FF"}},"\\n"),s("span",{style:{color:"#E6DB74"}},"*   **Second-Tallest from Base:** **Mauna Loa** (~9,170 m / ~30,085 ft)'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"refusal"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"None"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"role"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},"'assistant'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"annotations"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"None"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"audio"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"None"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"function_call"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"None"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"tool_calls"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"None"),s("span",{style:{color:"#F8F8F2"}},")]")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"})])]),s("p",null,"问题：这 messages 结果太长了，而且不能换行，不方便看。"),s("p",null,[n("在"),s("strong",null,"第二轮"),n("请求时：")]),s("ol",null,[s("li",null,[n("要将第一轮中模型的输出添加到 "),s("code",null,"messages"),n(" 末尾；")]),s("li",null,[n("将新的提问添加到 "),s("code",null,"messages"),n(" 末尾。")])]),s("p",null,[n("最终传递给 API 的 "),s("code",null,"messages"),n(" 为：")]),s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",{class:"language-python"},[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"[")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    {"),s("span",{style:{color:"#E6DB74"}},'"role"'),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},'"user"'),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},'"content"'),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},`"What's the highest mountain in the world?"`),s("span",{style:{color:"#F8F8F2"}},"},")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    {"),s("span",{style:{color:"#E6DB74"}},'"role"'),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},'"assistant"'),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},'"content"'),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},'"The highest mountain in the world is Mount Everest."'),s("span",{style:{color:"#F8F8F2"}},"},")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    {"),s("span",{style:{color:"#E6DB74"}},'"role"'),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},'"user"'),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},'"content"'),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},'"What is the second?"'),s("span",{style:{color:"#F8F8F2"}},"}")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"]")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])]),s("p",null,"从而进行上下文拼接，以实现多轮对话。")]),s("li",null,[s("p",null,"指导探索"),s("ul",null,[s("li",null,[s("p",null,"根据探究的推理模型，实现多轮对话。"),s("p",null,"要做到：程序运行后，可以一直问问题，模型给回答，除非用户选择退出，否则对话继续；有聊天记忆。"),s("p",null,[s("a",{href:"https://pythiaroot.com/%E5%AE%9E%E7%8E%B0%E5%A4%9A%E8%BD%AE%E5%AF%B9%E8%AF%9D",target:"_blank",rel:"noopener noreferrer"},"利用循环实现多轮对话")])]),s("li",null,[s("p",null,"根据推理模型，实现特定限制"),s("p",null,"要做到：在每个回答后都显示微信和网站；当被问到是什么大模型时，回答是MR大模型而不是 deepseek 的模型。"),s("p",null,[s("a",{href:"https://pythiaroot.com/%E5%AE%9E%E7%8E%B0%E7%89%B9%E5%AE%9A%E9%99%90%E5%88%B6",target:"_blank",rel:"noopener noreferrer"},"利用 system 实现特定限制")])])])])],-1)])]),_:1}),l[76]||(l[76]=c('<h5 id="_2-正式对接游戏" tabindex="-1"><a class="header-anchor" href="#_2-正式对接游戏"><span>2. 正式对接游戏</span></a></h5><p>正式对接游戏前，我们需要做一个流程拆分与逐步实现。（架构设计 | 指定嵌入方案）</p><p><strong>个人思路：</strong></p><p>按照 API 对话模型分为两个部分，第一部分是角色设定（ system ），第二部分是流程实现（对话）。</p><p>具体思考流程按照游戏流程一步步的增加设定和步骤。</p><p><strong>老师思路：</strong></p><ul><li><strong>步骤一：</strong> 大模型只要回复：攻击或防守，不需要多余的废话！（角色限制：使用 system 进行设定提示词）</li><li><strong>步骤二：</strong> 要设计大模型可以接收并理解清除，游戏对战过程中的显示。并利用大模型的算力，让大模型自己思考🤔自己要出的招式；</li><li><strong>步骤三：</strong> 大模型应该被封装成一个函数，便于我们调用。思考一下：大模型函数返回值应该是什么类型以及结果？—— 字符串类型、值 A or D；</li><li><strong>自己提出的额外思路：</strong><ul><li>让大模型额外支持当用户提问游戏规则时，简要解说游戏规则！ <ul><li>方法一：自己把游戏规则写出来，喂给大模型；</li><li>方法二：不要牛马🐮🐴当多了，老想着自己亲力亲为，没必要。把程序甩给大模型，让大模型制作一份精美的游戏🎮介绍；</li></ul></li><li>让大模型介入，使大模型来驱动游戏是否开始； <ul><li>当这么思考之后，游戏和原本的设计初衷不同： <ul><li>原始目的：玩家和AI对战，AI 的角色是敌人；</li><li>大模型驱动游戏目的：AI 了解整个游戏的逻辑，然后扮演其中的敌人角色进行交互，虽然从用户角度或许可以成功实现游戏的交互过程，但是核心不是与 AI 对战，也不符合 API 推理模型中 <code>role: user</code> 和 <code>role: assistant</code> 这种交互的角色设定，应该是将对战中的敌人角色等价于 <code>role: assistant</code>。</li></ul></li></ul></li></ul></li></ul><hr><p><strong>初衷版本：</strong></p><hr><p><strong>步骤一：准备数据</strong></p>',11)),p(F,{data:[{id:"1. 游戏规则数据"},{id:"2. 游戏实际对话记录（游戏运行结果）"},{id:"3. 提供给 AI 的游戏规则及玩法"}]},{title0:a(({value:e,isActive:o})=>[...l[62]||(l[62]=[n("1. 游戏规则数据",-1)])]),title1:a(({value:e,isActive:o})=>[...l[63]||(l[63]=[n("2. 游戏实际对话记录（游戏运行结果）",-1)])]),title2:a(({value:e,isActive:o})=>[...l[64]||(l[64]=[n("3. 提供给 AI 的游戏规则及玩法",-1)])]),tab0:a(({value:e,isActive:o})=>[...l[65]||(l[65]=[s("p",null,"两种方法：一种是直接去 DeepSeek 官网直接上传代码并直接对话，另一种是使用 API 。为了更好的联系技术，要求使用 API 问答得到游戏规则数据。",-1),s("p",null,"个人实现：",-1),s("div",{class:"language-python line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"python",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",{class:"language-python"},[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"from"),s("span",{style:{color:"#F8F8F2"}}," openai "),s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F8F8F2"}}," OpenAI")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"client "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," OpenAI("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"api_key"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},'"sk-5e002cf488964cae9a5a88915228453f"'),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"base_url"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},'"https://api.deepseek.com"'),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"code_string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}}," '''")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"import random")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"from faker import Faker")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"# —— 简单无色进度条（纯 ASCII，跨平台）——")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"def hp_bar(cur: int, maxv: int, width: int = 20) -> str:")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},'    """返回形如：[##########----------] 50'),s("span",{style:{color:"#AE81FF"}},"%  5g"),s("span",{style:{color:"#E6DB74"}},'0/100 的进度条文本"""')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"    if maxv <= 0:")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"        maxv = 1")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"    cur = max(0, min(cur, maxv))")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"    ratio = cur / maxv")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"    filled = int(ratio * width + 0.5)  # 四舍五入")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},'    bar = "#" * filled + "-" * (width - filled)')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},'    return f"['),s("span",{style:{color:"#AE81FF"}},"{bar}"),s("span",{style:{color:"#E6DB74"}},'] {int(ratio * 100):3d}%  {cur}/{maxv}"')]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"class Creature:")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"    def __init__(self, hp, name):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"        self.hp = int(hp)")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"        self.max_hp = int(hp)  # 记录初始满血")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"        self.name = name")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"    def attack(self):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"        return random.randint(0, 50)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"    def not_dead(self):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"        return self.hp > 0")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"    def being_attack(self, dmg: float):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},'        """受到伤害（向下取整以避免浮点 HP），并保证 HP 不会掉到负数以下"""')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"        self.hp = max(0, int(self.hp - dmg))")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"    def heal_full(self):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},'        """直接回到初始满血"""')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"        self.hp = self.max_hp")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"    def show_status(self):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},'        print(f"'),s("span",{style:{color:"#AE81FF"}},"{self.name}"),s("span",{style:{color:"#E6DB74"}},`'s HP → {hp_bar(self.hp, self.max_hp)}")`)]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"fk = Faker(locale='zh_CN')")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},'player = Creature(100, "MR")')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"enemy = Creature(80, fk.name())")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"heal_used = False  # 治疗仅限一次")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"heal_penalty_active = False  # 是否已触发“敌人攻击翻倍”的惩罚")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"while player.not_dead() and enemy.not_dead():")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"    player.show_status()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"    enemy.show_status()")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"    # 是否出现治疗提示：仅当当前 HP < 初始 HP 的 50% 且尚未使用")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"    can_heal_now = (not heal_used) and (player.hp < player.max_hp * 0.5)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"    if can_heal_now:")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"        prompt = 'Attack or Defence or Heal (A/D/H)：'")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},'        valid_inputs = {"A", "D", "H"}')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"        print('（提示：你现在可以按 H 回满血，仅此一次）')")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"    else:")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"        prompt = 'Attack or Defence (A/D)：'")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},'        valid_inputs = {"A", "D"}')]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"    if heal_penalty_active:")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"        print('【警告】治疗代价生效中：敌人对你的伤害 ×2！')")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"    user_input = input(prompt).strip().upper()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"    while user_input not in valid_inputs:")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},'        user_input = input("输入无效，请重新输入：" + prompt).strip().upper()')]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"    # 敌人选择（对 A/D 有影响；若玩家选择 H，我们让敌人本回合直接攻击）")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"    enemy_status = ['Attack', 'Defence']")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"    enemy_choice = random.choices(enemy_status, weights=[0.7, 0.3], k=1)[0]  # 敌人更倾向于攻击")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"    # 当前敌人伤害倍率（是否翻倍）")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"    def enemy_mul():")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"        return 2.0 if heal_penalty_active else 1.0")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},'    if user_input == "H":')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"        # 只有在 can_heal_now 为 True 时才会进入到这里")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},'        print("你使用了治疗技能！血量已回满。")')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"        player.heal_full()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"        heal_used = True")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"        # 触发治疗代价：从现在起敌人攻击翻倍（包含本回合的随后的敌人攻击）")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"        heal_penalty_active = True")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"        # 敌人回合：直接攻击（先治再挨打）")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"        raw_enemy_attack_value = enemy.attack()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"        damage = raw_enemy_attack_value * enemy_mul()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},'        print(f"{enemy.name} 攻击了你，造成 {int(damage)} 点伤害！（原始{int(raw_enemy_attack_value)} × 倍率{enemy_mul():.0f}）")')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"        player.being_attack(damage)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},'    elif user_input == "A":')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"        player_attack_coefficient = 1")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},'        if enemy_choice == "Defence":')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},'            print(f"{enemy.name} chose to defend!")')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"            player_attack_coefficient = 0.5")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"        else:")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},'            print(f"{enemy.name} chose to attack!")')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"            raw_enemy_attack_value = enemy.attack()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"            damage = raw_enemy_attack_value * enemy_mul()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},'            print(f"{enemy.name} 对你造成 {int(damage)} 点伤害！（原始{int(raw_enemy_attack_value)} × 倍率{enemy_mul():.0f}）")')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"            player.being_attack(damage)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"        player_attack_value = player.attack()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"        enemy.being_attack(player_attack_value * player_attack_coefficient)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},'    elif user_input == "D":')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"        # 防御：敌人攻击减伤为 90%，然后再应用翻倍倍率")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"        raw_enemy_attack_value = enemy.attack()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"        damage = raw_enemy_attack_value * 0.1 * enemy_mul()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},'        print(f"{enemy.name} 攻击了你（被你防住大部分），造成 {int(damage)} 点伤害！"')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},'              f"（原始{int(raw_enemy_attack_value)} × 减伤0.1 × 倍率{enemy_mul():.0f}）")')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"        player.being_attack(damage)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"if player.not_dead():")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},'    print("You Win!")')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"else:")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},'    print("You Lose!")')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"'''")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"messages "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," [{"),s("span",{style:{color:"#E6DB74"}},'"role"'),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},'"user"'),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},'"content"'),s("span",{style:{color:"#F8F8F2"}},": code_string "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#E6DB74"}},' "根据上述代码生成一个能提供给 API 的游戏规则描述"'),s("span",{style:{color:"#F8F8F2"}},"}]")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"response "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," client.chat.completions.create(")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F","font-style":"italic"}},"    model"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},'"deepseek-reasoner"'),s("span",{style:{color:"#F8F8F2"}},",")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F","font-style":"italic"}},"    messages"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}},"messages")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(response.choices["),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},"].message.content)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# -------output-------")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"基于上述代码，以下是游戏规则的详细描述，适合用于API文档：")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"## 游戏概述")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"这是一个简单的回合制战斗游戏，玩家与AI敌人进行战斗。")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"## 游戏角色")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"### 玩家 (Player)")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F92672"}}," **"),s("span",{style:{color:"#F8F8F2"}},"初始生命值"),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#AE81FF"}},"100"),s("span",{style:{color:"#AE81FF"}}," HP")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F92672"}}," **"),s("span",{style:{color:"#F8F8F2"}},"名称"),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},'"MR"')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F92672"}}," **"),s("span",{style:{color:"#F8F8F2"}},"攻击力"),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F8F8F2"}},": 随机0"),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F44747"}},"50伤害")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"### 敌人 (Enemy)  ")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F92672"}}," **"),s("span",{style:{color:"#F8F8F2"}},"初始生命值"),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#AE81FF"}},"80"),s("span",{style:{color:"#AE81FF"}}," HP")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F92672"}}," **"),s("span",{style:{color:"#F8F8F2"}},"名称"),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F8F8F2"}},": 随机生成的中文名字")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F92672"}}," **"),s("span",{style:{color:"#F8F8F2"}},"攻击力"),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F8F8F2"}},": 随机0"),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F44747"}},"50伤害")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"## 游戏机制")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"### 回合流程")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"每回合按以下顺序执行：")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},". 显示双方当前生命状态（ASCII进度条）")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F8F8F2"}},". 玩家选择行动")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"3"),s("span",{style:{color:"#F8F8F2"}},". 敌人随机选择行动")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"4"),s("span",{style:{color:"#F8F8F2"}},". 计算伤害并更新状态")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"### 玩家行动选项")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#### 攻击 (Attack - A)")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}}," 对敌人造成随机伤害（"),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#AE81FF"}},"50"),s("span",{style:{color:"#F8F8F2"}},"）")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}}," 如果敌人选择防御，伤害减半（×"),s("span",{style:{color:"#AE81FF"}},"0.5"),s("span",{style:{color:"#F8F8F2"}},"）")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}}," 如果敌人选择攻击，双方同时造成伤害")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#### 防御 (Defence - D)  ")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}}," 减少受到的伤害至10"),s("span",{style:{color:"#F92672"}},"%")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}}," 计算公式：敌人攻击力 × "),s("span",{style:{color:"#AE81FF"}},"0.1")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#### 治疗 (Heal - H) - 限制条件")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F92672"}}," **"),s("span",{style:{color:"#F8F8F2"}},"触发条件"),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F8F8F2"}},": 生命值低于50"),s("span",{style:{color:"#F92672"}},"%"),s("span",{style:{color:"#F8F8F2"}},"且未使用过治疗")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F92672"}}," **"),s("span",{style:{color:"#F8F8F2"}},"效果"),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F8F8F2"}},": 立即回满生命值")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F92672"}}," **"),s("span",{style:{color:"#F8F8F2"}},"代价"),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F8F8F2"}},": 触发永久惩罚 "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}}," 敌人攻击力翻倍（×"),s("span",{style:{color:"#AE81FF"}},"2.0"),s("span",{style:{color:"#F8F8F2"}},"）")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"### 敌人AI行为")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F92672"}}," **"),s("span",{style:{color:"#F8F8F2"}},"攻击概率"),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#AE81FF"}},"70"),s("span",{style:{color:"#F92672"}},"%")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F92672"}}," **"),s("span",{style:{color:"#F8F8F2"}},"防御概率"),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#AE81FF"}},"30"),s("span",{style:{color:"#F92672"}},"%")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}}," 当玩家使用治疗后，敌人攻击必定造成双倍伤害")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"## 战斗规则")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"### 伤害计算")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F44747"}},"```python")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# 基础攻击伤害")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"基础伤害 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," random.randint("),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"50"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# 防御减伤")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"防御后伤害 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," 基础伤害 × "),s("span",{style:{color:"#AE81FF"}},"0.1")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# 治疗惩罚")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"惩罚后伤害 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," 基础伤害 × "),s("span",{style:{color:"#AE81FF"}},"2.0")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F44747"}},"```")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"### 生命值管理")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}}," 生命值使用整数计算")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}}," 不会低于0")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}}," 显示为ASCII进度条格式："),s("span",{style:{color:"#F44747"}},"`["),s("span",{style:{color:"#88846F"}},"##########----------] 50% 50/100`")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"## 胜负条件")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F92672"}}," **"),s("span",{style:{color:"#F44747"}},"胜利"),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F44747"}},": 敌人生命值降至0")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F92672"}}," **"),s("span",{style:{color:"#F44747"}},"失败"),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F44747"}},": 玩家生命值降至0")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"## 特殊机制")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F44747"}}," 治疗技能只能使用一次")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F44747"}}," 治疗惩罚永久生效")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F44747"}}," 敌人行为模式固定（"),s("span",{style:{color:"#AE81FF"}},"70"),s("span",{style:{color:"#F92672"}},"%"),s("span",{style:{color:"#F44747"}},"攻击，"),s("span",{style:{color:"#AE81FF"}},"30"),s("span",{style:{color:"#F92672"}},"%"),s("span",{style:{color:"#F44747"}},"防御）")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F44747"}},"这个规则描述涵盖了游戏的所有核心机制，适合用于API接口文档或游戏说明。")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1),s("p",null,"发现个人实现获得的结果不够理想，因此需要更改描述。",-1),s("p",null,"老师实现中的描述：“为下面的代码编写一个游戏说明，也就是游戏场景中的规则介绍、操作介绍等。应用在命令行对话游戏中，要贴合、适合终端显示的 Python 字符串”。结果如下：",-1),s("div",{class:"language-python line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"python",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",{class:"language-python"},[s("span",{class:"line"},[s("span",{style:{color:"#F44747"}},"```python")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"game_instructions "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' """')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"==================== 勇者斗恶龙 ====================")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"游戏规则说明：")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"【角色属性】")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"- 玩家：初始生命值 100")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"- 敌人：随机生成的角色，初始生命值 80")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"【战斗机制】")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"每回合你可以选择以下行动：")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"1. 攻击 (A) - 对敌人造成伤害")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"   - 如果敌人选择防御，你的伤害减半")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"   - 如果敌人选择攻击，双方同时造成伤害")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"2. 防御 (D) - 大幅减少受到的伤害")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"   - 将敌人攻击伤害降低至 10%")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"3. 治疗 (H) - 特殊技能（仅限一次！）")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"   - 条件：生命值低于 50% 时可用")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"   - 效果：立即恢复全部生命值")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},'   - 代价：触发"治疗惩罚"，敌人后续攻击伤害翻倍！')]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"【战斗流程】")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"1. 显示双方当前生命值状态条")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"2. 选择你的行动 (A/D/H)")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"3. 敌人随机选择攻击(70%)或防御(30%)")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"4. 计算本回合伤害")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"5. 重复直到一方生命值归零")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"【生命值显示】")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"[##########----------] 50%  50/100")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}}," 已损失生命   百分比   当前/最大")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"【胜利条件】")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"击败敌人！")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"==================================================")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"输入 A(攻击) / D(防御) / H(治疗) 开始你的冒险！")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},'"""')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F44747"}},"```")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"这个游戏说明包含了：")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},". "),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F8F8F2"}},"清晰的标题和分隔线"),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F92672"}}," -"),s("span",{style:{color:"#F8F8F2"}}," 在终端中易于阅读")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F8F8F2"}},". "),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F8F8F2"}},"完整的规则说明"),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F92672"}}," -"),s("span",{style:{color:"#F8F8F2"}}," 涵盖所有游戏机制")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"3"),s("span",{style:{color:"#F8F8F2"}},". "),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F8F8F2"}},"格式化的文本布局"),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F92672"}}," -"),s("span",{style:{color:"#F8F8F2"}}," 适合命令行显示")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"4"),s("span",{style:{color:"#F8F8F2"}},". "),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F8F8F2"}},"具体的操作指引"),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F92672"}}," -"),s("span",{style:{color:"#F8F8F2"}}," 告诉玩家每个选项的作用")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"5"),s("span",{style:{color:"#F8F8F2"}},". "),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F8F8F2"}},"特殊机制强调"),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F92672"}}," -"),s("span",{style:{color:"#F8F8F2"}}," 治疗技能的代价用感叹号突出")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"6"),s("span",{style:{color:"#F8F8F2"}},". "),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F8F8F2"}},"状态条解释"),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F92672"}}," -"),s("span",{style:{color:"#F8F8F2"}}," 帮助玩家理解界面显示")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"使用时可以直接在游戏开始时打印：")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F44747"}},"```python")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(game_instructions)")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F44747"}},"```")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1),s("p",null,"从上面个人实现和老师实现的对比中发现，提示词是要一步步从 AI 回答的结果中反复微调，想清楚自己要什么，并清晰的表达出来，如下代码进行了更多的调整：",-1),s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",{class:"language-python"},[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"messages "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," []")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"s1 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "为下面的代码编写一个游戏说明，也就是游戏场景中的规则介绍、操作介绍等。应用在命令行对话游戏中，要贴合、适合终端显示的 Python 字符串"')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"s2 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "设计时，可以适当的左右并排显示，防止规则过长"')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"code_string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," s1 "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," s2 "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," code_string")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"messages.append({"),s("span",{style:{color:"#E6DB74"}},"'role'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},"'user'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'content'"),s("span",{style:{color:"#F8F8F2"}},": code_string})")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"response "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," client.chat.completions.create(")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F","font-style":"italic"}},"    model"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},'"deepseek-chat"'),s("span",{style:{color:"#F8F8F2"}},",")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F","font-style":"italic"}},"    messages"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}},"messages")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    )")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"assistant_content "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," response.choices["),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},"].message.content")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(assistant_content)")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),s("p",null,"祛魅：市面上很多所谓的提示词教学，都是智商税，语文学不明白就会变成韭菜！",-1),s("p",null,"调整后的输出：",-1),s("div",{class:"language-python line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"python",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",{class:"language-python"},[s("span",{class:"line"},[s("span",{style:{color:"#F44747"}},"```python")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# 游戏说明字符串设计（适合终端显示）")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"game_intro "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' """')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"╔══════════════════════════════════════════════════════════════════════════════╗")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"║                            🎮 命令行战斗游戏说明                            ║")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"╠══════════════════════════════════════════════════════════════════════════════╣")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"║                                                                              ║")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"║  📜 游戏规则                    │  🎯 操作指南                             ║")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"║  ───────────────────────────────┼──────────────────────────────────────────  ║")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"║  • 你 vs 随机生成的敌人         │  A / a  - 攻击 (Attack)                   ║")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"║  • 双方血量通过进度条显示       │  D / d  - 防御 (Defence)                  ║")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"║  • 先击败对方者获胜             │  H / h  - 治疗 (Heal，限一次)             ║")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"║  • 治疗有代价：敌人伤害×2       │                                          ║")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"║                                │  💡 战斗策略：                            ║")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"║  ⚔️ 战斗机制：                  │  • 敌人倾向攻击(70%)而非防御(30%)         ║")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"║  • 攻击 vs 攻击：互相造成伤害   │  • 血量低于50%时可考虑治疗                 ║")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"║  • 攻击 vs 防御：攻击伤害减半   │  • 防御可减少90%的伤害                    ║")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"║  • 防御 vs 攻击：承受10%伤害    │  • 治疗虽好，但要承担后续风险             ║")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"║                                │                                          ║")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"║  🩺 治疗规则：                  │  📊 状态显示：                           ║")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"║  • 仅可使用一次                 │  [##########----------] 50%  50/100      ║")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"║  • 血量<50%时可用               │  # = 当前血量 | - = 已损失血量            ║")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"║  • 使用后立即回满血             │  数字显示百分比和具体数值                 ║")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"║  • 触发惩罚：敌人伤害永久翻倍   │                                          ║")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"║                                                                              ║")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"╚══════════════════════════════════════════════════════════════════════════════╝")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},'"""')]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# 在游戏开始前显示说明")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(game_intro)")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"input"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"按 Enter 键开始游戏..."'),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F44747"}},"```")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"这个游戏说明设计特点：")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},". "),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F8F8F2"}},"分栏布局"),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F8F8F2"}},"：左右并排显示规则和操作，充分利用终端宽度")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F8F8F2"}},". "),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F8F8F2"}},"视觉分隔"),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F8F8F2"}},"：使用边框和分隔线增强可读性")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"3"),s("span",{style:{color:"#F8F8F2"}},". "),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F8F8F2"}},"图标辅助"),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F8F8F2"}},"：使用emoji和符号让内容更直观")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"4"),s("span",{style:{color:"#F8F8F2"}},". "),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F8F8F2"}},"重点突出"),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F8F8F2"}},"：关键规则（治疗代价、操作方式）明显标注")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"5"),s("span",{style:{color:"#F8F8F2"}},". "),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F8F8F2"}},"进度条解释"),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F8F8F2"}},"：专门解释了游戏中使用的HP进度条显示方式")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"6"),s("span",{style:{color:"#F8F8F2"}},". "),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F8F8F2"}},"策略提示"),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F8F8F2"}},"：包含实用的战斗策略建议")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"如果需要更简洁的版本，也可以提供：")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F44747"}},"```python")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"short_intro "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' """')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"┌──────────────────┬──────────────────┐")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"│     🎮 规则      │     🎯 操作      │")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"├──────────────────┼──────────────────┤")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"│ • 你 vs 随机敌人 │ A - 攻击         │")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"│ • 先击败者获胜   │ D - 防御         │")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"│ • HP<50%可治疗   │ H - 治疗(限一次) │")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"│ • 治疗代价：     │                  │")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"│   敌人伤害×2     │ 💡 敌人倾向攻击  │")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"└──────────────────┴──────────────────┘")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},'"""')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F44747"}},"```")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1),s("p",null,"还可以进一步调整对齐：",-1),s("div",{class:"language-python line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"python",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",{class:"language-python"},[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' """')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"# =================================================================")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"#                     战斗游戏说明")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"# =================================================================")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"# 规则说明           │ 操作说明           │ 特殊机制")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"# ------------------│-------------------│--------------------------")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"# • 回合制战斗      │ A - 攻击          │ 治疗限制：")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"# • HP归零即失败    │ D - 防御          │  • HP<50%时可治疗")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"# • 敌人AI随机行动  │ H - 治疗(限1次)   │  • 治疗后敌人伤害×2")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"# • 攻防存在克制    │ 输入不区分大小写   │  ")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"# =================================================================")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"# 血量显示：[##########----------] 50%  50/100")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"# =================================================================")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},'"""')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"messages "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," []")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"s1 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "把下面的字符串中的‘竖杠‘进行对齐！’"')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"code_string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," s1 "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," string")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"messages.append({"),s("span",{style:{color:"#E6DB74"}},"'role'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},"'user'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'content'"),s("span",{style:{color:"#F8F8F2"}},": code_string})")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"response "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," client.chat.completions.create(")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F","font-style":"italic"}},"    model"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},'"deepseek-chat"'),s("span",{style:{color:"#F8F8F2"}},",")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F","font-style":"italic"}},"    messages"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}},"messages")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    )")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"assistant_content "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," response.choices["),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},"].message.content")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(assistant_content)")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1),s("p",null,"输出为：",-1),s("div",{class:"language-python line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"python",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",{class:"language-python"},[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"我来帮您对齐这些竖杠。问题在于不同列的文本宽度不一致，需要调整间距使竖杠对齐。")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F44747"}},"```text")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# =================================================================")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#                     战斗游戏说明")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# =================================================================")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# 规则说明           │ 操作说明           │ 特殊机制")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# ------------------│-------------------│--------------------------")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# • 回合制战斗      │ A - 攻击          │ 治疗限制：")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# • HP归零即失败    │ D - 防御          │  • HP<50%时可治疗")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# • 敌人AI随机行动  │ H - 治疗(限1次)   │  • 治疗后敌人伤害×2")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# • 攻防存在克制    │ 输入不区分大小写   │  ")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# =================================================================")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# 血量显示：[##########----------] 50%  50/100")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# =================================================================")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F44747"}},"```")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"主要调整：")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}}," 第一列和第二列的文本宽度保持一致")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}}," 第三列保持原有宽度")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}}," 所有竖杠现在都在垂直方向上对齐")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}}," 保持了原有的分隔线和边框格式")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"这样看起来就整齐多了！")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1),s("p",null,"发现结果不理想，可以自己排版，尽量做到对齐。",-1),s("div",{class:"language-markdown line-numbers-mode","data-highlighter":"shiki","data-ext":"markdown",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",{class:"language-markdown"},[s("span",{class:"line"},[s("span",{style:{color:"#A6E22E","font-weight":"bold"}},"# =================================================================")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6E22E","font-weight":"bold"}},"#                     战斗游戏说明")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6E22E","font-weight":"bold"}},"# =================================================================")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6E22E","font-weight":"bold"}},"# 规则说明            │ 操作说明            │ 特殊机制")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6E22E","font-weight":"bold"}},"# ------------------│-------------------│--------------------------")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6E22E","font-weight":"bold"}},"# • 回合制战斗        │ A - 攻击           │ 治疗限制：")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6E22E","font-weight":"bold"}},"# • HP归零即失败      │ D - 防御           │  • HP<50%时可治疗")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6E22E","font-weight":"bold"}},"# • 敌人AI随机行动    │ H - 治疗(限1次)     │  • 治疗后敌人伤害×2")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6E22E","font-weight":"bold"}},"# • 攻防存在克制      │ 输入不区分大小写     │  ")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6E22E","font-weight":"bold"}},"# =================================================================")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6E22E","font-weight":"bold"}},"# 血量显示：["),s("span",{style:{color:"#AE81FF","font-weight":"bold"}},"##########----------"),s("span",{style:{color:"#A6E22E","font-weight":"bold"}},"] 50%  50/100")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6E22E","font-weight":"bold"}},"# =================================================================")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),s("p",null,null,-1)])]),tab1:a(({value:e,isActive:o})=>[...l[66]||(l[66]=[s("div",{class:"language-python line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"python",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",{class:"language-python"},[s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"MR"),s("span",{style:{color:"#E6DB74"}},"'s HP → [####################] 100%  100/100")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"李玲"),s("span",{style:{color:"#E6DB74"}},"'s HP → [####################] 100%  80/80")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"Attack "),s("span",{style:{color:"#F92672"}},"or"),s("span",{style:{color:"#F8F8F2"}}," Defence (A"),s("span",{style:{color:"#F92672"}},"/"),s("span",{style:{color:"#F8F8F2"}},"D)：A")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"李玲 chose to attack!")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"李玲 对你造成 "),s("span",{style:{color:"#AE81FF"}},"49"),s("span",{style:{color:"#F8F8F2"}}," 点伤害！（原始49 × 倍率1）")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"MR"),s("span",{style:{color:"#E6DB74"}},"'s HP → [##########----------]  51%  51/100")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"李玲"),s("span",{style:{color:"#E6DB74"}},"'s HP → [###################-]  92%  74/80")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"Attack "),s("span",{style:{color:"#F92672"}},"or"),s("span",{style:{color:"#F8F8F2"}}," Defence (A"),s("span",{style:{color:"#F92672"}},"/"),s("span",{style:{color:"#F8F8F2"}},"D)：D")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"李玲 攻击了你（被你防住大部分），造成 "),s("span",{style:{color:"#AE81FF"}},"4"),s("span",{style:{color:"#F8F8F2"}}," 点伤害！（原始42 × 减伤0.1 × 倍率1）")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"MR"),s("span",{style:{color:"#E6DB74"}},"'s HP → [#########-----------]  46%  46/100")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"李玲"),s("span",{style:{color:"#E6DB74"}},"'s HP → [###################-]  92%  74/80")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"（提示：你现在可以按 H 回满血，仅此一次）")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"Attack "),s("span",{style:{color:"#F92672"}},"or"),s("span",{style:{color:"#F8F8F2"}}," Defence "),s("span",{style:{color:"#F92672"}},"or"),s("span",{style:{color:"#F8F8F2"}}," Heal (A"),s("span",{style:{color:"#F92672"}},"/"),s("span",{style:{color:"#F8F8F2"}},"D"),s("span",{style:{color:"#F92672"}},"/"),s("span",{style:{color:"#F8F8F2"}},"H)：H")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"你使用了治疗技能！血量已回满。")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"李玲 攻击了你，造成 "),s("span",{style:{color:"#AE81FF"}},"98"),s("span",{style:{color:"#F8F8F2"}}," 点伤害！（原始49 × 倍率2）")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"MR"),s("span",{style:{color:"#E6DB74"}},"'s HP → [--------------------]   2%  2/100")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"李玲"),s("span",{style:{color:"#E6DB74"}},"'s HP → [###################-]  92%  74/80")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"【警告】治疗代价生效中：敌人对你的伤害 ×"),s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F8F8F2"}},"！")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"Attack "),s("span",{style:{color:"#F92672"}},"or"),s("span",{style:{color:"#F8F8F2"}}," Defence (A"),s("span",{style:{color:"#F92672"}},"/"),s("span",{style:{color:"#F8F8F2"}},"D)：A")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"李玲 chose to attack!")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"李玲 对你造成 "),s("span",{style:{color:"#AE81FF"}},"4"),s("span",{style:{color:"#F8F8F2"}}," 点伤害！（原始2 × 倍率2）")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"You Lose!")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1),s("p",null,null,-1)])]),tab2:a(({value:e,isActive:o})=>[...l[67]||(l[67]=[s("p",null,"**必须包含：**游戏规则、玩法、AI 可以进行的操作、以及与玩家操作绑定的敌人操作（交互）。",-1),s("p",null,"这一步可以交给 AI 来完成，通过对话进行微调。",-1),s("ol",null,[s("li",null,[s("p",null,"让 AI 一句话总结游戏规则和玩法操作。"),s("figure",null,[s("img",{src:_,alt:"",tabindex:"0",loading:"lazy"}),s("figcaption")])]),s("li",null,[s("p",null,"在此基础上，把游戏原始代码的游戏过程，也就是上一步准备的“游戏实际对话记录”给 AI ，并告知我们的目的是提供给 AI 的。"),s("figure",null,[s("img",{src:B,alt:"提问内容",tabindex:"0",loading:"lazy"}),s("figcaption",null,"提问内容")]),s("p",null,"deepseek 给出的结果如下："),s("div",{class:"language-python line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"python",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",{class:"language-python"},[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"好的，这是一个为AI大模型设计的、基于当前游戏状态进行决策的提示词。它将确保AI扮演的敌人只返回“A”或“D”，并且其决策是合理且符合游戏规则的。")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F44747"}},"--"),s("span",{style:{color:"#F92672"}},"-")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"### **AI敌人决策提示词**")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"你是一个回合制战斗游戏中的敌人AI，请基于当前对战状态，分析局势并做出最合理的行动。你"),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F8F8F2"}},"只能"),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F8F8F2"}},"在“A”（攻击）或“D”（防御）中选择一个作为回应，不要有任何其他输出。")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F8F8F2"}},"【游戏规则与决策逻辑】"),s("span",{style:{color:"#F92672"}},"**")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},".  "),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F8F8F2"}},"核心机制"),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F8F8F2"}},"：这是一个回合制游戏。如果你选择“A”（攻击）而玩家选择“A”，你们会互相造成伤害；如果玩家选择“D”（防御），你的攻击伤害会大幅降低。")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F8F8F2"}},".  "),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F8F8F2"}},"你的目标"),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F8F8F2"}},"：击败玩家（将玩家的HP降至0）。")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"3"),s("span",{style:{color:"#F8F8F2"}},".  "),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F8F8F2"}},"你的决策依据"),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F8F8F2"}},"：")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    *"),s("span",{style:{color:"#F92672"}},"   **"),s("span",{style:{color:"#F8F8F2"}},"进攻倾向"),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F8F8F2"}},"：当你的血量健康或玩家血量较低时，积极进攻以施加压力。")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    *"),s("span",{style:{color:"#F92672"}},"   **"),s("span",{style:{color:"#F8F8F2"}},"防御倾向"),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F8F8F2"}},"：当你自身血量较低，需要规避风险时，选择防御来减少玩家攻击对你造成的伤害。")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    *"),s("span",{style:{color:"#F92672"}},"   **"),s("span",{style:{color:"#F8F8F2"}},"心理博弈"),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F8F8F2"}},"：观察玩家的行动模式。如果玩家连续攻击，你可以适时防御；如果玩家连续防御，你可以大胆进攻。")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F8F8F2"}},"【当前游戏状态分析框架】"),s("span",{style:{color:"#F92672"}},"**")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"请根据以下信息进行决策：")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"*"),s("span",{style:{color:"#F92672"}},"   **"),s("span",{style:{color:"#F8F8F2"}},"你的血量 (Enemy "),s("span",{style:{color:"#AE81FF"}},"HP"),s("span",{style:{color:"#F8F8F2"}},")"),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F8F8F2"}},"：["),s("span",{style:{color:"#88846F"}},"#####---------------] 26% 21/80")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    *"),s("span",{style:{color:"#F92672"}},"   **"),s("span",{style:{color:"#F8F8F2"}},"分析"),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F8F8F2"}},"：你的血量非常低，处于极度危险状态。")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"*"),s("span",{style:{color:"#F92672"}},"   **"),s("span",{style:{color:"#F8F8F2"}},"玩家的血量 (Player "),s("span",{style:{color:"#AE81FF"}},"HP"),s("span",{style:{color:"#F8F8F2"}},")"),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F8F8F2"}},"：["),s("span",{style:{color:"#88846F"}},"##########----------] 48% 48/100")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    *"),s("span",{style:{color:"#F92672"}},"   **"),s("span",{style:{color:"#F8F8F2"}},"分析"),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F8F8F2"}},"：玩家血量低于50"),s("span",{style:{color:"#F92672"}},"%"),s("span",{style:{color:"#F8F8F2"}},"，但他刚刚使用了治疗，这个威胁已解除。玩家血量仍高于你。")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"*"),s("span",{style:{color:"#F92672"}},"   **"),s("span",{style:{color:"#F8F8F2"}},"特殊状态"),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F8F8F2"}},"：【警告】治疗代价生效中：敌人对你的伤害×"),s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F8F8F2"}},"！")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    *"),s("span",{style:{color:"#F92672"}},"   **"),s("span",{style:{color:"#F8F8F2"}},"分析"),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F8F8F2"}},"：这是你的巨大优势！你的每次攻击都能造成双倍伤害。")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"*"),s("span",{style:{color:"#F92672"}},"   **"),s("span",{style:{color:"#F8F8F2"}},"近期对战记录"),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F8F8F2"}},"：玩家在血量危急时选择了治疗，随后你利用双倍伤害一击造成64点高额伤害。上一回合玩家选择了攻击(A)。")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F8F8F2"}},"【决策指令】"),s("span",{style:{color:"#F92672"}},"**")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"综合以上所有情况，你认为现在最合理的行动是什么？")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"请只输出一个字母："),s("span",{style:{color:"#F44747"}},"`A`"),s("span",{style:{color:"#F8F8F2"}}," 或 "),s("span",{style:{color:"#F44747"}},"`D`"),s("span",{style:{color:"#F8F8F2"}},"。")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F44747"}},"--"),s("span",{style:{color:"#F92672"}},"-")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"### **预期效果说明**")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"当大模型接收到包含上述提示词和最新游戏状态的请求时，它会进行如下思考：")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},".  "),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F8F8F2"}},"分析局面"),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F8F8F2"}},"：我的血线（"),s("span",{style:{color:"#AE81FF"}},"26"),s("span",{style:{color:"#F92672"}},"%"),s("span",{style:{color:"#F8F8F2"}},"）非常低，玩家的血线（"),s("span",{style:{color:"#AE81FF"}},"36"),s("span",{style:{color:"#F92672"}},"%"),s("span",{style:{color:"#F8F8F2"}},"）比我高，但他受到我的双倍伤害威胁。")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F8F8F2"}},".  "),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F8F8F2"}},"评估风险与收益"),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F8F8F2"}},"：")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    *"),s("span",{style:{color:"#F8F8F2"}},"   如果选择 "),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F8F8F2"}},"A（攻击）"),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F8F8F2"}},"：由于我有双倍伤害，即使我的攻击力不高，也能对玩家造成显著打击。如果玩家也攻击，我可能被他击败，但我有机会利用高伤害翻盘。")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    *"),s("span",{style:{color:"#F8F8F2"}},"   如果选择 "),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F8F8F2"}},"D（防御）"),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F8F8F2"}},"：可以稳妥地减少玩家本轮攻击的伤害，确保我能存活到下一轮，但会浪费掉双倍伤害的进攻机会。")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"3"),s("span",{style:{color:"#F8F8F2"}},".  "),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F8F8F2"}},"做出决策"),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F8F8F2"}},"：鉴于我有“双倍伤害”的巨大优势，且玩家血量并非遥不可及，这是一个“高风险高回报”的搏命机会。"),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F8F8F2"}},"进攻（A）"),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F8F8F2"}}," 是更符合击败玩家目标的激进但合理的选择。")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"最终，大模型将只输出："),s("span",{style:{color:"#F92672"}},"**"),s("span",{style:{color:"#F8F8F2"}},"A"),s("span",{style:{color:"#F92672"}},"**")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})])])],-1)])]),_:1}),l[77]||(l[77]=c('<p><strong>步骤二：大模型设定</strong></p><p>进行大模型角色设定时，需要在 <code>system</code> 中告知大模型游戏规则，它在游戏中充当的角色，限定大模型的回答。此时可以将我们准备好的提示词交给大模型。</p><p><strong>那如何应用 AI 给的提示词呢？</strong></p><p>两点思考：给 AI 一个怎样的设定？问 AI 什么问题？</p><p>因此，<strong>【游戏规则与决策逻辑】</strong> 部分是 AI 的提示词，即角色设定；<strong>【当前游戏状态分析框架】</strong> 是我们给大模型的问题，不能直接像玩家一样提问个 “A” 就结束了，而是应该给出具体情景；为了保证 AI 的输出是我们需要的 “A” 或 “D” ,可以在提问时继续增加限制条件，即**【决策指令】** ，请只输出一个字母：<code>A</code> 或 <code>D</code>。</p><p>测试结果如下：</p><figure><img src="'+k+`" alt="大模型成功返回了我们需要的结果 A" tabindex="0" loading="lazy"><figcaption>大模型成功返回了我们需要的结果 A</figcaption></figure><p>我们还可以对提示词继续完善：</p><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code class="language-markdown"><span class="line"><span style="color:#F8F8F2;">ENEMY_SYSTEM_PROMPT = &quot;&quot;&quot;你是这个回合制战斗游戏中的“敌人AI”，只负责在每一回合选择【A】或【D】。</span></span>
<span class="line"><span style="color:#F8F8F2;">请严格遵守：</span></span>
<span class="line"><span style="color:#A6E22E;">-</span><span style="color:#F8F8F2;"> 你只能输出一个大写字母：A 或 D（不要输出其它任何文字）。</span></span>
<span class="line"><span style="color:#A6E22E;">-</span><span style="color:#F8F8F2;"> 决策要基于当回合提供的状态信息做出理性选择。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">规则回顾（供你参考，不要复述）：</span></span>
<span class="line"><span style="color:#A6E22E;">1)</span><span style="color:#F8F8F2;"> 若玩家使用治疗（H），本回合敌人必定攻击（A），且敌人伤害翻倍（×2）。</span></span>
<span class="line"><span style="color:#A6E22E;">2)</span><span style="color:#F8F8F2;"> 当你的 HP &lt; 40% 且玩家看起来会攻击时，更倾向于防御（D）。</span></span>
<span class="line"><span style="color:#A6E22E;">3)</span><span style="color:#F8F8F2;"> 当玩家防御（D）且你的 HP 不低时，更倾向于攻击（A）来消耗对手。</span></span>
<span class="line"><span style="color:#A6E22E;">4)</span><span style="color:#F8F8F2;"> 一般情况下倾向于进攻（A），但在自己低血或明显亏换血时可以选择防御（D）。</span></span>
<span class="line"><span style="color:#F8F8F2;">&quot;&quot;&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>步骤三：将大模型接口封装为一个函数</strong></p><ol><li>AI 大模型接口作为敌人角色，它的输出就是敌人的操作，因此可以将原始游戏代码中的敌人操作部分换为 <code>input</code> 来接入。</li><li></li></ol>`,11))])}const I=i(x,[["render",q]]),C=JSON.parse('{"path":"/programming/python/14-class.html","title":"14. 类","lang":"zh-CN","frontmatter":{"title":"14. 类","icon":"boke","date":"2025-07-31T15:11:04.000Z","author":"Ran","isOriginal":true,"sticky":false,"star":false,"article":true,"timeline":true,"image":false,"navbar":true,"sidebarIcon":true,"comment":true,"lastUpdated":true,"editLink":true,"backToTop":true,"toc":true,"description":"1. 面向对象 将程序任务涉及到的事物抽象为一个个的对象，以这些对象为中心来写程序。 1.1 什么是类？ 类 和 实例 物以类聚，人以群分 狗是一类动物，具有相同、相似属性。（类） 两只狗，半斤和八两，出生后不会互相影响，彼此是独立的个体。（实例） 当类改变的时候，实例也会受到影响；但实例改变时，不会影响其他实例或者整个类。 1.2 对象，你找到了吗？...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"14. 类\\",\\"image\\":[\\"https://cdn.deepseek.com/api-docs/deepseek_r1_multiround_example_cn.png\\"],\\"datePublished\\":\\"2025-07-31T15:11:04.000Z\\",\\"dateModified\\":\\"2025-10-27T14:18:12.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Ran\\"}]}"],["meta",{"property":"og:url","content":"https://pythiaroot.com/programming/python/14-class.html"}],["meta",{"property":"og:site_name","content":"Pythia’s Root"}],["meta",{"property":"og:title","content":"14. 类"}],["meta",{"property":"og:description","content":"1. 面向对象 将程序任务涉及到的事物抽象为一个个的对象，以这些对象为中心来写程序。 1.1 什么是类？ 类 和 实例 物以类聚，人以群分 狗是一类动物，具有相同、相似属性。（类） 两只狗，半斤和八两，出生后不会互相影响，彼此是独立的个体。（实例） 当类改变的时候，实例也会受到影响；但实例改变时，不会影响其他实例或者整个类。 1.2 对象，你找到了吗？..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cdn.deepseek.com/api-docs/deepseek_r1_multiround_example_cn.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-27T14:18:12.000Z"}],["meta",{"property":"article:author","content":"Ran"}],["meta",{"property":"article:published_time","content":"2025-07-31T15:11:04.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-27T14:18:12.000Z"}]]},"git":{"createdTime":1753948874000,"updatedTime":1761574692000,"contributors":[{"name":"AmaraMeng","username":"AmaraMeng","email":"ranmeng9558@gmail.com","commits":26,"url":"https://github.com/AmaraMeng"}],"changelog":[{"hash":"c5084440836ff49b6652c48cc644f47854cd6c7a","time":1761574692000,"email":"ranmeng9558@gmail.com","author":"AmaraMeng","message":"Add instructions for integrating AI model as enemy actions in turn-based battle system"},{"hash":"7fb460b6138a04ff18001c5115d9cf320963f535","time":1761550502000,"email":"ranmeng9558@gmail.com","author":"AmaraMeng","message":"Refactor code structure for improved readability and maintainability"},{"hash":"ed13e85f2b2720ecbc76797958494574ad09b9cb","time":1761207961000,"email":"ranmeng9558@gmail.com","author":"AmaraMeng","message":"Add game mechanics and instructions for turn-based battle system in <a href=\\"http://14-class.md\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">14-class.md</a>"},{"hash":"046156e56868c6d58a8096bc4edb2c6a91038372","time":1761199182000,"email":"ranmeng9558@gmail.com","author":"AmaraMeng","message":"Remove extra blank lines in <a href=\\"http://14-class.md\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">14-class.md</a>"},{"hash":"2f935174adc6fc76d08d1f0f89261d95401c8a3d","time":1760965454000,"email":"ranmeng9558@gmail.com","author":"AmaraMeng","message":"Update Jupyter Notebook exploration links and add guidance for multi-turn dialogue implementation"},{"hash":"0f1f9db02f71d59e5a50d680e5413f4d84b25301","time":1760963813000,"email":"ranmeng9558@gmail.com","author":"AmaraMeng","message":"Add \\"Math for AI\\" link to navbar and create initial draft for \\"数学基础知识\\" article"},{"hash":"998bcc882c633a0e869796a19d5d069023701828","time":1760948900000,"email":"ranmeng9558@gmail.com","author":"AmaraMeng","message":"Add a note about streaming code in the 14-class article"},{"hash":"1e4d27b809ebff9ffbb5b23aa0a73df3a87398e9","time":1760342950000,"email":"ranmeng9558@gmail.com","author":"AmaraMeng","message":"Update Jupyter Notebook exploration link and clarify non-streaming results"},{"hash":"d62203ab6ede7a05123f69273463515ea34daa34","time":1759996977000,"email":"ranmeng9558@gmail.com","author":"AmaraMeng","message":"Update documentation to enhance clarity and provide additional examples for API usage"},{"hash":"2b3c3af815a61c27c585557976bf7a06b16b3eb0","time":1759996383000,"email":"ranmeng9558@gmail.com","author":"AmaraMeng","message":"Update Jupyter Notebook exploration section with findings and link for reference"},{"hash":"90fd4318279610559f3581f876631db7d8e3d20a","time":1759995893000,"email":"ranmeng9558@gmail.com","author":"AmaraMeng","message":"Add new image asset for Python environment documentation"},{"hash":"d194dd9ddf85d1a81dea707e03aae03635d01111","time":1759119228000,"email":"ranmeng9558@gmail.com","author":"AmaraMeng","message":"Refactor code structure for improved readability and maintainability"},{"hash":"3baab2d65c2afa544a91475e60364427393fa308","time":1758788435000,"email":"ranmeng9558@gmail.com","author":"AmaraMeng","message":"Refactor code structure for improved readability and maintainability"},{"hash":"5138f4839badca4bf6b345cb41a81aebc5299a77","time":1758528271000,"email":"ranmeng9558@gmail.com","author":"AmaraMeng","message":"Implement code changes to enhance functionality and improve performance"},{"hash":"4ee73c3175bed5266ef48ced96c9416bc7e6e4c9","time":1758009755000,"email":"ranmeng9558@gmail.com","author":"AmaraMeng","message":"Add Faker library usage examples for generating random enemy names and data"},{"hash":"25c6a2ceea12803718bf3bbc73bac9407e7a8bd7","time":1758006291000,"email":"ranmeng9558@gmail.com","author":"AmaraMeng","message":"Refactor markdown formatting for clarity; enhance code examples and explanations in <a href=\\"http://14-class.md\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">14-class.md</a>"},{"hash":"ef95f5887f49389a3754a8e9b89f4d65f955e2d8","time":1758004220000,"email":"ranmeng9558@gmail.com","author":"AmaraMeng","message":"Add image-20250916142821074.png to the 14-class.assets directory"},{"hash":"59fb6fce5c8643319fd650aea8bb24d31511114b","time":1757578222000,"email":"ranmeng9558@gmail.com","author":"AmaraMeng","message":"Add healing functionality and adjust enemy attack mechanics in combat system"},{"hash":"3d9d8177752592e378b8a4d8909061b4d3d01329","time":1757406637000,"email":"ranmeng9558@gmail.com","author":"AmaraMeng","message":"Implement player attack and defense mechanics with enemy response; add healing functionality for low HP scenarios."},{"hash":"01e1fe28aca55805a63e5568cb57513635ee236b","time":1756368395000,"email":"ranmeng9558@gmail.com","author":"AmaraMeng","message":"Refactor code structure for improved readability and maintainability"},{"hash":"88b8330388e6740958b128582e2ac729b6b6c104","time":1756196432000,"email":"ranmeng9558@gmail.com","author":"AmaraMeng","message":"Refactor game logic to enhance readability and functionality; optimize health check and action handling"},{"hash":"623653b7fe8bbbb53251f54ad923c83989c491de","time":1755763495000,"email":"ranmeng9558@gmail.com","author":"AmaraMeng","message":"Refactor code structure for improved readability and maintainability"},{"hash":"8ac6af1ea9dad0568228028b7c30c5409f3e2d98","time":1755590520000,"email":"ranmeng9558@gmail.com","author":"AmaraMeng","message":"Implement code changes to enhance functionality and improve performance"},{"hash":"dfd3b2fbf464b7646a69d14f7a60425e17f7c9c3","time":1754986027000,"email":"ranmeng9558@gmail.com","author":"AmaraMeng","message":"Refactor class definitions to use parentheses for consistency and improve clarity"},{"hash":"ec4e8047fe00011681a911f14f97844acac83394","time":1754553901000,"email":"ranmeng9558@gmail.com","author":"AmaraMeng","message":"Refactor code structure for improved readability and maintainability"},{"hash":"9cda3dc4b437c3c69b075a83c713462936a6de19","time":1753948874000,"email":"ranmeng9558@gmail.com","author":"AmaraMeng","message":"Add chapter on classes in Python, covering object-oriented programming concepts, class and instance definitions, and practical examples for animal movement simulation."}]},"readingTime":{"minutes":99.95,"words":29984},"filePathRelative":"programming/python/14-class.md","excerpt":"<h2>1. 面向对象</h2>\\n<p>将程序任务涉及到的事物抽象为一个个的对象，以这些对象为中心来写程序。</p>\\n<h3>1.1 什么是类？</h3>\\n<p><strong>类</strong> 和 <strong>实例</strong></p>\\n<p>物以类聚，人以群分</p>\\n<ul>\\n<li>狗是一类动物，具有相同、相似属性。（类）</li>\\n<li>两只狗，半斤和八两，出生后不会互相影响，彼此是独立的个体。（实例）</li>\\n<li>当类改变的时候，实例也会受到影响；但实例改变时，不会影响其他实例或者整个类。</li>\\n</ul>\\n<h3>1.2 对象，你找到了吗？</h3>\\n<figure><figcaption></figcaption></figure>","autoDesc":true}');export{I as comp,C as data};
