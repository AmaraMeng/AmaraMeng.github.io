import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{e as a,h as l,o as e}from"./app-CSTbAvGH.js";const p="/assets/image-20250318141107358-D0xlSa_p.png",o={};function i(c,s){return e(),a("div",null,s[0]||(s[0]=[l('<h2 id="_1-理解变量——生活中的例子" tabindex="-1"><a class="header-anchor" href="#_1-理解变量——生活中的例子"><span>1. 理解变量——生活中的例子</span></a></h2><h3 id="_1-1-从字面意思去理解" tabindex="-1"><a class="header-anchor" href="#_1-1-从字面意思去理解"><span>1.1 从字面意思去理解</span></a></h3><ul><li>变：变化</li><li>量：大小</li></ul><h3 id="_1-2-举个例子" tabindex="-1"><a class="header-anchor" href="#_1-2-举个例子"><span>1.2 举个例子</span></a></h3><figure><img src="'+p+`" alt="变量例子" tabindex="0" loading="lazy"><figcaption>变量例子</figcaption></figure><p>——所以，<strong>变量不就是在计算机的内存中开辟空间，来储存数据</strong>。 （<code>ctrl + B</code> 加粗）</p><h3 id="_1-3-变量的特点" tabindex="-1"><a class="header-anchor" href="#_1-3-变量的特点"><span>1.3 变量的特点</span></a></h3><p>特点：变量的值会被覆盖，只会记得最后一个值。</p><h2 id="_2-如何创建变量——赋值语句" tabindex="-1"><a class="header-anchor" href="#_2-如何创建变量——赋值语句"><span>2. 如何创建变量——赋值语句</span></a></h2><ol><li><p>变量：通过 变量名 代表或引用某个值。</p><ul><li><p>女娲捏了泥人，泥人没有生命，女娲挥了挥柳条，赋予给泥人生命，此时，泥人可以代表女娲的后人。</p><p>[变量：泥人，值（表达式）：女娲， <code>泥人 = 女娲</code>]</p></li><li><p>全国人大中的人大代表，是由广大人民群众投票选举出来的。他们的权利不是自己获取的，所以可以说：我代表的是广大人民群众的意志。</p><p>[变量：人大代表，值（表达式）：人民群众，<code>人大代表 = 人民群众</code>]</p></li></ul></li><li><p>初始化赋值语句：<strong>变量名 = 表达式</strong> [<code>=</code> 叫做赋值运算符]</p><ul><li>变量名：就是这个空间，我们叫它XX名字；</li><li>表达式：类似数学表达；</li></ul><p>程序的运行逻辑：<strong>从上到下，从右向左（此处“右”指的是 = 右边的表达式），最后才是赋值。</strong></p><p><strong>栗子</strong>：如果右侧是明确的结果（值），则直接赋值给左侧变量，如果右侧是个复杂的表达式，则需要先运算出最精简的结果或值，再进行赋值。</p><ul><li><p>代码实现：</p><ol><li>打开 PyCharm ，新建目录 <code>directory</code>，在其中再新建 <code>python file</code>;</li><li>代码如下：</li></ol><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">x </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 1</span><span style="color:#88846F;">  #1赋值给了 X ， X 代表 1</span></span>
<span class="line"><span style="color:#F8F8F2;">x </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> x </span><span style="color:#F92672;">+</span><span style="color:#AE81FF;"> 10</span><span style="color:#88846F;">  # x + 10 等价于 1 + 10 最后得出 11， 11 再赋值给 X</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(x)    </span><span style="color:#88846F;"># print 打印 输出</span></span>
<span class="line"><span style="color:#88846F;"># 井号用来注释、注解，解释某一行代码的功能或作用</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#————output————</span></span>
<span class="line"><span style="color:#AE81FF;">11</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>右键选择 <code>run</code> 运行代码</li></ol></li><li><p>相关代码实现：</p></li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#88846F;">#变量值的传递</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">name1 </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;hanmeimei&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">name2 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> name1</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(name2)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#————output————</span></span>
<span class="line"><span style="color:#F8F8F2;">hanmeimei</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#88846F;">#变量值会被覆盖</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">name1 </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;lilei&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">name1 </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;hanmeimei&quot;</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(name1)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#————output————</span></span>
<span class="line"><span style="color:#F8F8F2;">hanmeimei</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="_3-探究-print" tabindex="-1"><a class="header-anchor" href="#_3-探究-print"><span>3. 探究 print</span></a></h2><h3 id="_3-1-同时输出多个数据" tabindex="-1"><a class="header-anchor" href="#_3-1-同时输出多个数据"><span>3.1 同时输出多个数据</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">a </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 1</span></span>
<span class="line"><span style="color:#F8F8F2;">b </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 2</span></span>
<span class="line"><span style="color:#F8F8F2;">c </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 3</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(a, b, c)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#————output————</span></span>
<span class="line"><span style="color:#AE81FF;">1</span><span style="color:#AE81FF;"> 2</span><span style="color:#AE81FF;"> 3</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>print</code> 输出多个变量，默认以空格间隔。</p><h3 id="_3-2-sep-修改多个变量同时输出的间隔" tabindex="-1"><a class="header-anchor" href="#_3-2-sep-修改多个变量同时输出的间隔"><span>3.2 sep 修改多个变量同时输出的间隔</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">a </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 1</span></span>
<span class="line"><span style="color:#F8F8F2;">b </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 2</span></span>
<span class="line"><span style="color:#F8F8F2;">c </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 3</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(a, b, c, </span><span style="color:#FD971F;font-style:italic;">sep</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;">&#39; 间隔 &#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#————output————</span></span>
<span class="line"><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;"> 间隔 </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;"> 间隔 </span><span style="color:#AE81FF;">3</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>‘ 间隔 ’</code>都可以修改，如：<code>print(a, b, c, sep=&#39; &amp; &#39;)</code>，结果为<code>1 &amp; 2 &amp; 3</code> ， <code>print(a, b, c, sep=&#39;间隔&#39;</code>，结果为<code>1间隔2间隔3</code> 。</p><p>注意：<code>sep</code>只有在输出多个变量时才有效果。</p><h3 id="_3-3-end的使用" tabindex="-1"><a class="header-anchor" href="#_3-3-end的使用"><span>3.3 end的使用</span></a></h3><p>单独输出一个变量时，末尾会自动换行，即 <code>end = &#39;\\n&#39;</code> ，其中 <code>\\n</code> 表示换行，引号内的字符可以修改，<strong>空格也有意义</strong>。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">a </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 1</span></span>
<span class="line"><span style="color:#F8F8F2;">b </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 2</span></span>
<span class="line"><span style="color:#F8F8F2;">c </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 3</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(a, </span><span style="color:#FD971F;font-style:italic;">end</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;">&quot;</span><span style="color:#AE81FF;">\\n</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(b, </span><span style="color:#FD971F;font-style:italic;">end</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;">&quot;hhhh&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(c, </span><span style="color:#FD971F;font-style:italic;">end</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;">&quot;最后一行&quot;</span><span style="color:#F8F8F2;">)  </span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#————output————</span></span>
<span class="line"><span style="color:#AE81FF;">1</span></span>
<span class="line"><span style="color:#F44747;">2hhhh3最后一行</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">a </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 1</span></span>
<span class="line"><span style="color:#F8F8F2;">b </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 2</span></span>
<span class="line"><span style="color:#F8F8F2;">c </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 3</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(a, </span><span style="color:#FD971F;font-style:italic;">end</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;">&quot;n love</span><span style="color:#AE81FF;">\\n</span><span style="color:#E6DB74;">python &quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(b, </span><span style="color:#FD971F;font-style:italic;">end</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;">&quot; 哈哈哈哈&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(c)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#————output————</span></span>
<span class="line"><span style="color:#F44747;">1n</span><span style="color:#F8F8F2;"> love</span></span>
<span class="line"><span style="color:#F8F8F2;">python </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;"> 哈哈哈哈3</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-4-end-和-sep-可以同时使用" tabindex="-1"><a class="header-anchor" href="#_3-4-end-和-sep-可以同时使用"><span>3.4 end 和 sep 可以同时使用</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">a </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 1</span></span>
<span class="line"><span style="color:#F8F8F2;">b </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 2</span></span>
<span class="line"><span style="color:#F8F8F2;">c </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 3</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(a, b, c, </span><span style="color:#FD971F;font-style:italic;">sep</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;">&quot;~&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">end</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;">&quot; love Python&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#————output————</span></span>
<span class="line"><span style="color:#AE81FF;">1</span><span style="color:#F92672;">~</span><span style="color:#AE81FF;">2</span><span style="color:#F92672;">~</span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;"> love Python</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-5-输出时添加提示" tabindex="-1"><a class="header-anchor" href="#_3-5-输出时添加提示"><span>3.5 输出时添加提示</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#88846F;"># 输出时可以添加提示，其实就是基于 print 同时输出多个变量的特点</span></span>
<span class="line"><span style="color:#F8F8F2;">a </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 1</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;a 的值是: &quot;</span><span style="color:#F8F8F2;">, a)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#————output————</span></span>
<span class="line"><span style="color:#F8F8F2;">a 的值是:  </span><span style="color:#AE81FF;">1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-6-多个变量同时赋予同一个值" tabindex="-1"><a class="header-anchor" href="#_3-6-多个变量同时赋予同一个值"><span>3.6 多个变量同时赋予同一个值</span></a></h3><div class="language-py line-numbers-mode" data-highlighter="shiki" data-ext="py" data-title="py" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">a </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> b </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> c </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 1</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(a)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(b)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(c)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#————output————</span></span>
<span class="line"><span style="color:#AE81FF;">1</span></span>
<span class="line"><span style="color:#AE81FF;">1</span></span>
<span class="line"><span style="color:#AE81FF;">1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-7-同时给多个变量赋予不同的值" tabindex="-1"><a class="header-anchor" href="#_3-7-同时给多个变量赋予不同的值"><span>3.7 同时给多个变量赋予不同的值</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">a, b, c </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(a, b, c)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#————output————</span></span>
<span class="line"><span style="color:#AE81FF;">1</span><span style="color:#AE81FF;"> 2</span><span style="color:#AE81FF;"> 3</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-练习" tabindex="-1"><a class="header-anchor" href="#_4-练习"><span>4. 练习</span></a></h2><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" data-title="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">Austin_cup </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;Coke&quot;</span><span style="color:#88846F;">  # 该赋值可以理解为从饮料瓶倒果汁的过程</span></span>
<span class="line"><span style="color:#F8F8F2;">Jaden_cup </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;juice&quot;</span><span style="color:#88846F;">  # 该赋值可以理解为从饮料瓶倒果汁的过程</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Austin 杯子现在装的饮料&quot;</span><span style="color:#F8F8F2;">, Austin_cup)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Jaden 杯子现在装的饮料&quot;</span><span style="color:#F8F8F2;">, Jaden_cup)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># ---------------</span></span>
<span class="line"><span style="color:#88846F;"># 这里编写什么代码才能使上下相同输出的 print 代码，输出的结果是交换过来的。</span></span>
<span class="line"><span style="color:#88846F;"># ---------------</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">Austin_cup, Jaden_cup </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Jaden_cup, Austin_cup</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;交换之后......&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Austin 杯子现在装的饮料&quot;</span><span style="color:#F8F8F2;">, Austin_cup)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Jaden 杯子现在装的饮料&quot;</span><span style="color:#F8F8F2;">, Jaden_cup)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># # ---目标输出结果---</span></span>
<span class="line"><span style="color:#88846F;"># Austin 杯子现在装的饮料 Coke</span></span>
<span class="line"><span style="color:#88846F;"># Jaden 杯子现在装的饮料 juice</span></span>
<span class="line"><span style="color:#88846F;"># 交换之后......</span></span>
<span class="line"><span style="color:#88846F;"># Austin 杯子现在装的饮料 juice</span></span>
<span class="line"><span style="color:#88846F;"># Jaden 杯子现在装的饮料 Coke</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>Python 特有的 <strong>“从上到下，从右向左，最后赋值”</strong> 的特点：</p><p>step 1：先给 <code>Jaden_cup</code> 和 <code>Austin_cup</code>分别赋值 <code>juice</code> 和<code>Coke</code>;</p><p>step 2：将<code>Jaden_cup</code>取到的值，和 <code>Austin_cup</code>取到的值再分别赋给 <code>Austin_cup</code>和<code>Jaden_cup</code></p><p>因此可以通过这种方式实现。</p><h2 id="_5-tips" tabindex="-1"><a class="header-anchor" href="#_5-tips"><span>5. tips</span></a></h2><p>选中代码，<code>crtl + /</code> 注释掉选中的代码</p>`,38)]))}const d=n(o,[["render",i],["__file","variable.html.vue"]]),F=JSON.parse('{"path":"/programming/python/variable.html","title":"Variable","lang":"zh-CN","frontmatter":{"title":"Variable","date":"2025-03-18T15:38:39.000Z","author":"Ran","isOriginal":true,"icon":"boke","sticky":false,"star":false,"article":true,"timeline":true,"image":false,"navbar":true,"sidebarIcon":true,"headerDepth":5,"comment":true,"lastUpdated":true,"editLink":false,"backToTop":true,"toc":true,"description":"1. 理解变量——生活中的例子 1.1 从字面意思去理解 变：变化 量：大小 1.2 举个例子 变量例子变量例子 ——所以，变量不就是在计算机的内存中开辟空间，来储存数据。 （ctrl + B 加粗） 1.3 变量的特点 特点：变量的值会被覆盖，只会记得最后一个值。 2. 如何创建变量——赋值语句 变量：通过 变量名 代表或引用某个值。 女娲捏了泥人，...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/programming/python/variable.html"}],["meta",{"property":"og:site_name","content":"Pythia’s Root"}],["meta",{"property":"og:title","content":"Variable"}],["meta",{"property":"og:description","content":"1. 理解变量——生活中的例子 1.1 从字面意思去理解 变：变化 量：大小 1.2 举个例子 变量例子变量例子 ——所以，变量不就是在计算机的内存中开辟空间，来储存数据。 （ctrl + B 加粗） 1.3 变量的特点 特点：变量的值会被覆盖，只会记得最后一个值。 2. 如何创建变量——赋值语句 变量：通过 变量名 代表或引用某个值。 女娲捏了泥人，..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-20T02:07:03.000Z"}],["meta",{"property":"article:author","content":"Ran"}],["meta",{"property":"article:published_time","content":"2025-03-18T15:38:39.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-20T02:07:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Variable\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-03-18T15:38:39.000Z\\",\\"dateModified\\":\\"2025-03-20T02:07:03.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Ran\\"}]}"]]},"git":{"createdTime":1741743719000,"updatedTime":1742436423000,"contributors":[{"name":"AmaraMeng","username":"AmaraMeng","email":"ranmeng9558@gmail.com","commits":7,"url":"https://github.com/AmaraMeng"}]},"readingTime":{"minutes":4.01,"words":1202},"filePathRelative":"programming/python/variable.md","localizedDate":"2025年3月18日","excerpt":"<h2>1. 理解变量——生活中的例子</h2>\\n<h3>1.1 从字面意思去理解</h3>\\n<ul>\\n<li>变：变化</li>\\n<li>量：大小</li>\\n</ul>\\n<h3>1.2 举个例子</h3>\\n<figure><figcaption>变量例子</figcaption></figure>\\n<p>——所以，<strong>变量不就是在计算机的内存中开辟空间，来储存数据</strong>。 （<code>ctrl + B</code> 加粗）</p>\\n<h3>1.3 变量的特点</h3>\\n<p>特点：变量的值会被覆盖，只会记得最后一个值。</p>\\n<h2>2. 如何创建变量——赋值语句</h2>","autoDesc":true}');export{d as comp,F as data};
