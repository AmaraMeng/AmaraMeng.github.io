import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c,d as t,a as s,e as r,b as n,w as e,r as F,o as d}from"./app-DIQB_vyt.js";const u="/assets/string-start-end-step-C2egMxsF.svg",y={};function v(m,l){const o=F("CodeTabs");return d(),c("div",null,[l[101]||(l[101]=t(`<h2 id="_1-字符串的创建" tabindex="-1"><a class="header-anchor" href="#_1-字符串的创建"><span>1. 字符串的创建</span></a></h2><p>三种方法：</p><ol><li>单引号</li><li>双引号</li><li>三个单引号（三个双引号）</li></ol><ul><li>单引号、双引号</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &#39;I am born for this.&#39;</span><span style="color:#88846F;">    #英文表达</span></span>
<span class="line"><span style="color:#88846F;">#string = &#39;I&#39;m born for this.&#39;     # I am 缩写成 I‘m，与表示字符串的引号冲突，错误。</span></span>
<span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;I&#39;m born for this.&quot;</span><span style="color:#88846F;">     # 正确表达</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(string)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">I</span><span style="color:#E6DB74;">&#39;m born for this.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>问题：无法直接输出段落。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;我们有时候不仅仅要看选择项以内的答案，也要去思考选择项以外的答案。——AI悦创</span><span style="color:#AE81FF;">\\</span></span>
<span class="line"><span style="color:#AE81FF;">\\</span></span>
<span class="line"><span style="color:#E6DB74;">浅者见浅，深者见深——黄家宝</span><span style="color:#AE81FF;">\\</span></span>
<span class="line"><span style="color:#AE81FF;">\\</span></span>
<span class="line"><span style="color:#E6DB74;">起的最早的是理想主义者，跑的最快的是骗子，而胆子最大的是那些冒险家，害怕错过一切，疯狂往里冲的是韭菜，而真正的成功者，可能还没有入场。</span><span style="color:#AE81FF;">\\</span></span>
<span class="line"><span style="color:#AE81FF;">\\</span></span>
<span class="line"><span style="color:#E6DB74;">先实现功能，再去优化，否则一切会很乱。——AI悦创</span><span style="color:#AE81FF;">\\</span></span>
<span class="line"><span style="color:#AE81FF;">\\</span></span>
<span class="line"><span style="color:#E6DB74;">凡是你不能清晰写下来的东西，都是你还没有真正理解的东西&quot;</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(string)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------    在每行末尾增加反斜杠，虽然能解决单/双引号无法输出段落的问题，但输出的内容没有格式。</span></span>
<span class="line"><span style="color:#F8F8F2;">我们有时候不仅仅要看选择项以内的答案，也要去思考选择项以外的答案。——AI悦创浅者见浅，深者见深——黄家宝起的最早的是理想主义者，跑的最快的是骗子，而胆子最大的是那些冒险家，害怕错过一切，疯狂往里冲的是韭菜，而真正的成功者，可能还没有入场。先实现功能，再去优化，否则一切会很乱。——AI悦创凡是你不能清晰写下来的东西，都是你还没有真正理解的东西</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>三个单引号（三个双引号）</p><p>特点：段落<strong>原样输出</strong>。</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;&quot;&quot;我们有时候不仅仅要看选择项以内的答案，也要去思考选择项以外的答案。——AI悦创</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E6DB74;">浅者见浅，深者见深——黄家宝</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E6DB74;">起的最早的是理想主义者，跑的最快的是骗子，而胆子最大的是那些冒险家，害怕错过一切，疯狂往里冲的是韭菜，而真正的成功者，可能还没有入场。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E6DB74;">先实现功能，再去优化，否则一切会很乱。——AI悦创</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E6DB74;">凡是你不能清晰写下来的东西，都是你还没有真正理解的东西&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(string)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">我们有时候不仅仅要看选择项以内的答案，也要去思考选择项以外的答案。——AI悦创</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">浅者见浅，深者见深——黄家宝</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">起的最早的是理想主义者，跑的最快的是骗子，而胆子最大的是那些冒险家，害怕错过一切，疯狂往里冲的是韭菜，而真正的成功者，可能还没有入场。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">先实现功能，再去优化，否则一切会很乱。——AI悦创</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">凡是你不能清晰写下来的东西，都是你还没有真正理解的东西</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div></li></ul><h2 id="_2-字符串的长度" tabindex="-1"><a class="header-anchor" href="#_2-字符串的长度"><span>2. 字符串的长度</span></a></h2><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">paragraph </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;Hello, Ran!&quot;</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">len</span><span style="color:#F8F8F2;">(paragraph))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#AE81FF;">11</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>字符串是从1开始数，下标从左到右是从0开始，<mark>注意区分</mark>。因此，字符串长度 - 1 = 下标最大值。</p><h2 id="_3-字符串的获取" tabindex="-1"><a class="header-anchor" href="#_3-字符串的获取"><span>3. 字符串的获取</span></a></h2>`,12)),s("ol",null,[l[7]||(l[7]=t(`<li><p>获取单个字符</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;bornforthis&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">select </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string[</span><span style="color:#AE81FF;">10</span><span style="color:#F8F8F2;">]                 </span><span style="color:#88846F;"># 方法一： 1. 注意是方括号；2. 方括号内为字符串下标；3. 从左向右的下标</span></span>
<span class="line"><span style="color:#F8F8F2;">select </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string[</span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">]                 </span><span style="color:#88846F;"># 方法二： 从右向左的下标</span></span>
<span class="line"><span style="color:#F8F8F2;">select </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string[</span><span style="color:#66D9EF;">len</span><span style="color:#F8F8F2;">(string)</span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">]      </span><span style="color:#88846F;"># 方法三： 取最后一位，可以参考长度和下标的转换</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(select)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">s</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>`,1)),s("li",null,[l[6]||(l[6]=s("p",null,"获取一串连续字符",-1)),s("ul",null,[l[5]||(l[5]=t(`<li><p>方法一：从左向右取下标</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;bornforthis&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">select </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">]      </span><span style="color:#88846F;">#中括号内第一位数字表示字符串开始位置的下标，第二位数字表示结束位置的下标+1，用数学解释即 [0, 4)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(select)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">born</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>`,1)),s("li",null,[l[4]||(l[4]=s("p",null,[n("方法二：从右向左取下标（右数第一位下标是 ``-1"),s("code",null,"如何实现"),n("end + 1`？）")],-1)),r(o,{id:"78",data:[{id:"错误取负数下标"},{id:"正确取负数下标"}]},{title0:e(({value:a,isActive:i})=>l[0]||(l[0]=[n("错误取负数下标")])),title1:e(({value:a,isActive:i})=>l[1]||(l[1]=[n("正确取负数下标")])),tab0:e(({value:a,isActive:i})=>l[2]||(l[2]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string2 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "bornforthis"')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"select2 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string2["),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#AE81FF"}},"4"),s("span",{style:{color:"#F8F8F2"}},":"),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},"]")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(select2)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"thi")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:e(({value:a,isActive:i})=>l[3]||(l[3]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string2 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "bornforthis"')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"select2 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string2["),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#AE81FF"}},"4"),s("span",{style:{color:"#F8F8F2"}},":]      "),s("span",{style:{color:"#88846F"}},"#-4 是负数下标，end 处空白默认从左向右取到字符串的最后，就不需要考虑 end + 1 没有对应下标的问题，end 部分未指定，则默认从左向右取")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(select2)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"this")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1})])])]),l[8]||(l[8]=t(`<li><p>获取等间隔的字符</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;0123456789&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">select </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;">len</span><span style="color:#F8F8F2;">(string): </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">]      </span><span style="color:#88846F;">#语法：select = string[start: end: step] step指步长，即走几步 or 两相邻字符下标相减</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(select)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">string2 </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;bornforthis&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">select2 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string2[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;">len</span><span style="color:#F8F8F2;">(string2): </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(select2)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">select3 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string2[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;">len</span><span style="color:#F8F8F2;">(string2): </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(select3)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#AE81FF;">13579</span></span>
<span class="line"><span style="color:#F8F8F2;">bnri</span></span>
<span class="line"><span style="color:#F8F8F2;">ofts</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>若要取的字符串开头/结尾是整段的字符串的开头/结尾，则可以省略 start 和 end，不是整段字符串开头/结尾则不能省略下标。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;0123456789&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">select </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">:: </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(select)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">string2 </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;bornforthis&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">select2 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string2[:: </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(select2)</span></span>
<span class="line"><span style="color:#F8F8F2;">select3 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string2[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">:: </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(select3)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#AE81FF;">13579</span></span>
<span class="line"><span style="color:#F8F8F2;">bnri</span></span>
<span class="line"><span style="color:#F8F8F2;">ofts</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>负数下标的提取（下标从右向左）</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;0123456789&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">select </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string[</span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">: </span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">11</span><span style="color:#F8F8F2;">: </span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">]    </span><span style="color:#88846F;">#可简写成 select = string[:: -1] 步长 -1 表示从右向左取（-），每次走1步，只有步长方向和start-end方向一致时才能输出结果</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(select)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#AE81FF;">9876543210</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>思考流程：</p><figure><img src="`+u+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></li>',1))]),l[102]||(l[102]=t(`<h2 id="_4-字符串的内置方法" tabindex="-1"><a class="header-anchor" href="#_4-字符串的内置方法"><span>4. 字符串的内置方法</span></a></h2><h3 id="_4-1-upper" tabindex="-1"><a class="header-anchor" href="#_4-1-upper"><span>4.1 upper()</span></a></h3><p>将字符串内容全部变为大写。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;bornforthis&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">upper_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.upper()</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(upper_string)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#AE81FF;">BORNFORTHIS</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2-lower" tabindex="-1"><a class="header-anchor" href="#_4-2-lower"><span>4.2 lower()</span></a></h3><p>将字符串内容全部变为小写。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;BORNFORTHIS&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">lower_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.lower()</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(lower_string)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">bornforthis</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-3-capitalize" tabindex="-1"><a class="header-anchor" href="#_4-3-capitalize"><span>4.3 capitalize()</span></a></h3><p>将字符串首字母大写。（只对第一个字母大写，其他后面的字母变为小写）</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;bornForthis to Aivc&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">capitalize_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.capitalize()</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(capitalize_string)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">Bornforthis to aivc</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-4-title" tabindex="-1"><a class="header-anchor" href="#_4-4-title"><span>4.4 title()</span></a></h3><p>将字符串中每个单词的首字母大写，其余字符都转换成小写。</p>`,12)),r(o,{id:"140",data:[{id:"1. 每个单词首字母大写"},{id:"2. 各种分隔符依旧首字母大写"},{id:"3. 大小写字母混合，除首字母外其余均小写"}]},{title0:e(({value:a,isActive:i})=>l[9]||(l[9]=[n("1. 每个单词首字母大写")])),title1:e(({value:a,isActive:i})=>l[10]||(l[10]=[n("2. 各种分隔符依旧首字母大写")])),title2:e(({value:a,isActive:i})=>l[11]||(l[11]=[n("3. 大小写字母混合，除首字母外其余均小写")])),tab0:e(({value:a,isActive:i})=>l[12]||(l[12]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "bornforthis to aivc"')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"title_string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.title()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(title_string)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"Bornforthis To Aivc")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:e(({value:a,isActive:i})=>l[13]||(l[13]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "bornforthis-to-aivc"')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"title_string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.title()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(title_string)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"Bornforthis"),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}},"To"),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}},"Aivc")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab2:e(({value:a,isActive:i})=>l[14]||(l[14]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "boRnforThis to aIvc"')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"title_string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.title()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(title_string)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"Bornforthis To Aivc")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1}),l[103]||(l[103]=s("h3",{id:"_4-5-startswith",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_4-5-startswith"},[s("span",null,"4.5 startswith()")])],-1)),l[104]||(l[104]=s("p",null,"检测字符串是否以特定字符或单词开头，返回布尔值。",-1)),r(o,{id:"160",data:[{id:"1. 是否 b 开头"},{id:"2. 是否 bo 开头"},{id:"3. 是否 p 开头"},{id:"4. 是否 b1 开头"}]},{title0:e(({value:a,isActive:i})=>l[15]||(l[15]=[n("1. 是否 b 开头")])),title1:e(({value:a,isActive:i})=>l[16]||(l[16]=[n("2. 是否 bo 开头")])),title2:e(({value:a,isActive:i})=>l[17]||(l[17]=[n("3. 是否 p 开头")])),title3:e(({value:a,isActive:i})=>l[18]||(l[18]=[n("4. 是否 b1 开头")])),tab0:e(({value:a,isActive:i})=>l[19]||(l[19]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "bornforthis"')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"startswith_string"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.startswith("),s("span",{style:{color:"#E6DB74"}},'"b"'),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(startswith_string)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"True")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:e(({value:a,isActive:i})=>l[20]||(l[20]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "bornforthis"')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"startswith_string"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.startswith("),s("span",{style:{color:"#E6DB74"}},'"bo"'),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(startswith_string)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"True")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab2:e(({value:a,isActive:i})=>l[21]||(l[21]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "bornforthis"')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"startswith_string"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.startswith("),s("span",{style:{color:"#E6DB74"}},'"p"'),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(startswith_string)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"False")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab3:e(({value:a,isActive:i})=>l[22]||(l[22]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "bornforthis"')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"startswith_string"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.startswith("),s("span",{style:{color:"#E6DB74"}},'"b1"'),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(startswith_string)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"False")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1}),l[105]||(l[105]=s("h3",{id:"_4-6-endswith",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_4-6-endswith"},[s("span",null,"4.6 endswith()")])],-1)),l[106]||(l[106]=s("p",null,"检测字符串是否以特定的字符或单词结尾，返回布尔值。",-1)),r(o,{id:"183",data:[{id:"1. 是否 s 结尾"},{id:"2. 是否 is 结尾"},{id:"3. 是否 i 结尾"},{id:"4. 是否 s6 结尾"}]},{title0:e(({value:a,isActive:i})=>l[23]||(l[23]=[n("1. 是否 s 结尾")])),title1:e(({value:a,isActive:i})=>l[24]||(l[24]=[n("2. 是否 is 结尾")])),title2:e(({value:a,isActive:i})=>l[25]||(l[25]=[n("3. 是否 i 结尾")])),title3:e(({value:a,isActive:i})=>l[26]||(l[26]=[n("4. 是否 s6 结尾")])),tab0:e(({value:a,isActive:i})=>l[27]||(l[27]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "bornforthis"')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"endswith_string"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.endswith("),s("span",{style:{color:"#E6DB74"}},'"s"'),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(endswith_string)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"Ture")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:e(({value:a,isActive:i})=>l[28]||(l[28]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "bornforthis"')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"endswith_string"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.endswith("),s("span",{style:{color:"#E6DB74"}},'"is"'),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(endswith_string)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"Ture")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab2:e(({value:a,isActive:i})=>l[29]||(l[29]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "bornforthis"')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"endswith_string"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.endswith("),s("span",{style:{color:"#E6DB74"}},'"i"'),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(endswith_string)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"False")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab3:e(({value:a,isActive:i})=>l[30]||(l[30]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "bornforthis"')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"endswith_string"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.endswith("),s("span",{style:{color:"#E6DB74"}},'"s6"'),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(endswith_string)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"False")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1}),l[107]||(l[107]=s("h3",{id:"_4-7-count",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_4-7-count"},[s("span",null,"4.7 count()")])],-1)),l[108]||(l[108]=s("p",null,"统计特定字符或单词在目标字符串中存在的次数。",-1)),r(o,{id:"206",data:[{id:"1. 字母 r 出现的次数"},{id:"2. 字母 or 出现的次数"},{id:"3. 字母 a 出现的次数（字符串中无）"},{id:"4. 字符串 ap 出现的次数"}]},{title0:e(({value:a,isActive:i})=>l[31]||(l[31]=[n("1. 字母 r 出现的次数")])),title1:e(({value:a,isActive:i})=>l[32]||(l[32]=[n("2. 字母 or 出现的次数")])),title2:e(({value:a,isActive:i})=>l[33]||(l[33]=[n("3. 字母 a 出现的次数（字符串中无）")])),title3:e(({value:a,isActive:i})=>l[34]||(l[34]=[n("4. 字符串 ap 出现的次数")])),tab0:e(({value:a,isActive:i})=>l[35]||(l[35]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "bornforthis"')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"count_string"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.count("),s("span",{style:{color:"#E6DB74"}},'"r"'),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(count_string)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"2")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:e(({value:a,isActive:i})=>l[36]||(l[36]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "bornforthis"')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"count_string"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.count("),s("span",{style:{color:"#E6DB74"}},'"or"'),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(count_string)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"2")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab2:e(({value:a,isActive:i})=>l[37]||(l[37]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "bornforthis"')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"count_string"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.count("),s("span",{style:{color:"#E6DB74"}},'"a"'),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(count_string)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"0")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab3:e(({value:a,isActive:i})=>l[38]||(l[38]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "bornforthis"')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"count_string"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.count("),s("span",{style:{color:"#E6DB74"}},'"ap"'),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(count_string)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"0")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1}),l[109]||(l[109]=s("h3",{id:"_4-8-find",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_4-8-find"},[s("span",null,"4.8 find()")])],-1)),l[110]||(l[110]=s("p",null,"寻找目标字符或单词在特定字符串中，第一次出现的下标。也就是说，有重复，也之返回第一次出现的下标；",-1)),l[111]||(l[111]=s("p",null,"若查找单词，则返回目标单词第一个字符的下标；",-1)),l[112]||(l[112]=s("p",null,[n("若查询的内容不存在，则返回 "),s("code",null,"-1"),n("。")],-1)),r(o,{id:"235",data:[{id:"1. 字符 o 第一次出现的位置"},{id:"2. 字符 a 第一次出现的位置"},{id:"3. 子字符串 for 第一次出现的位置"},{id:"4. 子字符串 aivc 第一次出现的位置"}]},{title0:e(({value:a,isActive:i})=>l[39]||(l[39]=[n("1. 字符 o 第一次出现的位置")])),title1:e(({value:a,isActive:i})=>l[40]||(l[40]=[n("2. 字符 a 第一次出现的位置")])),title2:e(({value:a,isActive:i})=>l[41]||(l[41]=[n("3. 子字符串 for 第一次出现的位置")])),title3:e(({value:a,isActive:i})=>l[42]||(l[42]=[n("4. 子字符串 aivc 第一次出现的位置")])),tab0:e(({value:a,isActive:i})=>l[43]||(l[43]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "bornforthis"')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"find_string"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.find("),s("span",{style:{color:"#E6DB74"}},'"o"'),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(find_string)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"1")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:e(({value:a,isActive:i})=>l[44]||(l[44]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "bornforthis"')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"find_string"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.find("),s("span",{style:{color:"#E6DB74"}},'"a"'),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(find_string)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#AE81FF"}},"1")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab2:e(({value:a,isActive:i})=>l[45]||(l[45]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "bornforthis"')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"find_string"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.find("),s("span",{style:{color:"#E6DB74"}},'"for"'),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(find_string)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"4")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab3:e(({value:a,isActive:i})=>l[46]||(l[46]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "bornforthis"')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"find_string"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.find("),s("span",{style:{color:"#E6DB74"}},'"aivc"'),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(find_string)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#AE81FF"}},"1")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1}),l[113]||(l[113]=t('<h3 id="_4-9-index" tabindex="-1"><a class="header-anchor" href="#_4-9-index"><span>4.9 index()</span></a></h3><p>寻找目标字符或单词在特定字符串中，第一次出现的下标。如果是查找单词，那么 <code>index()</code> 返回目标单词的第一个字符下标。</p><p>如果查询的字符或单词不存在，则报错。</p><div class="hint-container info"><p class="hint-container-title">index() vs. find()</p><p><code>index()</code> 在找不到指定字符/字符串时会报错，提供文件信息和位置，便于定位被搜索的字符串的位置，那么在文件或代码较多的情况下，使用 <code>index()</code> 可以帮助精准定位。但报错会引发程序运行停止，若不希望程序中止，则需要确保检索的字符/字符串一定存在于被检索的字符串中。</p><p><code>find()</code> 的可控性更强，搜索不到时，会返回值 <code>-1</code> ，但是程序不会停止，在发布或面向用户场景下更为合适。</p></div>',4)),r(o,{id:"269",data:[{id:"1. 查找字符 o 第一次出现的位置"},{id:"2. 查找字符 a 第一次出现的位置"},{id:"3. 子字符串 for 第一次出现的位置"},{id:"4. 子字符串 aivc 第一次出现的位置"}]},{title0:e(({value:a,isActive:i})=>l[47]||(l[47]=[n("1. 查找字符 o 第一次出现的位置")])),title1:e(({value:a,isActive:i})=>l[48]||(l[48]=[n("2. 查找字符 a 第一次出现的位置")])),title2:e(({value:a,isActive:i})=>l[49]||(l[49]=[n("3. 子字符串 for 第一次出现的位置")])),title3:e(({value:a,isActive:i})=>l[50]||(l[50]=[n("4. 子字符串 aivc 第一次出现的位置")])),tab0:e(({value:a,isActive:i})=>l[51]||(l[51]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "bornforthis"')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"index_result "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.index("),s("span",{style:{color:"#E6DB74"}},'"o"'),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(index_result)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"1")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:e(({value:a,isActive:i})=>l[52]||(l[52]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "bornforthis"')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"index_result "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.index("),s("span",{style:{color:"#E6DB74"}},'"a"'),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(index_result)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"Traceback (most recent call last):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  File "),s("span",{style:{color:"#E6DB74"}},'"D:\\Coder'),s("span",{style:{color:"#AE81FF"}},"\\t"),s("span",{style:{color:"#E6DB74"}},"est 1"),s("span",{style:{color:"#AE81FF"}},"\\t"),s("span",{style:{color:"#E6DB74"}},'est 1.1.py"'),s("span",{style:{color:"#F8F8F2"}},", line "),s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#F92672"}},"in"),s("span",{style:{color:"#F92672"}}," <"),s("span",{style:{color:"#F8F8F2"}},"module"),s("span",{style:{color:"#F92672"}},">")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    index_result "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.index("),s("span",{style:{color:"#E6DB74"}},'"a"'),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"ValueError"),s("span",{style:{color:"#F8F8F2"}},": substring "),s("span",{style:{color:"#F92672"}},"not"),s("span",{style:{color:"#F8F8F2"}}," found")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab2:e(({value:a,isActive:i})=>l[53]||(l[53]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "bornforthis"')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"index_result "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.index("),s("span",{style:{color:"#E6DB74"}},'"for"'),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(index_result)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"4")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab3:e(({value:a,isActive:i})=>l[54]||(l[54]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "bornforthis"')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"index_result "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.index("),s("span",{style:{color:"#E6DB74"}},'"aivc"'),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(index_result)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"Traceback (most recent call last):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  File "),s("span",{style:{color:"#E6DB74"}},'"D:\\Coder'),s("span",{style:{color:"#AE81FF"}},"\\t"),s("span",{style:{color:"#E6DB74"}},"est 1"),s("span",{style:{color:"#AE81FF"}},"\\t"),s("span",{style:{color:"#E6DB74"}},'est 1.1.py"'),s("span",{style:{color:"#F8F8F2"}},", line "),s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#F92672"}},"in"),s("span",{style:{color:"#F92672"}}," <"),s("span",{style:{color:"#F8F8F2"}},"module"),s("span",{style:{color:"#F92672"}},">")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    index_result "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.index("),s("span",{style:{color:"#E6DB74"}},'"aivc"'),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"ValueError"),s("span",{style:{color:"#F8F8F2"}},": substring "),s("span",{style:{color:"#F92672"}},"not"),s("span",{style:{color:"#F8F8F2"}}," found")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1}),l[114]||(l[114]=t(`<div class="hint-container note"><p class="hint-container-title">使用场景</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;Experiment-record.xlsx&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">index_result </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.index(</span><span style="color:#E6DB74;">&#39;.&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">filename </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string[:index_result]</span></span>
<span class="line"><span style="color:#F8F8F2;">suffix </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string[index_result</span><span style="color:#F92672;">+</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">:]</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(filename)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(suffix)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">Experiment</span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;">record</span></span>
<span class="line"><span style="color:#F8F8F2;">xlsx</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><div class="hint-container note"><p class="hint-container-title">使用场景练习</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">line </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;ID=1234;NAME=Tom;AGE=25&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">name_start </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> line.index(</span><span style="color:#E6DB74;">&#39;NAME=&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">name_end </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> line.index(</span><span style="color:#E6DB74;">&#39;;AGE&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">name </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> line[name_start</span><span style="color:#F92672;">+</span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">:name_end]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(name_start)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(name_end)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(name)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#AE81FF;">8</span></span>
<span class="line"><span style="color:#AE81FF;">16</span></span>
<span class="line"><span style="color:#F8F8F2;">Tom</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h3 id="_4-10-isdigit" tabindex="-1"><a class="header-anchor" href="#_4-10-isdigit"><span>4.10 isdigit()</span></a></h3><p>判断字符串是不是纯数字字符串，字符串中但凡有个字符是非数字，则返回 False 。</p>`,4)),r(o,{id:"298",data:[{id:"判断是否纯数字"},{id:"若数字中出现空格"}]},{title0:e(({value:a,isActive:i})=>l[55]||(l[55]=[n("判断是否纯数字")])),title1:e(({value:a,isActive:i})=>l[56]||(l[56]=[n("若数字中出现空格")])),tab0:e(({value:a,isActive:i})=>l[57]||(l[57]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "12345678"')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"isdigit_result "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.isdigit()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(isdigit_result)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"True")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:e(({value:a,isActive:i})=>l[58]||(l[58]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "1234 5678"')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"isdigit_result "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.isdigit()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(isdigit_result)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"False")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1}),l[115]||(l[115]=s("h3",{id:"_4-11-isalpha",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_4-11-isalpha"},[s("span",null,"4.11 isalpha()")])],-1)),l[116]||(l[116]=s("p",null,"判断字符串是不是纯字母字符串，字符串中但凡有一个非字母的，则返回 False 。",-1)),r(o,{id:"315",data:[{id:"判断是否全为字母"},{id:"出现空格"}]},{title0:e(({value:a,isActive:i})=>l[59]||(l[59]=[n("判断是否全为字母")])),title1:e(({value:a,isActive:i})=>l[60]||(l[60]=[n("出现空格")])),tab0:e(({value:a,isActive:i})=>l[61]||(l[61]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "Impeppapig"')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"isalpha_result "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.isalpha()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(isalpha_result)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"True")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:e(({value:a,isActive:i})=>l[62]||(l[62]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "Im peppa pig"')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"isalpha_result "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.isalpha()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(isalpha_result)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"False")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1}),l[117]||(l[117]=s("h3",{id:"_4-12-isalnum",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_4-12-isalnum"},[s("span",null,"4.12 isalnum()")])],-1)),l[118]||(l[118]=s("p",null,"判断字符串是否纯数字、纯字母、纯数字字母字符串，字符串中如果包含任何非数字或字母字符，则返回 False 。",-1)),r(o,{id:"332",data:[{id:"判断是否全为数字字母"},{id:"出现空格"}]},{title0:e(({value:a,isActive:i})=>l[63]||(l[63]=[n("判断是否全为数字字母")])),title1:e(({value:a,isActive:i})=>l[64]||(l[64]=[n("出现空格")])),tab0:e(({value:a,isActive:i})=>l[65]||(l[65]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"code "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "peppapig1"')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"valid_code "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," code.isalnum()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(valid_code)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"True")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:e(({value:a,isActive:i})=>l[66]||(l[66]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"code "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "peppa pig1"')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"valid_code "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," code.isalnum()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(valid_code)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"False")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1}),l[119]||(l[119]=s("h3",{id:"_4-13-isupper",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_4-13-isupper"},[s("span",null,"4.13 isupper()")])],-1)),l[120]||(l[120]=s("p",null,"判断字符串是否全大写字母组成。",-1)),r(o,{id:"349",data:[{id:"1. 判断是否全大写字母"},{id:"2. 出现空格、其他符号"},{id:"3. 混合大小写"},{id:"4. 全小写字母"}]},{title0:e(({value:a,isActive:i})=>l[67]||(l[67]=[n("1. 判断是否全大写字母")])),title1:e(({value:a,isActive:i})=>l[68]||(l[68]=[n("2. 出现空格、其他符号")])),title2:e(({value:a,isActive:i})=>l[69]||(l[69]=[n("3. 混合大小写")])),title3:e(({value:a,isActive:i})=>l[70]||(l[70]=[n("4. 全小写字母")])),tab0:e(({value:a,isActive:i})=>l[71]||(l[71]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"name "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "PEPPERPIG"')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"isupper_name "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," name.isupper()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(isupper_name)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"True")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:e(({value:a,isActive:i})=>l[72]||(l[72]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"name "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "PEPPER PIG1-"')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"isupper_name "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," name.isupper()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(isupper_name)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"True")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab2:e(({value:a,isActive:i})=>l[73]||(l[73]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"name "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "PEPPERpig"')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"isupper_name "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," name.isupper()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(isupper_name)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"False")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab3:e(({value:a,isActive:i})=>l[74]||(l[74]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"name "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "pepperpig"')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"isupper_name "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," name.isupper()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(isupper_name)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"False")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1}),l[121]||(l[121]=s("h3",{id:"_4-14-islower",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_4-14-islower"},[s("span",null,"4.14 islower()")])],-1)),l[122]||(l[122]=s("p",null,"判断字符串是否全小写字母组成。",-1)),r(o,{id:"372",data:[{id:"1. 是否全小写"},{id:"2. 大小写混合"},{id:"3. 全部大写"}]},{title0:e(({value:a,isActive:i})=>l[75]||(l[75]=[n("1. 是否全小写")])),title1:e(({value:a,isActive:i})=>l[76]||(l[76]=[n("2. 大小写混合")])),title2:e(({value:a,isActive:i})=>l[77]||(l[77]=[n("3. 全部大写")])),tab0:e(({value:a,isActive:i})=>l[78]||(l[78]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"name "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "pepper pig1-=、"')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"islower_name "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," name.islower()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(islower_name)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"True")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:e(({value:a,isActive:i})=>l[79]||(l[79]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"name "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "PEPPERpig"')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"islower_name "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," name.islower()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(islower_name)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"False")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab2:e(({value:a,isActive:i})=>l[80]||(l[80]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"name "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "PEPPERPIG"')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"islower_name "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," name.islower()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(islower_name)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"False")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1}),l[123]||(l[123]=s("h3",{id:"_4-15-isspace",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_4-15-isspace"},[s("span",null,"4.15 isspace()")])],-1)),l[124]||(l[124]=s("p",null,"判断字符串是否全部由空格组成。",-1)),r(o,{id:"392",data:[{id:"<strong>空格</strong>字符串"},{id:"<strong>空</strong>字符串"},{id:"非空格字符串"}]},{title0:e(({value:a,isActive:i})=>l[81]||(l[81]=[s("strong",null,"空格",-1),n("字符串")])),title1:e(({value:a,isActive:i})=>l[82]||(l[82]=[s("strong",null,"空",-1),n("字符串")])),title2:e(({value:a,isActive:i})=>l[83]||(l[83]=[n("非空格字符串")])),tab0:e(({value:a,isActive:i})=>l[84]||(l[84]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"input1 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "   "')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"isspace_input1 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," input1.isspace()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(isspace_input1)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"True")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:e(({value:a,isActive:i})=>l[85]||(l[85]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"input1 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' ""')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"isspace_input1 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," input1.isspace()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(isspace_input1)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"False")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab2:e(({value:a,isActive:i})=>l[86]||(l[86]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"input1 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "123asd-=["')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"isspace_input1 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," input1.isspace()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(isspace_input1)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"False")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1}),l[125]||(l[125]=s("h3",{id:"_4-16-strip",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_4-16-strip"},[s("span",null,"4.16 strip()")])],-1)),r(o,{id:"409",data:[{id:"1. 清除字符串前后（两侧）空格"},{id:"2. 指定两侧需要清除的字符串（需连续）"}]},{title0:e(({value:a,isActive:i})=>l[87]||(l[87]=[n("1. 清除字符串前后（两侧）空格")])),title1:e(({value:a,isActive:i})=>l[88]||(l[88]=[n("2. 指定两侧需要清除的字符串（需连续）")])),tab0:e(({value:a,isActive:i})=>l[89]||(l[89]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},` "     I'm pepper pig.     "`)]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"strip_string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.strip()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"Original string:"'),s("span",{style:{color:"#F8F8F2"}},", string)")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"String after stripping:"'),s("span",{style:{color:"#F8F8F2"}},", strip_string)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"Original string:      I"),s("span",{style:{color:"#E6DB74"}},"'m pepper pig.     ")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"String after stripping: I"),s("span",{style:{color:"#E6DB74"}},"'m pepper pig.")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:e(({value:a,isActive:i})=>l[90]||(l[90]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},` "----I'm pepper pig.----"`)]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"strip_string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.strip("),s("span",{style:{color:"#E6DB74"}},'"-"'),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"Original string:"'),s("span",{style:{color:"#F8F8F2"}},", string)")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"String after stripping:"'),s("span",{style:{color:"#F8F8F2"}},", strip_string)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"Original string: "),s("span",{style:{color:"#F44747"}},"----"),s("span",{style:{color:"#F8F8F2"}},"I"),s("span",{style:{color:"#E6DB74"}},"'m pepper pig.----")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"String after stripping: I"),s("span",{style:{color:"#E6DB74"}},"'m pepper pig.")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1}),r(o,{id:"420",data:[{id:"s 1. 清除两侧指定字符串，且指定的字符串中间间隔其他字符"},{id:"2. 解决方案"}]},{title0:e(({value:a,isActive:i})=>l[91]||(l[91]=[n("s 1. 清除两侧指定字符串，且指定的字符串中间间隔其他字符")])),title1:e(({value:a,isActive:i})=>l[92]||(l[92]=[n("2. 解决方案")])),tab0:e(({value:a,isActive:i})=>l[93]||(l[93]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},` "---  -I'm pepper pig.--  ?--"`)]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"strip_string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.strip("),s("span",{style:{color:"#E6DB74"}},'"-"'),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"Original string:"'),s("span",{style:{color:"#F8F8F2"}},", string)")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"String after stripping:"'),s("span",{style:{color:"#F8F8F2"}},", strip_string)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"Original string: "),s("span",{style:{color:"#F44747"}},"--"),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F92672"}},"  -"),s("span",{style:{color:"#F8F8F2"}},"I"),s("span",{style:{color:"#E6DB74"}},"'m pepper pig.--  ?--")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"String after stripping:   "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}},"I"),s("span",{style:{color:"#E6DB74"}},"'m pepper pig.--  ?")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:e(({value:a,isActive:i})=>l[94]||(l[94]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},` "---  -I'm pepper pig.--  ?--"`)]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"strip_string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.strip("),s("span",{style:{color:"#E6DB74"}},'" -?"'),s("span",{style:{color:"#F8F8F2"}},")      "),s("span",{style:{color:"#88846F"}},"#把要去掉的都扔在里面，不分先后顺序")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"Original string:"'),s("span",{style:{color:"#F8F8F2"}},", string)")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"String after stripping:"'),s("span",{style:{color:"#F8F8F2"}},", strip_string)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"Original string: "),s("span",{style:{color:"#F44747"}},"--"),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F92672"}},"  -"),s("span",{style:{color:"#F8F8F2"}},"I"),s("span",{style:{color:"#E6DB74"}},"'m pepper pig.--  ?--")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"String after stripping: I"),s("span",{style:{color:"#E6DB74"}},"'m pepper pig.")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1}),l[126]||(l[126]=s("h3",{id:"_4-17-lstrip",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_4-17-lstrip"},[s("span",null,"4.17 lstrip()")])],-1)),l[127]||(l[127]=s("p",null,"去掉左侧，()内包含的所有字符的连续字符串。",-1)),r(o,{id:"437",data:[{id:"1. 去掉左侧空格"},{id:"2. 去掉左侧字符"},{id:"去掉左侧多种字符"}]},{title0:e(({value:a,isActive:i})=>l[95]||(l[95]=[n("1. 去掉左侧空格")])),title1:e(({value:a,isActive:i})=>l[96]||(l[96]=[n("2. 去掉左侧字符")])),title2:e(({value:a,isActive:i})=>l[97]||(l[97]=[n("去掉左侧多种字符")])),tab0:e(({value:a,isActive:i})=>l[98]||(l[98]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},` "    I'm pepper pig.    "`)]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"lstrip_string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.lstrip()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"Original string:"'),s("span",{style:{color:"#F8F8F2"}},", string)")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"String after stripping:"'),s("span",{style:{color:"#F8F8F2"}},", lstrip_string)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"Original string:     I"),s("span",{style:{color:"#E6DB74"}},"'m pepper pig.    ")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"String after stripping: I"),s("span",{style:{color:"#E6DB74"}},"'m pepper pig.")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:e(({value:a,isActive:i})=>l[99]||(l[99]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},` "-----I'm pepper pig.-----"`)]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"lstrip_string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.lstrip("),s("span",{style:{color:"#E6DB74"}},'"-"'),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"Original string:"'),s("span",{style:{color:"#F8F8F2"}},", string)")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"String after stripping:"'),s("span",{style:{color:"#F8F8F2"}},", lstrip_string)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"Original string: "),s("span",{style:{color:"#F44747"}},"----"),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}},"I"),s("span",{style:{color:"#E6DB74"}},"'m pepper pig.-----")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"String after stripping: I"),s("span",{style:{color:"#E6DB74"}},"'m pepper pig.-----")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab2:e(({value:a,isActive:i})=>l[100]||(l[100]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},` "--!--?-I'm pepper pig.-!---?-"`)]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"lstrip_string "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," string.lstrip("),s("span",{style:{color:"#E6DB74"}},'"?-!"'),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"Original string:"'),s("span",{style:{color:"#F8F8F2"}},", string)")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"String after stripping:"'),s("span",{style:{color:"#F8F8F2"}},", lstrip_string)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#-------output-------")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"Original string: "),s("span",{style:{color:"#F44747"}},"--"),s("span",{style:{color:"#F8F8F2"}},"!"),s("span",{style:{color:"#F44747"}},"--?"),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}},"I"),s("span",{style:{color:"#E6DB74"}},"'m pepper pig.-!---?-")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"String after stripping: I"),s("span",{style:{color:"#E6DB74"}},"'m pepper pig.-!---?-")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1}),l[128]||(l[128]=t(`<h3 id="_4-18-rstrip" tabindex="-1"><a class="header-anchor" href="#_4-18-rstrip"><span>4.18 rstrip()</span></a></h3><p>去掉右侧，()内包含的所有字符的连续字符串。</p><p>使用方法同 <code>lstrip()</code></p><h3 id="_4-19-replace" tabindex="-1"><a class="header-anchor" href="#_4-19-replace"><span>4.19 replace()</span></a></h3><p><code>.replace(old, newm count)</code> 括号内第一个位置传入需要替换的 ”旧字符“ ，第二个位置传入要替换的 ”新字符“ ，默认替换全部，count 控制替换次数。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;I&#39;m pepper pig.&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">replace_result </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.replace(</span><span style="color:#E6DB74;">&quot; &quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;!&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;原本的字符串:&quot;</span><span style="color:#F8F8F2;">, string)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;替换后的字符串:&quot;</span><span style="color:#F8F8F2;">, replace_result)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#-------output-------</span></span>
<span class="line"><span style="color:#F8F8F2;">原本的字符串: I</span><span style="color:#E6DB74;">&#39;m pepper pig.</span></span>
<span class="line"><span style="color:#F8F8F2;">替换后的字符串: I</span><span style="color:#E6DB74;">&#39;m!pepper!pig.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6))])}const h=p(y,[["render",v]]),E=JSON.parse(`{"path":"/programming/python/04-string.html","title":"4. 字符串","lang":"zh-CN","frontmatter":{"title":"4. 字符串","icon":"boke","date":"2025-03-27T20:02:55.000Z","author":"Ran","category":["python"],"tag":["python"],"isOriginal":true,"sticky":false,"star":false,"article":true,"timeline":true,"image":false,"navbar":true,"sidebarIcon":true,"headerDepth":5,"comment":true,"lastUpdated":true,"editLink":false,"backToTop":true,"toc":true,"description":"1. 字符串的创建 三种方法： 单引号 双引号 三个单引号（三个双引号） 单引号、双引号 问题：无法直接输出段落。 三个单引号（三个双引号） 特点：段落原样输出。 2. 字符串的长度 字符串是从1开始数，下标从左到右是从0开始，注意区分。因此，字符串长度 - 1 = 下标最大值。 3. 字符串的获取 获取单个字符 获取一串连续字符 方法一：从左向右取下...","head":[["meta",{"property":"og:url","content":"https://pythiaroot.com/programming/python/04-string.html"}],["meta",{"property":"og:site_name","content":"Pythia’s Root"}],["meta",{"property":"og:title","content":"4. 字符串"}],["meta",{"property":"og:description","content":"1. 字符串的创建 三种方法： 单引号 双引号 三个单引号（三个双引号） 单引号、双引号 问题：无法直接输出段落。 三个单引号（三个双引号） 特点：段落原样输出。 2. 字符串的长度 字符串是从1开始数，下标从左到右是从0开始，注意区分。因此，字符串长度 - 1 = 下标最大值。 3. 字符串的获取 获取单个字符 获取一串连续字符 方法一：从左向右取下..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-03T08:03:15.000Z"}],["meta",{"property":"article:author","content":"Ran"}],["meta",{"property":"article:tag","content":"python"}],["meta",{"property":"article:published_time","content":"2025-03-27T20:02:55.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-03T08:03:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"4. 字符串\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-03-27T20:02:55.000Z\\",\\"dateModified\\":\\"2025-04-03T08:03:15.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Ran\\"}]}"]]},"git":{"createdTime":1743079221000,"updatedTime":1743667395000,"contributors":[{"name":"AmaraMeng","username":"AmaraMeng","email":"ranmeng9558@gmail.com","commits":3,"url":"https://github.com/AmaraMeng"}]},"readingTime":{"minutes":11.35,"words":3404},"filePathRelative":"programming/python/04-string.md","localizedDate":"2025年3月27日","excerpt":"<h2>1. 字符串的创建</h2>\\n<p>三种方法：</p>\\n<ol>\\n<li>单引号</li>\\n<li>双引号</li>\\n<li>三个单引号（三个双引号）</li>\\n</ol>\\n<ul>\\n<li>单引号、双引号</li>\\n</ul>\\n<div class=\\"language-python line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"python\\" style=\\"background-color:#272822;color:#F8F8F2\\"><pre class=\\"shiki monokai vp-code\\"><code><span class=\\"line\\"><span style=\\"color:#F8F8F2\\">string </span><span style=\\"color:#F92672\\">=</span><span style=\\"color:#E6DB74\\"> 'I am born for this.'</span><span style=\\"color:#88846F\\">    #英文表达</span></span>\\n<span class=\\"line\\"><span style=\\"color:#88846F\\">#string = 'I'm born for this.'     # I am 缩写成 I‘m，与表示字符串的引号冲突，错误。</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">string </span><span style=\\"color:#F92672\\">=</span><span style=\\"color:#E6DB74\\"> \\"I'm born for this.\\"</span><span style=\\"color:#88846F\\">     # 正确表达</span></span>\\n<span class=\\"line\\"><span style=\\"color:#66D9EF\\">print</span><span style=\\"color:#F8F8F2\\">(string)</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#88846F\\">#-------output-------</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">I</span><span style=\\"color:#E6DB74\\">'m born for this.</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{h as comp,E as data};
